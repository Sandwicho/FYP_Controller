
Hexapod_Controller.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000031d4  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000438  20400000  004031d4  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000bb80  20400438  0040360c  00020438  2**2
                  ALLOC
  3 .stack        00002000  2040bfb8  0040f18c  00020438  2**0
                  ALLOC
  4 .heap         00000200  2040dfb8  0041118c  00020438  2**0
                  ALLOC
  5 .ARM.attributes 0000002e  00000000  00000000  00020438  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  00020466  2**0
                  CONTENTS, READONLY
  7 .debug_info   0001096a  00000000  00000000  000204bf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000296e  00000000  00000000  00030e29  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000080fc  00000000  00000000  00033797  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000cc8  00000000  00000000  0003b893  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000d78  00000000  00000000  0003c55b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00007d8a  00000000  00000000  0003d2d3  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000fa5b  00000000  00000000  0004505d  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0007c3ed  00000000  00000000  00054ab8  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00001f28  00000000  00000000  000d0ea8  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <_sfixed>:
  400000:	2040dfb8 	.word	0x2040dfb8
  400004:	004024ed 	.word	0x004024ed
  400008:	004024e9 	.word	0x004024e9
  40000c:	004024e9 	.word	0x004024e9
  400010:	004024e9 	.word	0x004024e9
  400014:	004024e9 	.word	0x004024e9
  400018:	004024e9 	.word	0x004024e9
	...
  40002c:	004002e1 	.word	0x004002e1
  400030:	004024e9 	.word	0x004024e9
  400034:	00000000 	.word	0x00000000
  400038:	00400381 	.word	0x00400381
  40003c:	004003e9 	.word	0x004003e9
  400040:	004024e9 	.word	0x004024e9
  400044:	004024e9 	.word	0x004024e9
  400048:	004024e9 	.word	0x004024e9
  40004c:	004024e9 	.word	0x004024e9
  400050:	004024e9 	.word	0x004024e9
  400054:	004024e9 	.word	0x004024e9
  400058:	004024e9 	.word	0x004024e9
  40005c:	004024e9 	.word	0x004024e9
  400060:	004024e9 	.word	0x004024e9
  400064:	00000000 	.word	0x00000000
  400068:	00402b1d 	.word	0x00402b1d
  40006c:	004001ed 	.word	0x004001ed
  400070:	00000000 	.word	0x00000000
  400074:	004024e9 	.word	0x004024e9
  400078:	004024e9 	.word	0x004024e9
  40007c:	004024e9 	.word	0x004024e9
  400080:	00400201 	.word	0x00400201
  400084:	00000000 	.word	0x00000000
  400088:	004024e9 	.word	0x004024e9
  40008c:	004024e9 	.word	0x004024e9
  400090:	004024e9 	.word	0x004024e9
  400094:	004024e9 	.word	0x004024e9
  400098:	004024e9 	.word	0x004024e9
  40009c:	004024e9 	.word	0x004024e9
  4000a0:	004024e9 	.word	0x004024e9
  4000a4:	004024e9 	.word	0x004024e9
	...
  4000b4:	00401fd9 	.word	0x00401fd9
  4000b8:	00000000 	.word	0x00000000
  4000bc:	004024e9 	.word	0x004024e9
  4000c0:	004024e9 	.word	0x004024e9
  4000c4:	004024e9 	.word	0x004024e9
  4000c8:	004024e9 	.word	0x004024e9
	...
  4000e0:	00401fed 	.word	0x00401fed
  4000e4:	004024e9 	.word	0x004024e9
  4000e8:	004024e9 	.word	0x004024e9
  4000ec:	004024e9 	.word	0x004024e9
  4000f0:	004024e9 	.word	0x004024e9
  4000f4:	004024e9 	.word	0x004024e9
  4000f8:	004024e9 	.word	0x004024e9
	...
  400108:	004024e9 	.word	0x004024e9
  40010c:	004024e9 	.word	0x004024e9
  400110:	004024e9 	.word	0x004024e9
	...
  400120:	004024e9 	.word	0x004024e9
  400124:	004024e9 	.word	0x004024e9
  400128:	004024e9 	.word	0x004024e9
  40012c:	004024e9 	.word	0x004024e9
  400130:	004024e9 	.word	0x004024e9
	...
  40013c:	004024e9 	.word	0x004024e9

00400140 <__do_global_dtors_aux>:
  400140:	b510      	push	{r4, lr}
  400142:	4c05      	ldr	r4, [pc, #20]	; (400158 <__do_global_dtors_aux+0x18>)
  400144:	7823      	ldrb	r3, [r4, #0]
  400146:	b933      	cbnz	r3, 400156 <__do_global_dtors_aux+0x16>
  400148:	4b04      	ldr	r3, [pc, #16]	; (40015c <__do_global_dtors_aux+0x1c>)
  40014a:	b113      	cbz	r3, 400152 <__do_global_dtors_aux+0x12>
  40014c:	4804      	ldr	r0, [pc, #16]	; (400160 <__do_global_dtors_aux+0x20>)
  40014e:	f3af 8000 	nop.w
  400152:	2301      	movs	r3, #1
  400154:	7023      	strb	r3, [r4, #0]
  400156:	bd10      	pop	{r4, pc}
  400158:	20400438 	.word	0x20400438
  40015c:	00000000 	.word	0x00000000
  400160:	004031d4 	.word	0x004031d4

00400164 <frame_dummy>:
  400164:	4b08      	ldr	r3, [pc, #32]	; (400188 <frame_dummy+0x24>)
  400166:	b510      	push	{r4, lr}
  400168:	b11b      	cbz	r3, 400172 <frame_dummy+0xe>
  40016a:	4908      	ldr	r1, [pc, #32]	; (40018c <frame_dummy+0x28>)
  40016c:	4808      	ldr	r0, [pc, #32]	; (400190 <frame_dummy+0x2c>)
  40016e:	f3af 8000 	nop.w
  400172:	4808      	ldr	r0, [pc, #32]	; (400194 <frame_dummy+0x30>)
  400174:	6803      	ldr	r3, [r0, #0]
  400176:	b903      	cbnz	r3, 40017a <frame_dummy+0x16>
  400178:	bd10      	pop	{r4, pc}
  40017a:	4b07      	ldr	r3, [pc, #28]	; (400198 <frame_dummy+0x34>)
  40017c:	2b00      	cmp	r3, #0
  40017e:	d0fb      	beq.n	400178 <frame_dummy+0x14>
  400180:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400184:	4718      	bx	r3
  400186:	bf00      	nop
  400188:	00000000 	.word	0x00000000
  40018c:	2040043c 	.word	0x2040043c
  400190:	004031d4 	.word	0x004031d4
  400194:	004031d4 	.word	0x004031d4
  400198:	00000000 	.word	0x00000000

0040019c <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  40019c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4001a0:	4604      	mov	r4, r0
  4001a2:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  4001a4:	4b0e      	ldr	r3, [pc, #56]	; (4001e0 <pio_handler_process+0x44>)
  4001a6:	4798      	blx	r3
  4001a8:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  4001aa:	4620      	mov	r0, r4
  4001ac:	4b0d      	ldr	r3, [pc, #52]	; (4001e4 <pio_handler_process+0x48>)
  4001ae:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  4001b0:	4005      	ands	r5, r0
  4001b2:	d013      	beq.n	4001dc <pio_handler_process+0x40>
  4001b4:	4c0c      	ldr	r4, [pc, #48]	; (4001e8 <pio_handler_process+0x4c>)
  4001b6:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
		/* Find triggering source */
		i = 0;
		while (status != 0) {
			/* Source is configured on the same controller */
			if (gs_interrupt_sources[i].id == ul_id) {
  4001ba:	6823      	ldr	r3, [r4, #0]
  4001bc:	4543      	cmp	r3, r8
  4001be:	d108      	bne.n	4001d2 <pio_handler_process+0x36>
				/* Source has PIOs whose statuses have changed */
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  4001c0:	6861      	ldr	r1, [r4, #4]
  4001c2:	4229      	tst	r1, r5
  4001c4:	d005      	beq.n	4001d2 <pio_handler_process+0x36>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  4001c6:	68e3      	ldr	r3, [r4, #12]
  4001c8:	4640      	mov	r0, r8
  4001ca:	4798      	blx	r3
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
  4001cc:	6863      	ldr	r3, [r4, #4]
  4001ce:	ea25 0503 	bic.w	r5, r5, r3
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  4001d2:	42bc      	cmp	r4, r7
  4001d4:	d002      	beq.n	4001dc <pio_handler_process+0x40>
  4001d6:	3410      	adds	r4, #16

	/* Check pending events */
	if (status != 0) {
		/* Find triggering source */
		i = 0;
		while (status != 0) {
  4001d8:	2d00      	cmp	r5, #0
  4001da:	d1ee      	bne.n	4001ba <pio_handler_process+0x1e>
  4001dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4001e0:	00402155 	.word	0x00402155
  4001e4:	00402159 	.word	0x00402159
  4001e8:	20400454 	.word	0x20400454

004001ec <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  4001ec:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  4001ee:	210b      	movs	r1, #11
  4001f0:	4801      	ldr	r0, [pc, #4]	; (4001f8 <PIOB_Handler+0xc>)
  4001f2:	4b02      	ldr	r3, [pc, #8]	; (4001fc <PIOB_Handler+0x10>)
  4001f4:	4798      	blx	r3
  4001f6:	bd08      	pop	{r3, pc}
  4001f8:	400e1000 	.word	0x400e1000
  4001fc:	0040019d 	.word	0x0040019d

00400200 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
  400200:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
  400202:	2110      	movs	r1, #16
  400204:	4801      	ldr	r0, [pc, #4]	; (40020c <PIOD_Handler+0xc>)
  400206:	4b02      	ldr	r3, [pc, #8]	; (400210 <PIOD_Handler+0x10>)
  400208:	4798      	blx	r3
  40020a:	bd08      	pop	{r3, pc}
  40020c:	400e1400 	.word	0x400e1400
  400210:	0040019d 	.word	0x0040019d

00400214 <supc_switch_sclk_to_32kxtal>:
 * \param ul_bypass 0 for Xtal, 1 for bypass.
 */
void supc_switch_sclk_to_32kxtal(Supc *p_supc, uint32_t ul_bypass)
{
	/* Set Bypass mode if required */
	if (ul_bypass == 1) {
  400214:	2901      	cmp	r1, #1
  400216:	d104      	bne.n	400222 <supc_switch_sclk_to_32kxtal+0xe>
		p_supc->SUPC_MR |= SUPC_MR_KEY_PASSWD | SUPC_MR_OSCBYPASS;
  400218:	6882      	ldr	r2, [r0, #8]
  40021a:	4b06      	ldr	r3, [pc, #24]	; (400234 <supc_switch_sclk_to_32kxtal+0x20>)
  40021c:	4313      	orrs	r3, r2
  40021e:	6083      	str	r3, [r0, #8]
  400220:	e003      	b.n	40022a <supc_switch_sclk_to_32kxtal+0x16>
	} else {
		p_supc->SUPC_MR &= ~(SUPC_MR_KEY_PASSWD | SUPC_MR_OSCBYPASS);
  400222:	6882      	ldr	r2, [r0, #8]
  400224:	4b04      	ldr	r3, [pc, #16]	; (400238 <supc_switch_sclk_to_32kxtal+0x24>)
  400226:	4013      	ands	r3, r2
  400228:	6083      	str	r3, [r0, #8]
	}

	p_supc->SUPC_CR |= SUPC_CR_KEY_PASSWD | SUPC_CR_XTALSEL;
  40022a:	6802      	ldr	r2, [r0, #0]
  40022c:	4b03      	ldr	r3, [pc, #12]	; (40023c <supc_switch_sclk_to_32kxtal+0x28>)
  40022e:	4313      	orrs	r3, r2
  400230:	6003      	str	r3, [r0, #0]
  400232:	4770      	bx	lr
  400234:	a5100000 	.word	0xa5100000
  400238:	5aefffff 	.word	0x5aefffff
  40023c:	a5000008 	.word	0xa5000008

00400240 <wdt_disable>:
/**
 * \brief Disable the watchdog timer.
 */
void wdt_disable(Wdt *p_wdt)
{
	p_wdt->WDT_MR = WDT_MR_WDDIS;
  400240:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  400244:	6043      	str	r3, [r0, #4]
  400246:	4770      	bx	lr

00400248 <prvTaskExitError>:
  400248:	4b0d      	ldr	r3, [pc, #52]	; (400280 <prvTaskExitError+0x38>)
  40024a:	681b      	ldr	r3, [r3, #0]
  40024c:	f1b3 3fff 	cmp.w	r3, #4294967295
  400250:	d00a      	beq.n	400268 <prvTaskExitError+0x20>
  400252:	f04f 0380 	mov.w	r3, #128	; 0x80
  400256:	b672      	cpsid	i
  400258:	f383 8811 	msr	BASEPRI, r3
  40025c:	f3bf 8f6f 	isb	sy
  400260:	f3bf 8f4f 	dsb	sy
  400264:	b662      	cpsie	i
  400266:	e7fe      	b.n	400266 <prvTaskExitError+0x1e>
  400268:	f04f 0380 	mov.w	r3, #128	; 0x80
  40026c:	b672      	cpsid	i
  40026e:	f383 8811 	msr	BASEPRI, r3
  400272:	f3bf 8f6f 	isb	sy
  400276:	f3bf 8f4f 	dsb	sy
  40027a:	b662      	cpsie	i
  40027c:	e7fe      	b.n	40027c <prvTaskExitError+0x34>
  40027e:	bf00      	nop
  400280:	20400000 	.word	0x20400000

00400284 <prvPortStartFirstTask>:
  400284:	4806      	ldr	r0, [pc, #24]	; (4002a0 <prvPortStartFirstTask+0x1c>)
  400286:	6800      	ldr	r0, [r0, #0]
  400288:	6800      	ldr	r0, [r0, #0]
  40028a:	f380 8808 	msr	MSP, r0
  40028e:	b662      	cpsie	i
  400290:	b661      	cpsie	f
  400292:	f3bf 8f4f 	dsb	sy
  400296:	f3bf 8f6f 	isb	sy
  40029a:	df00      	svc	0
  40029c:	bf00      	nop
  40029e:	0000      	.short	0x0000
  4002a0:	e000ed08 	.word	0xe000ed08

004002a4 <vPortEnableVFP>:
  4002a4:	f8df 000c 	ldr.w	r0, [pc, #12]	; 4002b4 <vPortEnableVFP+0x10>
  4002a8:	6801      	ldr	r1, [r0, #0]
  4002aa:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  4002ae:	6001      	str	r1, [r0, #0]
  4002b0:	4770      	bx	lr
  4002b2:	0000      	.short	0x0000
  4002b4:	e000ed88 	.word	0xe000ed88

004002b8 <pxPortInitialiseStack>:
  4002b8:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  4002bc:	f840 3c04 	str.w	r3, [r0, #-4]
  4002c0:	f840 1c08 	str.w	r1, [r0, #-8]
  4002c4:	4b05      	ldr	r3, [pc, #20]	; (4002dc <pxPortInitialiseStack+0x24>)
  4002c6:	f840 3c0c 	str.w	r3, [r0, #-12]
  4002ca:	f840 2c20 	str.w	r2, [r0, #-32]
  4002ce:	f06f 0302 	mvn.w	r3, #2
  4002d2:	f840 3c24 	str.w	r3, [r0, #-36]
  4002d6:	3844      	subs	r0, #68	; 0x44
  4002d8:	4770      	bx	lr
  4002da:	bf00      	nop
  4002dc:	00400249 	.word	0x00400249

004002e0 <SVC_Handler>:
  4002e0:	4b06      	ldr	r3, [pc, #24]	; (4002fc <pxCurrentTCBConst2>)
  4002e2:	6819      	ldr	r1, [r3, #0]
  4002e4:	6808      	ldr	r0, [r1, #0]
  4002e6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4002ea:	f380 8809 	msr	PSP, r0
  4002ee:	f3bf 8f6f 	isb	sy
  4002f2:	f04f 0000 	mov.w	r0, #0
  4002f6:	f380 8811 	msr	BASEPRI, r0
  4002fa:	4770      	bx	lr

004002fc <pxCurrentTCBConst2>:
  4002fc:	2040be5c 	.word	0x2040be5c
  400300:	4770      	bx	lr
  400302:	bf00      	nop

00400304 <vPortEnterCritical>:
  400304:	f04f 0380 	mov.w	r3, #128	; 0x80
  400308:	b672      	cpsid	i
  40030a:	f383 8811 	msr	BASEPRI, r3
  40030e:	f3bf 8f6f 	isb	sy
  400312:	f3bf 8f4f 	dsb	sy
  400316:	b662      	cpsie	i
  400318:	4a0b      	ldr	r2, [pc, #44]	; (400348 <vPortEnterCritical+0x44>)
  40031a:	6813      	ldr	r3, [r2, #0]
  40031c:	3301      	adds	r3, #1
  40031e:	6013      	str	r3, [r2, #0]
  400320:	2b01      	cmp	r3, #1
  400322:	d10f      	bne.n	400344 <vPortEnterCritical+0x40>
  400324:	4b09      	ldr	r3, [pc, #36]	; (40034c <vPortEnterCritical+0x48>)
  400326:	681b      	ldr	r3, [r3, #0]
  400328:	f013 0fff 	tst.w	r3, #255	; 0xff
  40032c:	d00a      	beq.n	400344 <vPortEnterCritical+0x40>
  40032e:	f04f 0380 	mov.w	r3, #128	; 0x80
  400332:	b672      	cpsid	i
  400334:	f383 8811 	msr	BASEPRI, r3
  400338:	f3bf 8f6f 	isb	sy
  40033c:	f3bf 8f4f 	dsb	sy
  400340:	b662      	cpsie	i
  400342:	e7fe      	b.n	400342 <vPortEnterCritical+0x3e>
  400344:	4770      	bx	lr
  400346:	bf00      	nop
  400348:	20400000 	.word	0x20400000
  40034c:	e000ed04 	.word	0xe000ed04

00400350 <vPortExitCritical>:
  400350:	4b0a      	ldr	r3, [pc, #40]	; (40037c <vPortExitCritical+0x2c>)
  400352:	681b      	ldr	r3, [r3, #0]
  400354:	b953      	cbnz	r3, 40036c <vPortExitCritical+0x1c>
  400356:	f04f 0380 	mov.w	r3, #128	; 0x80
  40035a:	b672      	cpsid	i
  40035c:	f383 8811 	msr	BASEPRI, r3
  400360:	f3bf 8f6f 	isb	sy
  400364:	f3bf 8f4f 	dsb	sy
  400368:	b662      	cpsie	i
  40036a:	e7fe      	b.n	40036a <vPortExitCritical+0x1a>
  40036c:	3b01      	subs	r3, #1
  40036e:	4a03      	ldr	r2, [pc, #12]	; (40037c <vPortExitCritical+0x2c>)
  400370:	6013      	str	r3, [r2, #0]
  400372:	b90b      	cbnz	r3, 400378 <vPortExitCritical+0x28>
  400374:	f383 8811 	msr	BASEPRI, r3
  400378:	4770      	bx	lr
  40037a:	bf00      	nop
  40037c:	20400000 	.word	0x20400000

00400380 <PendSV_Handler>:
  400380:	f3ef 8009 	mrs	r0, PSP
  400384:	f3bf 8f6f 	isb	sy
  400388:	4b15      	ldr	r3, [pc, #84]	; (4003e0 <pxCurrentTCBConst>)
  40038a:	681a      	ldr	r2, [r3, #0]
  40038c:	f01e 0f10 	tst.w	lr, #16
  400390:	bf08      	it	eq
  400392:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
  400396:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40039a:	6010      	str	r0, [r2, #0]
  40039c:	f84d 3d04 	str.w	r3, [sp, #-4]!
  4003a0:	f04f 0080 	mov.w	r0, #128	; 0x80
  4003a4:	b672      	cpsid	i
  4003a6:	f380 8811 	msr	BASEPRI, r0
  4003aa:	f3bf 8f4f 	dsb	sy
  4003ae:	f3bf 8f6f 	isb	sy
  4003b2:	b662      	cpsie	i
  4003b4:	f001 f92e 	bl	401614 <vTaskSwitchContext>
  4003b8:	f04f 0000 	mov.w	r0, #0
  4003bc:	f380 8811 	msr	BASEPRI, r0
  4003c0:	bc08      	pop	{r3}
  4003c2:	6819      	ldr	r1, [r3, #0]
  4003c4:	6808      	ldr	r0, [r1, #0]
  4003c6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4003ca:	f01e 0f10 	tst.w	lr, #16
  4003ce:	bf08      	it	eq
  4003d0:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
  4003d4:	f380 8809 	msr	PSP, r0
  4003d8:	f3bf 8f6f 	isb	sy
  4003dc:	4770      	bx	lr
  4003de:	bf00      	nop

004003e0 <pxCurrentTCBConst>:
  4003e0:	2040be5c 	.word	0x2040be5c
  4003e4:	4770      	bx	lr
  4003e6:	bf00      	nop

004003e8 <SysTick_Handler>:
  4003e8:	b508      	push	{r3, lr}
  4003ea:	f3ef 8311 	mrs	r3, BASEPRI
  4003ee:	f04f 0280 	mov.w	r2, #128	; 0x80
  4003f2:	b672      	cpsid	i
  4003f4:	f382 8811 	msr	BASEPRI, r2
  4003f8:	f3bf 8f6f 	isb	sy
  4003fc:	f3bf 8f4f 	dsb	sy
  400400:	b662      	cpsie	i
  400402:	4b05      	ldr	r3, [pc, #20]	; (400418 <SysTick_Handler+0x30>)
  400404:	4798      	blx	r3
  400406:	b118      	cbz	r0, 400410 <SysTick_Handler+0x28>
  400408:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  40040c:	4b03      	ldr	r3, [pc, #12]	; (40041c <SysTick_Handler+0x34>)
  40040e:	601a      	str	r2, [r3, #0]
  400410:	2300      	movs	r3, #0
  400412:	f383 8811 	msr	BASEPRI, r3
  400416:	bd08      	pop	{r3, pc}
  400418:	004012a9 	.word	0x004012a9
  40041c:	e000ed04 	.word	0xe000ed04

00400420 <vPortSetupTimerInterrupt>:
  400420:	4a03      	ldr	r2, [pc, #12]	; (400430 <vPortSetupTimerInterrupt+0x10>)
  400422:	4b04      	ldr	r3, [pc, #16]	; (400434 <vPortSetupTimerInterrupt+0x14>)
  400424:	601a      	str	r2, [r3, #0]
  400426:	2207      	movs	r2, #7
  400428:	3b04      	subs	r3, #4
  40042a:	601a      	str	r2, [r3, #0]
  40042c:	4770      	bx	lr
  40042e:	bf00      	nop
  400430:	000493df 	.word	0x000493df
  400434:	e000e014 	.word	0xe000e014

00400438 <xPortStartScheduler>:
  400438:	b500      	push	{lr}
  40043a:	b083      	sub	sp, #12
  40043c:	4b25      	ldr	r3, [pc, #148]	; (4004d4 <xPortStartScheduler+0x9c>)
  40043e:	781a      	ldrb	r2, [r3, #0]
  400440:	b2d2      	uxtb	r2, r2
  400442:	9201      	str	r2, [sp, #4]
  400444:	22ff      	movs	r2, #255	; 0xff
  400446:	701a      	strb	r2, [r3, #0]
  400448:	781b      	ldrb	r3, [r3, #0]
  40044a:	b2db      	uxtb	r3, r3
  40044c:	f88d 3003 	strb.w	r3, [sp, #3]
  400450:	f89d 3003 	ldrb.w	r3, [sp, #3]
  400454:	f003 0380 	and.w	r3, r3, #128	; 0x80
  400458:	4a1f      	ldr	r2, [pc, #124]	; (4004d8 <xPortStartScheduler+0xa0>)
  40045a:	7013      	strb	r3, [r2, #0]
  40045c:	2207      	movs	r2, #7
  40045e:	4b1f      	ldr	r3, [pc, #124]	; (4004dc <xPortStartScheduler+0xa4>)
  400460:	601a      	str	r2, [r3, #0]
  400462:	f89d 3003 	ldrb.w	r3, [sp, #3]
  400466:	f013 0f80 	tst.w	r3, #128	; 0x80
  40046a:	d010      	beq.n	40048e <xPortStartScheduler+0x56>
  40046c:	2206      	movs	r2, #6
  40046e:	e000      	b.n	400472 <xPortStartScheduler+0x3a>
  400470:	460a      	mov	r2, r1
  400472:	f89d 3003 	ldrb.w	r3, [sp, #3]
  400476:	005b      	lsls	r3, r3, #1
  400478:	b2db      	uxtb	r3, r3
  40047a:	f88d 3003 	strb.w	r3, [sp, #3]
  40047e:	f89d 3003 	ldrb.w	r3, [sp, #3]
  400482:	1e51      	subs	r1, r2, #1
  400484:	f013 0f80 	tst.w	r3, #128	; 0x80
  400488:	d1f2      	bne.n	400470 <xPortStartScheduler+0x38>
  40048a:	4b14      	ldr	r3, [pc, #80]	; (4004dc <xPortStartScheduler+0xa4>)
  40048c:	601a      	str	r2, [r3, #0]
  40048e:	4a13      	ldr	r2, [pc, #76]	; (4004dc <xPortStartScheduler+0xa4>)
  400490:	6813      	ldr	r3, [r2, #0]
  400492:	021b      	lsls	r3, r3, #8
  400494:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  400498:	6013      	str	r3, [r2, #0]
  40049a:	9b01      	ldr	r3, [sp, #4]
  40049c:	b2db      	uxtb	r3, r3
  40049e:	4a0d      	ldr	r2, [pc, #52]	; (4004d4 <xPortStartScheduler+0x9c>)
  4004a0:	7013      	strb	r3, [r2, #0]
  4004a2:	4b0f      	ldr	r3, [pc, #60]	; (4004e0 <xPortStartScheduler+0xa8>)
  4004a4:	681a      	ldr	r2, [r3, #0]
  4004a6:	f442 0260 	orr.w	r2, r2, #14680064	; 0xe00000
  4004aa:	601a      	str	r2, [r3, #0]
  4004ac:	681a      	ldr	r2, [r3, #0]
  4004ae:	f042 4260 	orr.w	r2, r2, #3758096384	; 0xe0000000
  4004b2:	601a      	str	r2, [r3, #0]
  4004b4:	4b0b      	ldr	r3, [pc, #44]	; (4004e4 <xPortStartScheduler+0xac>)
  4004b6:	4798      	blx	r3
  4004b8:	2200      	movs	r2, #0
  4004ba:	4b0b      	ldr	r3, [pc, #44]	; (4004e8 <xPortStartScheduler+0xb0>)
  4004bc:	601a      	str	r2, [r3, #0]
  4004be:	4b0b      	ldr	r3, [pc, #44]	; (4004ec <xPortStartScheduler+0xb4>)
  4004c0:	4798      	blx	r3
  4004c2:	4a0b      	ldr	r2, [pc, #44]	; (4004f0 <xPortStartScheduler+0xb8>)
  4004c4:	6813      	ldr	r3, [r2, #0]
  4004c6:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
  4004ca:	6013      	str	r3, [r2, #0]
  4004cc:	4b09      	ldr	r3, [pc, #36]	; (4004f4 <xPortStartScheduler+0xbc>)
  4004ce:	4798      	blx	r3
  4004d0:	4b09      	ldr	r3, [pc, #36]	; (4004f8 <xPortStartScheduler+0xc0>)
  4004d2:	4798      	blx	r3
  4004d4:	e000e400 	.word	0xe000e400
  4004d8:	20400544 	.word	0x20400544
  4004dc:	20400548 	.word	0x20400548
  4004e0:	e000ed20 	.word	0xe000ed20
  4004e4:	00400421 	.word	0x00400421
  4004e8:	20400000 	.word	0x20400000
  4004ec:	004002a5 	.word	0x004002a5
  4004f0:	e000ef34 	.word	0xe000ef34
  4004f4:	00400285 	.word	0x00400285
  4004f8:	00400249 	.word	0x00400249

004004fc <vPortValidateInterruptPriority>:
  4004fc:	f3ef 8305 	mrs	r3, IPSR
  400500:	2b0f      	cmp	r3, #15
  400502:	d911      	bls.n	400528 <vPortValidateInterruptPriority+0x2c>
  400504:	4a12      	ldr	r2, [pc, #72]	; (400550 <vPortValidateInterruptPriority+0x54>)
  400506:	5c9b      	ldrb	r3, [r3, r2]
  400508:	b2db      	uxtb	r3, r3
  40050a:	4a12      	ldr	r2, [pc, #72]	; (400554 <vPortValidateInterruptPriority+0x58>)
  40050c:	7812      	ldrb	r2, [r2, #0]
  40050e:	429a      	cmp	r2, r3
  400510:	d90a      	bls.n	400528 <vPortValidateInterruptPriority+0x2c>
  400512:	f04f 0380 	mov.w	r3, #128	; 0x80
  400516:	b672      	cpsid	i
  400518:	f383 8811 	msr	BASEPRI, r3
  40051c:	f3bf 8f6f 	isb	sy
  400520:	f3bf 8f4f 	dsb	sy
  400524:	b662      	cpsie	i
  400526:	e7fe      	b.n	400526 <vPortValidateInterruptPriority+0x2a>
  400528:	4b0b      	ldr	r3, [pc, #44]	; (400558 <vPortValidateInterruptPriority+0x5c>)
  40052a:	681b      	ldr	r3, [r3, #0]
  40052c:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  400530:	4a0a      	ldr	r2, [pc, #40]	; (40055c <vPortValidateInterruptPriority+0x60>)
  400532:	6812      	ldr	r2, [r2, #0]
  400534:	4293      	cmp	r3, r2
  400536:	d90a      	bls.n	40054e <vPortValidateInterruptPriority+0x52>
  400538:	f04f 0380 	mov.w	r3, #128	; 0x80
  40053c:	b672      	cpsid	i
  40053e:	f383 8811 	msr	BASEPRI, r3
  400542:	f3bf 8f6f 	isb	sy
  400546:	f3bf 8f4f 	dsb	sy
  40054a:	b662      	cpsie	i
  40054c:	e7fe      	b.n	40054c <vPortValidateInterruptPriority+0x50>
  40054e:	4770      	bx	lr
  400550:	e000e3f0 	.word	0xe000e3f0
  400554:	20400544 	.word	0x20400544
  400558:	e000ed0c 	.word	0xe000ed0c
  40055c:	20400548 	.word	0x20400548

00400560 <pvPortMalloc>:
  400560:	b538      	push	{r3, r4, r5, lr}
  400562:	4604      	mov	r4, r0
  400564:	f010 0f07 	tst.w	r0, #7
  400568:	d002      	beq.n	400570 <pvPortMalloc+0x10>
  40056a:	f020 0407 	bic.w	r4, r0, #7
  40056e:	3408      	adds	r4, #8
  400570:	4b0e      	ldr	r3, [pc, #56]	; (4005ac <pvPortMalloc+0x4c>)
  400572:	4798      	blx	r3
  400574:	4b0e      	ldr	r3, [pc, #56]	; (4005b0 <pvPortMalloc+0x50>)
  400576:	681b      	ldr	r3, [r3, #0]
  400578:	b923      	cbnz	r3, 400584 <pvPortMalloc+0x24>
  40057a:	4b0e      	ldr	r3, [pc, #56]	; (4005b4 <pvPortMalloc+0x54>)
  40057c:	f023 0307 	bic.w	r3, r3, #7
  400580:	4a0b      	ldr	r2, [pc, #44]	; (4005b0 <pvPortMalloc+0x50>)
  400582:	6013      	str	r3, [r2, #0]
  400584:	4b0c      	ldr	r3, [pc, #48]	; (4005b8 <pvPortMalloc+0x58>)
  400586:	681b      	ldr	r3, [r3, #0]
  400588:	441c      	add	r4, r3
  40058a:	42a3      	cmp	r3, r4
  40058c:	d209      	bcs.n	4005a2 <pvPortMalloc+0x42>
  40058e:	f24b 72f7 	movw	r2, #47095	; 0xb7f7
  400592:	4294      	cmp	r4, r2
  400594:	d805      	bhi.n	4005a2 <pvPortMalloc+0x42>
  400596:	4a06      	ldr	r2, [pc, #24]	; (4005b0 <pvPortMalloc+0x50>)
  400598:	6815      	ldr	r5, [r2, #0]
  40059a:	441d      	add	r5, r3
  40059c:	4b06      	ldr	r3, [pc, #24]	; (4005b8 <pvPortMalloc+0x58>)
  40059e:	601c      	str	r4, [r3, #0]
  4005a0:	e000      	b.n	4005a4 <pvPortMalloc+0x44>
  4005a2:	2500      	movs	r5, #0
  4005a4:	4b05      	ldr	r3, [pc, #20]	; (4005bc <pvPortMalloc+0x5c>)
  4005a6:	4798      	blx	r3
  4005a8:	4628      	mov	r0, r5
  4005aa:	bd38      	pop	{r3, r4, r5, pc}
  4005ac:	0040128d 	.word	0x0040128d
  4005b0:	2040bd50 	.word	0x2040bd50
  4005b4:	20400558 	.word	0x20400558
  4005b8:	2040054c 	.word	0x2040054c
  4005bc:	004013dd 	.word	0x004013dd

004005c0 <vPortFree>:
  4005c0:	b150      	cbz	r0, 4005d8 <vPortFree+0x18>
  4005c2:	f04f 0380 	mov.w	r3, #128	; 0x80
  4005c6:	b672      	cpsid	i
  4005c8:	f383 8811 	msr	BASEPRI, r3
  4005cc:	f3bf 8f6f 	isb	sy
  4005d0:	f3bf 8f4f 	dsb	sy
  4005d4:	b662      	cpsie	i
  4005d6:	e7fe      	b.n	4005d6 <vPortFree+0x16>
  4005d8:	4770      	bx	lr
  4005da:	bf00      	nop

004005dc <vListInitialise>:
  4005dc:	f100 0308 	add.w	r3, r0, #8
  4005e0:	6043      	str	r3, [r0, #4]
  4005e2:	f04f 32ff 	mov.w	r2, #4294967295
  4005e6:	6082      	str	r2, [r0, #8]
  4005e8:	60c3      	str	r3, [r0, #12]
  4005ea:	6103      	str	r3, [r0, #16]
  4005ec:	2300      	movs	r3, #0
  4005ee:	6003      	str	r3, [r0, #0]
  4005f0:	4770      	bx	lr
  4005f2:	bf00      	nop

004005f4 <vListInitialiseItem>:
  4005f4:	2300      	movs	r3, #0
  4005f6:	6103      	str	r3, [r0, #16]
  4005f8:	4770      	bx	lr
  4005fa:	bf00      	nop

004005fc <vListInsertEnd>:
  4005fc:	6843      	ldr	r3, [r0, #4]
  4005fe:	604b      	str	r3, [r1, #4]
  400600:	689a      	ldr	r2, [r3, #8]
  400602:	608a      	str	r2, [r1, #8]
  400604:	689a      	ldr	r2, [r3, #8]
  400606:	6051      	str	r1, [r2, #4]
  400608:	6099      	str	r1, [r3, #8]
  40060a:	6108      	str	r0, [r1, #16]
  40060c:	6803      	ldr	r3, [r0, #0]
  40060e:	3301      	adds	r3, #1
  400610:	6003      	str	r3, [r0, #0]
  400612:	4770      	bx	lr

00400614 <vListInsert>:
  400614:	b430      	push	{r4, r5}
  400616:	680d      	ldr	r5, [r1, #0]
  400618:	f1b5 3fff 	cmp.w	r5, #4294967295
  40061c:	d101      	bne.n	400622 <vListInsert+0xe>
  40061e:	6902      	ldr	r2, [r0, #16]
  400620:	e007      	b.n	400632 <vListInsert+0x1e>
  400622:	f100 0208 	add.w	r2, r0, #8
  400626:	e000      	b.n	40062a <vListInsert+0x16>
  400628:	461a      	mov	r2, r3
  40062a:	6853      	ldr	r3, [r2, #4]
  40062c:	681c      	ldr	r4, [r3, #0]
  40062e:	42a5      	cmp	r5, r4
  400630:	d2fa      	bcs.n	400628 <vListInsert+0x14>
  400632:	6853      	ldr	r3, [r2, #4]
  400634:	604b      	str	r3, [r1, #4]
  400636:	6099      	str	r1, [r3, #8]
  400638:	608a      	str	r2, [r1, #8]
  40063a:	6051      	str	r1, [r2, #4]
  40063c:	6108      	str	r0, [r1, #16]
  40063e:	6803      	ldr	r3, [r0, #0]
  400640:	3301      	adds	r3, #1
  400642:	6003      	str	r3, [r0, #0]
  400644:	bc30      	pop	{r4, r5}
  400646:	4770      	bx	lr

00400648 <uxListRemove>:
  400648:	6903      	ldr	r3, [r0, #16]
  40064a:	6842      	ldr	r2, [r0, #4]
  40064c:	6881      	ldr	r1, [r0, #8]
  40064e:	6091      	str	r1, [r2, #8]
  400650:	6882      	ldr	r2, [r0, #8]
  400652:	6841      	ldr	r1, [r0, #4]
  400654:	6051      	str	r1, [r2, #4]
  400656:	685a      	ldr	r2, [r3, #4]
  400658:	4290      	cmp	r0, r2
  40065a:	d101      	bne.n	400660 <uxListRemove+0x18>
  40065c:	6882      	ldr	r2, [r0, #8]
  40065e:	605a      	str	r2, [r3, #4]
  400660:	2200      	movs	r2, #0
  400662:	6102      	str	r2, [r0, #16]
  400664:	6818      	ldr	r0, [r3, #0]
  400666:	3801      	subs	r0, #1
  400668:	6018      	str	r0, [r3, #0]
  40066a:	4770      	bx	lr

0040066c <prvCopyDataToQueue>:
  40066c:	b538      	push	{r3, r4, r5, lr}
  40066e:	4604      	mov	r4, r0
  400670:	4615      	mov	r5, r2
  400672:	6c02      	ldr	r2, [r0, #64]	; 0x40
  400674:	b942      	cbnz	r2, 400688 <prvCopyDataToQueue+0x1c>
  400676:	6803      	ldr	r3, [r0, #0]
  400678:	2b00      	cmp	r3, #0
  40067a:	d12b      	bne.n	4006d4 <prvCopyDataToQueue+0x68>
  40067c:	6840      	ldr	r0, [r0, #4]
  40067e:	4b1b      	ldr	r3, [pc, #108]	; (4006ec <prvCopyDataToQueue+0x80>)
  400680:	4798      	blx	r3
  400682:	2300      	movs	r3, #0
  400684:	6063      	str	r3, [r4, #4]
  400686:	e02c      	b.n	4006e2 <prvCopyDataToQueue+0x76>
  400688:	b96d      	cbnz	r5, 4006a6 <prvCopyDataToQueue+0x3a>
  40068a:	6880      	ldr	r0, [r0, #8]
  40068c:	4b18      	ldr	r3, [pc, #96]	; (4006f0 <prvCopyDataToQueue+0x84>)
  40068e:	4798      	blx	r3
  400690:	68a2      	ldr	r2, [r4, #8]
  400692:	6c23      	ldr	r3, [r4, #64]	; 0x40
  400694:	4413      	add	r3, r2
  400696:	60a3      	str	r3, [r4, #8]
  400698:	6862      	ldr	r2, [r4, #4]
  40069a:	4293      	cmp	r3, r2
  40069c:	d31c      	bcc.n	4006d8 <prvCopyDataToQueue+0x6c>
  40069e:	6823      	ldr	r3, [r4, #0]
  4006a0:	60a3      	str	r3, [r4, #8]
  4006a2:	2000      	movs	r0, #0
  4006a4:	e01d      	b.n	4006e2 <prvCopyDataToQueue+0x76>
  4006a6:	68c0      	ldr	r0, [r0, #12]
  4006a8:	4b11      	ldr	r3, [pc, #68]	; (4006f0 <prvCopyDataToQueue+0x84>)
  4006aa:	4798      	blx	r3
  4006ac:	6c23      	ldr	r3, [r4, #64]	; 0x40
  4006ae:	425b      	negs	r3, r3
  4006b0:	68e2      	ldr	r2, [r4, #12]
  4006b2:	441a      	add	r2, r3
  4006b4:	60e2      	str	r2, [r4, #12]
  4006b6:	6821      	ldr	r1, [r4, #0]
  4006b8:	428a      	cmp	r2, r1
  4006ba:	d202      	bcs.n	4006c2 <prvCopyDataToQueue+0x56>
  4006bc:	6862      	ldr	r2, [r4, #4]
  4006be:	4413      	add	r3, r2
  4006c0:	60e3      	str	r3, [r4, #12]
  4006c2:	2d02      	cmp	r5, #2
  4006c4:	d10a      	bne.n	4006dc <prvCopyDataToQueue+0x70>
  4006c6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
  4006c8:	b153      	cbz	r3, 4006e0 <prvCopyDataToQueue+0x74>
  4006ca:	6ba3      	ldr	r3, [r4, #56]	; 0x38
  4006cc:	3b01      	subs	r3, #1
  4006ce:	63a3      	str	r3, [r4, #56]	; 0x38
  4006d0:	2000      	movs	r0, #0
  4006d2:	e006      	b.n	4006e2 <prvCopyDataToQueue+0x76>
  4006d4:	2000      	movs	r0, #0
  4006d6:	e004      	b.n	4006e2 <prvCopyDataToQueue+0x76>
  4006d8:	2000      	movs	r0, #0
  4006da:	e002      	b.n	4006e2 <prvCopyDataToQueue+0x76>
  4006dc:	2000      	movs	r0, #0
  4006de:	e000      	b.n	4006e2 <prvCopyDataToQueue+0x76>
  4006e0:	2000      	movs	r0, #0
  4006e2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
  4006e4:	3301      	adds	r3, #1
  4006e6:	63a3      	str	r3, [r4, #56]	; 0x38
  4006e8:	bd38      	pop	{r3, r4, r5, pc}
  4006ea:	bf00      	nop
  4006ec:	004019e1 	.word	0x004019e1
  4006f0:	00402bad 	.word	0x00402bad

004006f4 <prvNotifyQueueSetContainer>:
  4006f4:	b530      	push	{r4, r5, lr}
  4006f6:	b083      	sub	sp, #12
  4006f8:	9001      	str	r0, [sp, #4]
  4006fa:	6d44      	ldr	r4, [r0, #84]	; 0x54
  4006fc:	b954      	cbnz	r4, 400714 <prvNotifyQueueSetContainer+0x20>
  4006fe:	f04f 0380 	mov.w	r3, #128	; 0x80
  400702:	b672      	cpsid	i
  400704:	f383 8811 	msr	BASEPRI, r3
  400708:	f3bf 8f6f 	isb	sy
  40070c:	f3bf 8f4f 	dsb	sy
  400710:	b662      	cpsie	i
  400712:	e7fe      	b.n	400712 <prvNotifyQueueSetContainer+0x1e>
  400714:	6ba2      	ldr	r2, [r4, #56]	; 0x38
  400716:	6be3      	ldr	r3, [r4, #60]	; 0x3c
  400718:	429a      	cmp	r2, r3
  40071a:	d30a      	bcc.n	400732 <prvNotifyQueueSetContainer+0x3e>
  40071c:	f04f 0380 	mov.w	r3, #128	; 0x80
  400720:	b672      	cpsid	i
  400722:	f383 8811 	msr	BASEPRI, r3
  400726:	f3bf 8f6f 	isb	sy
  40072a:	f3bf 8f4f 	dsb	sy
  40072e:	b662      	cpsie	i
  400730:	e7fe      	b.n	400730 <prvNotifyQueueSetContainer+0x3c>
  400732:	6ba2      	ldr	r2, [r4, #56]	; 0x38
  400734:	4293      	cmp	r3, r2
  400736:	d917      	bls.n	400768 <prvNotifyQueueSetContainer+0x74>
  400738:	460a      	mov	r2, r1
  40073a:	a901      	add	r1, sp, #4
  40073c:	4620      	mov	r0, r4
  40073e:	4b0c      	ldr	r3, [pc, #48]	; (400770 <prvNotifyQueueSetContainer+0x7c>)
  400740:	4798      	blx	r3
  400742:	4605      	mov	r5, r0
  400744:	6ca3      	ldr	r3, [r4, #72]	; 0x48
  400746:	f1b3 3fff 	cmp.w	r3, #4294967295
  40074a:	d109      	bne.n	400760 <prvNotifyQueueSetContainer+0x6c>
  40074c:	6a63      	ldr	r3, [r4, #36]	; 0x24
  40074e:	b163      	cbz	r3, 40076a <prvNotifyQueueSetContainer+0x76>
  400750:	f104 0024 	add.w	r0, r4, #36	; 0x24
  400754:	4b07      	ldr	r3, [pc, #28]	; (400774 <prvNotifyQueueSetContainer+0x80>)
  400756:	4798      	blx	r3
  400758:	2800      	cmp	r0, #0
  40075a:	bf18      	it	ne
  40075c:	2501      	movne	r5, #1
  40075e:	e004      	b.n	40076a <prvNotifyQueueSetContainer+0x76>
  400760:	6ca3      	ldr	r3, [r4, #72]	; 0x48
  400762:	3301      	adds	r3, #1
  400764:	64a3      	str	r3, [r4, #72]	; 0x48
  400766:	e000      	b.n	40076a <prvNotifyQueueSetContainer+0x76>
  400768:	2500      	movs	r5, #0
  40076a:	4628      	mov	r0, r5
  40076c:	b003      	add	sp, #12
  40076e:	bd30      	pop	{r4, r5, pc}
  400770:	0040066d 	.word	0x0040066d
  400774:	004017b1 	.word	0x004017b1

00400778 <prvCopyDataFromQueue>:
  400778:	6c02      	ldr	r2, [r0, #64]	; 0x40
  40077a:	b172      	cbz	r2, 40079a <prvCopyDataFromQueue+0x22>
  40077c:	b510      	push	{r4, lr}
  40077e:	4603      	mov	r3, r0
  400780:	68c4      	ldr	r4, [r0, #12]
  400782:	4414      	add	r4, r2
  400784:	60c4      	str	r4, [r0, #12]
  400786:	6840      	ldr	r0, [r0, #4]
  400788:	4284      	cmp	r4, r0
  40078a:	d301      	bcc.n	400790 <prvCopyDataFromQueue+0x18>
  40078c:	6818      	ldr	r0, [r3, #0]
  40078e:	60d8      	str	r0, [r3, #12]
  400790:	4608      	mov	r0, r1
  400792:	68d9      	ldr	r1, [r3, #12]
  400794:	4b01      	ldr	r3, [pc, #4]	; (40079c <prvCopyDataFromQueue+0x24>)
  400796:	4798      	blx	r3
  400798:	bd10      	pop	{r4, pc}
  40079a:	4770      	bx	lr
  40079c:	00402bad 	.word	0x00402bad

004007a0 <prvUnlockQueue>:
  4007a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4007a2:	4604      	mov	r4, r0
  4007a4:	4b20      	ldr	r3, [pc, #128]	; (400828 <prvUnlockQueue+0x88>)
  4007a6:	4798      	blx	r3
  4007a8:	6ca3      	ldr	r3, [r4, #72]	; 0x48
  4007aa:	2b00      	cmp	r3, #0
  4007ac:	dd18      	ble.n	4007e0 <prvUnlockQueue+0x40>
  4007ae:	4d1f      	ldr	r5, [pc, #124]	; (40082c <prvUnlockQueue+0x8c>)
  4007b0:	4f1f      	ldr	r7, [pc, #124]	; (400830 <prvUnlockQueue+0x90>)
  4007b2:	4e20      	ldr	r6, [pc, #128]	; (400834 <prvUnlockQueue+0x94>)
  4007b4:	6d63      	ldr	r3, [r4, #84]	; 0x54
  4007b6:	b133      	cbz	r3, 4007c6 <prvUnlockQueue+0x26>
  4007b8:	2100      	movs	r1, #0
  4007ba:	4620      	mov	r0, r4
  4007bc:	47a8      	blx	r5
  4007be:	2801      	cmp	r0, #1
  4007c0:	d108      	bne.n	4007d4 <prvUnlockQueue+0x34>
  4007c2:	47b8      	blx	r7
  4007c4:	e006      	b.n	4007d4 <prvUnlockQueue+0x34>
  4007c6:	6a63      	ldr	r3, [r4, #36]	; 0x24
  4007c8:	b153      	cbz	r3, 4007e0 <prvUnlockQueue+0x40>
  4007ca:	f104 0024 	add.w	r0, r4, #36	; 0x24
  4007ce:	47b0      	blx	r6
  4007d0:	b100      	cbz	r0, 4007d4 <prvUnlockQueue+0x34>
  4007d2:	47b8      	blx	r7
  4007d4:	6ca3      	ldr	r3, [r4, #72]	; 0x48
  4007d6:	3b01      	subs	r3, #1
  4007d8:	64a3      	str	r3, [r4, #72]	; 0x48
  4007da:	6ca3      	ldr	r3, [r4, #72]	; 0x48
  4007dc:	2b00      	cmp	r3, #0
  4007de:	dce9      	bgt.n	4007b4 <prvUnlockQueue+0x14>
  4007e0:	f04f 33ff 	mov.w	r3, #4294967295
  4007e4:	64a3      	str	r3, [r4, #72]	; 0x48
  4007e6:	4b14      	ldr	r3, [pc, #80]	; (400838 <prvUnlockQueue+0x98>)
  4007e8:	4798      	blx	r3
  4007ea:	4b0f      	ldr	r3, [pc, #60]	; (400828 <prvUnlockQueue+0x88>)
  4007ec:	4798      	blx	r3
  4007ee:	6c63      	ldr	r3, [r4, #68]	; 0x44
  4007f0:	2b00      	cmp	r3, #0
  4007f2:	dd13      	ble.n	40081c <prvUnlockQueue+0x7c>
  4007f4:	6923      	ldr	r3, [r4, #16]
  4007f6:	b91b      	cbnz	r3, 400800 <prvUnlockQueue+0x60>
  4007f8:	e010      	b.n	40081c <prvUnlockQueue+0x7c>
  4007fa:	6923      	ldr	r3, [r4, #16]
  4007fc:	b923      	cbnz	r3, 400808 <prvUnlockQueue+0x68>
  4007fe:	e00d      	b.n	40081c <prvUnlockQueue+0x7c>
  400800:	f104 0610 	add.w	r6, r4, #16
  400804:	4d0b      	ldr	r5, [pc, #44]	; (400834 <prvUnlockQueue+0x94>)
  400806:	4f0a      	ldr	r7, [pc, #40]	; (400830 <prvUnlockQueue+0x90>)
  400808:	4630      	mov	r0, r6
  40080a:	47a8      	blx	r5
  40080c:	b100      	cbz	r0, 400810 <prvUnlockQueue+0x70>
  40080e:	47b8      	blx	r7
  400810:	6c63      	ldr	r3, [r4, #68]	; 0x44
  400812:	3b01      	subs	r3, #1
  400814:	6463      	str	r3, [r4, #68]	; 0x44
  400816:	6c63      	ldr	r3, [r4, #68]	; 0x44
  400818:	2b00      	cmp	r3, #0
  40081a:	dcee      	bgt.n	4007fa <prvUnlockQueue+0x5a>
  40081c:	f04f 33ff 	mov.w	r3, #4294967295
  400820:	6463      	str	r3, [r4, #68]	; 0x44
  400822:	4b05      	ldr	r3, [pc, #20]	; (400838 <prvUnlockQueue+0x98>)
  400824:	4798      	blx	r3
  400826:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400828:	00400305 	.word	0x00400305
  40082c:	004006f5 	.word	0x004006f5
  400830:	0040190d 	.word	0x0040190d
  400834:	004017b1 	.word	0x004017b1
  400838:	00400351 	.word	0x00400351

0040083c <xQueueGenericReset>:
  40083c:	b538      	push	{r3, r4, r5, lr}
  40083e:	b950      	cbnz	r0, 400856 <xQueueGenericReset+0x1a>
  400840:	f04f 0380 	mov.w	r3, #128	; 0x80
  400844:	b672      	cpsid	i
  400846:	f383 8811 	msr	BASEPRI, r3
  40084a:	f3bf 8f6f 	isb	sy
  40084e:	f3bf 8f4f 	dsb	sy
  400852:	b662      	cpsie	i
  400854:	e7fe      	b.n	400854 <xQueueGenericReset+0x18>
  400856:	4604      	mov	r4, r0
  400858:	460d      	mov	r5, r1
  40085a:	4b18      	ldr	r3, [pc, #96]	; (4008bc <xQueueGenericReset+0x80>)
  40085c:	4798      	blx	r3
  40085e:	6822      	ldr	r2, [r4, #0]
  400860:	6c21      	ldr	r1, [r4, #64]	; 0x40
  400862:	6be3      	ldr	r3, [r4, #60]	; 0x3c
  400864:	fb03 f301 	mul.w	r3, r3, r1
  400868:	18d0      	adds	r0, r2, r3
  40086a:	6060      	str	r0, [r4, #4]
  40086c:	2000      	movs	r0, #0
  40086e:	63a0      	str	r0, [r4, #56]	; 0x38
  400870:	60a2      	str	r2, [r4, #8]
  400872:	1a5b      	subs	r3, r3, r1
  400874:	4413      	add	r3, r2
  400876:	60e3      	str	r3, [r4, #12]
  400878:	f04f 33ff 	mov.w	r3, #4294967295
  40087c:	6463      	str	r3, [r4, #68]	; 0x44
  40087e:	64a3      	str	r3, [r4, #72]	; 0x48
  400880:	b985      	cbnz	r5, 4008a4 <xQueueGenericReset+0x68>
  400882:	6923      	ldr	r3, [r4, #16]
  400884:	b1ab      	cbz	r3, 4008b2 <xQueueGenericReset+0x76>
  400886:	f104 0010 	add.w	r0, r4, #16
  40088a:	4b0d      	ldr	r3, [pc, #52]	; (4008c0 <xQueueGenericReset+0x84>)
  40088c:	4798      	blx	r3
  40088e:	2801      	cmp	r0, #1
  400890:	d10f      	bne.n	4008b2 <xQueueGenericReset+0x76>
  400892:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  400896:	4b0b      	ldr	r3, [pc, #44]	; (4008c4 <xQueueGenericReset+0x88>)
  400898:	601a      	str	r2, [r3, #0]
  40089a:	f3bf 8f4f 	dsb	sy
  40089e:	f3bf 8f6f 	isb	sy
  4008a2:	e006      	b.n	4008b2 <xQueueGenericReset+0x76>
  4008a4:	f104 0010 	add.w	r0, r4, #16
  4008a8:	4d07      	ldr	r5, [pc, #28]	; (4008c8 <xQueueGenericReset+0x8c>)
  4008aa:	47a8      	blx	r5
  4008ac:	f104 0024 	add.w	r0, r4, #36	; 0x24
  4008b0:	47a8      	blx	r5
  4008b2:	4b06      	ldr	r3, [pc, #24]	; (4008cc <xQueueGenericReset+0x90>)
  4008b4:	4798      	blx	r3
  4008b6:	2001      	movs	r0, #1
  4008b8:	bd38      	pop	{r3, r4, r5, pc}
  4008ba:	bf00      	nop
  4008bc:	00400305 	.word	0x00400305
  4008c0:	004017b1 	.word	0x004017b1
  4008c4:	e000ed04 	.word	0xe000ed04
  4008c8:	004005dd 	.word	0x004005dd
  4008cc:	00400351 	.word	0x00400351

004008d0 <xQueueGenericCreate>:
  4008d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4008d2:	b950      	cbnz	r0, 4008ea <xQueueGenericCreate+0x1a>
  4008d4:	f04f 0380 	mov.w	r3, #128	; 0x80
  4008d8:	b672      	cpsid	i
  4008da:	f383 8811 	msr	BASEPRI, r3
  4008de:	f3bf 8f6f 	isb	sy
  4008e2:	f3bf 8f4f 	dsb	sy
  4008e6:	b662      	cpsie	i
  4008e8:	e7fe      	b.n	4008e8 <xQueueGenericCreate+0x18>
  4008ea:	4606      	mov	r6, r0
  4008ec:	4617      	mov	r7, r2
  4008ee:	460d      	mov	r5, r1
  4008f0:	b1c1      	cbz	r1, 400924 <xQueueGenericCreate+0x54>
  4008f2:	fb01 f000 	mul.w	r0, r1, r0
  4008f6:	3059      	adds	r0, #89	; 0x59
  4008f8:	4b14      	ldr	r3, [pc, #80]	; (40094c <xQueueGenericCreate+0x7c>)
  4008fa:	4798      	blx	r3
  4008fc:	4604      	mov	r4, r0
  4008fe:	b910      	cbnz	r0, 400906 <xQueueGenericCreate+0x36>
  400900:	e005      	b.n	40090e <xQueueGenericCreate+0x3e>
  400902:	6024      	str	r4, [r4, #0]
  400904:	e015      	b.n	400932 <xQueueGenericCreate+0x62>
  400906:	f100 0358 	add.w	r3, r0, #88	; 0x58
  40090a:	6003      	str	r3, [r0, #0]
  40090c:	e011      	b.n	400932 <xQueueGenericCreate+0x62>
  40090e:	f04f 0380 	mov.w	r3, #128	; 0x80
  400912:	b672      	cpsid	i
  400914:	f383 8811 	msr	BASEPRI, r3
  400918:	f3bf 8f6f 	isb	sy
  40091c:	f3bf 8f4f 	dsb	sy
  400920:	b662      	cpsie	i
  400922:	e7fe      	b.n	400922 <xQueueGenericCreate+0x52>
  400924:	2058      	movs	r0, #88	; 0x58
  400926:	4b09      	ldr	r3, [pc, #36]	; (40094c <xQueueGenericCreate+0x7c>)
  400928:	4798      	blx	r3
  40092a:	4604      	mov	r4, r0
  40092c:	2800      	cmp	r0, #0
  40092e:	d1e8      	bne.n	400902 <xQueueGenericCreate+0x32>
  400930:	e7ed      	b.n	40090e <xQueueGenericCreate+0x3e>
  400932:	63e6      	str	r6, [r4, #60]	; 0x3c
  400934:	6425      	str	r5, [r4, #64]	; 0x40
  400936:	2101      	movs	r1, #1
  400938:	4620      	mov	r0, r4
  40093a:	4b05      	ldr	r3, [pc, #20]	; (400950 <xQueueGenericCreate+0x80>)
  40093c:	4798      	blx	r3
  40093e:	f884 7050 	strb.w	r7, [r4, #80]	; 0x50
  400942:	2300      	movs	r3, #0
  400944:	6563      	str	r3, [r4, #84]	; 0x54
  400946:	4620      	mov	r0, r4
  400948:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40094a:	bf00      	nop
  40094c:	00400561 	.word	0x00400561
  400950:	0040083d 	.word	0x0040083d

00400954 <xQueueGenericSend>:
  400954:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  400958:	b085      	sub	sp, #20
  40095a:	9201      	str	r2, [sp, #4]
  40095c:	b950      	cbnz	r0, 400974 <xQueueGenericSend+0x20>
  40095e:	f04f 0380 	mov.w	r3, #128	; 0x80
  400962:	b672      	cpsid	i
  400964:	f383 8811 	msr	BASEPRI, r3
  400968:	f3bf 8f6f 	isb	sy
  40096c:	f3bf 8f4f 	dsb	sy
  400970:	b662      	cpsie	i
  400972:	e7fe      	b.n	400972 <xQueueGenericSend+0x1e>
  400974:	4604      	mov	r4, r0
  400976:	b961      	cbnz	r1, 400992 <xQueueGenericSend+0x3e>
  400978:	6c02      	ldr	r2, [r0, #64]	; 0x40
  40097a:	b152      	cbz	r2, 400992 <xQueueGenericSend+0x3e>
  40097c:	f04f 0380 	mov.w	r3, #128	; 0x80
  400980:	b672      	cpsid	i
  400982:	f383 8811 	msr	BASEPRI, r3
  400986:	f3bf 8f6f 	isb	sy
  40098a:	f3bf 8f4f 	dsb	sy
  40098e:	b662      	cpsie	i
  400990:	e7fe      	b.n	400990 <xQueueGenericSend+0x3c>
  400992:	2b02      	cmp	r3, #2
  400994:	d10d      	bne.n	4009b2 <xQueueGenericSend+0x5e>
  400996:	6be2      	ldr	r2, [r4, #60]	; 0x3c
  400998:	2a01      	cmp	r2, #1
  40099a:	d00a      	beq.n	4009b2 <xQueueGenericSend+0x5e>
  40099c:	f04f 0380 	mov.w	r3, #128	; 0x80
  4009a0:	b672      	cpsid	i
  4009a2:	f383 8811 	msr	BASEPRI, r3
  4009a6:	f3bf 8f6f 	isb	sy
  4009aa:	f3bf 8f4f 	dsb	sy
  4009ae:	b662      	cpsie	i
  4009b0:	e7fe      	b.n	4009b0 <xQueueGenericSend+0x5c>
  4009b2:	461d      	mov	r5, r3
  4009b4:	9100      	str	r1, [sp, #0]
  4009b6:	4b51      	ldr	r3, [pc, #324]	; (400afc <xQueueGenericSend+0x1a8>)
  4009b8:	4798      	blx	r3
  4009ba:	b960      	cbnz	r0, 4009d6 <xQueueGenericSend+0x82>
  4009bc:	9b01      	ldr	r3, [sp, #4]
  4009be:	b163      	cbz	r3, 4009da <xQueueGenericSend+0x86>
  4009c0:	f04f 0380 	mov.w	r3, #128	; 0x80
  4009c4:	b672      	cpsid	i
  4009c6:	f383 8811 	msr	BASEPRI, r3
  4009ca:	f3bf 8f6f 	isb	sy
  4009ce:	f3bf 8f4f 	dsb	sy
  4009d2:	b662      	cpsie	i
  4009d4:	e7fe      	b.n	4009d4 <xQueueGenericSend+0x80>
  4009d6:	2700      	movs	r7, #0
  4009d8:	e000      	b.n	4009dc <xQueueGenericSend+0x88>
  4009da:	2700      	movs	r7, #0
  4009dc:	4e48      	ldr	r6, [pc, #288]	; (400b00 <xQueueGenericSend+0x1ac>)
  4009de:	f8df 914c 	ldr.w	r9, [pc, #332]	; 400b2c <xQueueGenericSend+0x1d8>
  4009e2:	f8df 8128 	ldr.w	r8, [pc, #296]	; 400b0c <xQueueGenericSend+0x1b8>
  4009e6:	47b0      	blx	r6
  4009e8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
  4009ea:	6be3      	ldr	r3, [r4, #60]	; 0x3c
  4009ec:	429a      	cmp	r2, r3
  4009ee:	d301      	bcc.n	4009f4 <xQueueGenericSend+0xa0>
  4009f0:	2d02      	cmp	r5, #2
  4009f2:	d133      	bne.n	400a5c <xQueueGenericSend+0x108>
  4009f4:	462a      	mov	r2, r5
  4009f6:	9900      	ldr	r1, [sp, #0]
  4009f8:	4620      	mov	r0, r4
  4009fa:	4b42      	ldr	r3, [pc, #264]	; (400b04 <xQueueGenericSend+0x1b0>)
  4009fc:	4798      	blx	r3
  4009fe:	6d63      	ldr	r3, [r4, #84]	; 0x54
  400a00:	b173      	cbz	r3, 400a20 <xQueueGenericSend+0xcc>
  400a02:	4629      	mov	r1, r5
  400a04:	4620      	mov	r0, r4
  400a06:	4b40      	ldr	r3, [pc, #256]	; (400b08 <xQueueGenericSend+0x1b4>)
  400a08:	4798      	blx	r3
  400a0a:	2801      	cmp	r0, #1
  400a0c:	d122      	bne.n	400a54 <xQueueGenericSend+0x100>
  400a0e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  400a12:	4b3e      	ldr	r3, [pc, #248]	; (400b0c <xQueueGenericSend+0x1b8>)
  400a14:	601a      	str	r2, [r3, #0]
  400a16:	f3bf 8f4f 	dsb	sy
  400a1a:	f3bf 8f6f 	isb	sy
  400a1e:	e019      	b.n	400a54 <xQueueGenericSend+0x100>
  400a20:	6a63      	ldr	r3, [r4, #36]	; 0x24
  400a22:	b173      	cbz	r3, 400a42 <xQueueGenericSend+0xee>
  400a24:	f104 0024 	add.w	r0, r4, #36	; 0x24
  400a28:	4b39      	ldr	r3, [pc, #228]	; (400b10 <xQueueGenericSend+0x1bc>)
  400a2a:	4798      	blx	r3
  400a2c:	2801      	cmp	r0, #1
  400a2e:	d111      	bne.n	400a54 <xQueueGenericSend+0x100>
  400a30:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  400a34:	4b35      	ldr	r3, [pc, #212]	; (400b0c <xQueueGenericSend+0x1b8>)
  400a36:	601a      	str	r2, [r3, #0]
  400a38:	f3bf 8f4f 	dsb	sy
  400a3c:	f3bf 8f6f 	isb	sy
  400a40:	e008      	b.n	400a54 <xQueueGenericSend+0x100>
  400a42:	b138      	cbz	r0, 400a54 <xQueueGenericSend+0x100>
  400a44:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  400a48:	4b30      	ldr	r3, [pc, #192]	; (400b0c <xQueueGenericSend+0x1b8>)
  400a4a:	601a      	str	r2, [r3, #0]
  400a4c:	f3bf 8f4f 	dsb	sy
  400a50:	f3bf 8f6f 	isb	sy
  400a54:	4b2f      	ldr	r3, [pc, #188]	; (400b14 <xQueueGenericSend+0x1c0>)
  400a56:	4798      	blx	r3
  400a58:	2001      	movs	r0, #1
  400a5a:	e04b      	b.n	400af4 <xQueueGenericSend+0x1a0>
  400a5c:	9b01      	ldr	r3, [sp, #4]
  400a5e:	b91b      	cbnz	r3, 400a68 <xQueueGenericSend+0x114>
  400a60:	4b2c      	ldr	r3, [pc, #176]	; (400b14 <xQueueGenericSend+0x1c0>)
  400a62:	4798      	blx	r3
  400a64:	2000      	movs	r0, #0
  400a66:	e045      	b.n	400af4 <xQueueGenericSend+0x1a0>
  400a68:	b917      	cbnz	r7, 400a70 <xQueueGenericSend+0x11c>
  400a6a:	a802      	add	r0, sp, #8
  400a6c:	47c8      	blx	r9
  400a6e:	2701      	movs	r7, #1
  400a70:	4b28      	ldr	r3, [pc, #160]	; (400b14 <xQueueGenericSend+0x1c0>)
  400a72:	4798      	blx	r3
  400a74:	4b28      	ldr	r3, [pc, #160]	; (400b18 <xQueueGenericSend+0x1c4>)
  400a76:	4798      	blx	r3
  400a78:	47b0      	blx	r6
  400a7a:	6c63      	ldr	r3, [r4, #68]	; 0x44
  400a7c:	f1b3 3fff 	cmp.w	r3, #4294967295
  400a80:	d101      	bne.n	400a86 <xQueueGenericSend+0x132>
  400a82:	2300      	movs	r3, #0
  400a84:	6463      	str	r3, [r4, #68]	; 0x44
  400a86:	6ca3      	ldr	r3, [r4, #72]	; 0x48
  400a88:	f1b3 3fff 	cmp.w	r3, #4294967295
  400a8c:	d101      	bne.n	400a92 <xQueueGenericSend+0x13e>
  400a8e:	2300      	movs	r3, #0
  400a90:	64a3      	str	r3, [r4, #72]	; 0x48
  400a92:	4b20      	ldr	r3, [pc, #128]	; (400b14 <xQueueGenericSend+0x1c0>)
  400a94:	4798      	blx	r3
  400a96:	a901      	add	r1, sp, #4
  400a98:	a802      	add	r0, sp, #8
  400a9a:	4b20      	ldr	r3, [pc, #128]	; (400b1c <xQueueGenericSend+0x1c8>)
  400a9c:	4798      	blx	r3
  400a9e:	bb18      	cbnz	r0, 400ae8 <xQueueGenericSend+0x194>
  400aa0:	47b0      	blx	r6
  400aa2:	f8d4 b038 	ldr.w	fp, [r4, #56]	; 0x38
  400aa6:	f8d4 a03c 	ldr.w	sl, [r4, #60]	; 0x3c
  400aaa:	4b1a      	ldr	r3, [pc, #104]	; (400b14 <xQueueGenericSend+0x1c0>)
  400aac:	4798      	blx	r3
  400aae:	45d3      	cmp	fp, sl
  400ab0:	d114      	bne.n	400adc <xQueueGenericSend+0x188>
  400ab2:	9901      	ldr	r1, [sp, #4]
  400ab4:	f104 0010 	add.w	r0, r4, #16
  400ab8:	4b19      	ldr	r3, [pc, #100]	; (400b20 <xQueueGenericSend+0x1cc>)
  400aba:	4798      	blx	r3
  400abc:	4620      	mov	r0, r4
  400abe:	4b19      	ldr	r3, [pc, #100]	; (400b24 <xQueueGenericSend+0x1d0>)
  400ac0:	4798      	blx	r3
  400ac2:	4b19      	ldr	r3, [pc, #100]	; (400b28 <xQueueGenericSend+0x1d4>)
  400ac4:	4798      	blx	r3
  400ac6:	2800      	cmp	r0, #0
  400ac8:	d18d      	bne.n	4009e6 <xQueueGenericSend+0x92>
  400aca:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
  400ace:	f8c8 3000 	str.w	r3, [r8]
  400ad2:	f3bf 8f4f 	dsb	sy
  400ad6:	f3bf 8f6f 	isb	sy
  400ada:	e784      	b.n	4009e6 <xQueueGenericSend+0x92>
  400adc:	4620      	mov	r0, r4
  400ade:	4b11      	ldr	r3, [pc, #68]	; (400b24 <xQueueGenericSend+0x1d0>)
  400ae0:	4798      	blx	r3
  400ae2:	4b11      	ldr	r3, [pc, #68]	; (400b28 <xQueueGenericSend+0x1d4>)
  400ae4:	4798      	blx	r3
  400ae6:	e77e      	b.n	4009e6 <xQueueGenericSend+0x92>
  400ae8:	4620      	mov	r0, r4
  400aea:	4b0e      	ldr	r3, [pc, #56]	; (400b24 <xQueueGenericSend+0x1d0>)
  400aec:	4798      	blx	r3
  400aee:	4b0e      	ldr	r3, [pc, #56]	; (400b28 <xQueueGenericSend+0x1d4>)
  400af0:	4798      	blx	r3
  400af2:	2000      	movs	r0, #0
  400af4:	b005      	add	sp, #20
  400af6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  400afa:	bf00      	nop
  400afc:	00401919 	.word	0x00401919
  400b00:	00400305 	.word	0x00400305
  400b04:	0040066d 	.word	0x0040066d
  400b08:	004006f5 	.word	0x004006f5
  400b0c:	e000ed04 	.word	0xe000ed04
  400b10:	004017b1 	.word	0x004017b1
  400b14:	00400351 	.word	0x00400351
  400b18:	0040128d 	.word	0x0040128d
  400b1c:	00401879 	.word	0x00401879
  400b20:	004016ad 	.word	0x004016ad
  400b24:	004007a1 	.word	0x004007a1
  400b28:	004013dd 	.word	0x004013dd
  400b2c:	00401849 	.word	0x00401849

00400b30 <xQueueGenericSendFromISR>:
  400b30:	b950      	cbnz	r0, 400b48 <xQueueGenericSendFromISR+0x18>
  400b32:	f04f 0380 	mov.w	r3, #128	; 0x80
  400b36:	b672      	cpsid	i
  400b38:	f383 8811 	msr	BASEPRI, r3
  400b3c:	f3bf 8f6f 	isb	sy
  400b40:	f3bf 8f4f 	dsb	sy
  400b44:	b662      	cpsie	i
  400b46:	e7fe      	b.n	400b46 <xQueueGenericSendFromISR+0x16>
  400b48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400b4c:	4604      	mov	r4, r0
  400b4e:	b961      	cbnz	r1, 400b6a <xQueueGenericSendFromISR+0x3a>
  400b50:	6c00      	ldr	r0, [r0, #64]	; 0x40
  400b52:	b150      	cbz	r0, 400b6a <xQueueGenericSendFromISR+0x3a>
  400b54:	f04f 0380 	mov.w	r3, #128	; 0x80
  400b58:	b672      	cpsid	i
  400b5a:	f383 8811 	msr	BASEPRI, r3
  400b5e:	f3bf 8f6f 	isb	sy
  400b62:	f3bf 8f4f 	dsb	sy
  400b66:	b662      	cpsie	i
  400b68:	e7fe      	b.n	400b68 <xQueueGenericSendFromISR+0x38>
  400b6a:	2b02      	cmp	r3, #2
  400b6c:	d10d      	bne.n	400b8a <xQueueGenericSendFromISR+0x5a>
  400b6e:	6be0      	ldr	r0, [r4, #60]	; 0x3c
  400b70:	2801      	cmp	r0, #1
  400b72:	d00a      	beq.n	400b8a <xQueueGenericSendFromISR+0x5a>
  400b74:	f04f 0380 	mov.w	r3, #128	; 0x80
  400b78:	b672      	cpsid	i
  400b7a:	f383 8811 	msr	BASEPRI, r3
  400b7e:	f3bf 8f6f 	isb	sy
  400b82:	f3bf 8f4f 	dsb	sy
  400b86:	b662      	cpsie	i
  400b88:	e7fe      	b.n	400b88 <xQueueGenericSendFromISR+0x58>
  400b8a:	461e      	mov	r6, r3
  400b8c:	4615      	mov	r5, r2
  400b8e:	4688      	mov	r8, r1
  400b90:	4b21      	ldr	r3, [pc, #132]	; (400c18 <xQueueGenericSendFromISR+0xe8>)
  400b92:	4798      	blx	r3
  400b94:	f3ef 8711 	mrs	r7, BASEPRI
  400b98:	f04f 0380 	mov.w	r3, #128	; 0x80
  400b9c:	b672      	cpsid	i
  400b9e:	f383 8811 	msr	BASEPRI, r3
  400ba2:	f3bf 8f6f 	isb	sy
  400ba6:	f3bf 8f4f 	dsb	sy
  400baa:	b662      	cpsie	i
  400bac:	6ba2      	ldr	r2, [r4, #56]	; 0x38
  400bae:	6be3      	ldr	r3, [r4, #60]	; 0x3c
  400bb0:	429a      	cmp	r2, r3
  400bb2:	d301      	bcc.n	400bb8 <xQueueGenericSendFromISR+0x88>
  400bb4:	2e02      	cmp	r6, #2
  400bb6:	d123      	bne.n	400c00 <xQueueGenericSendFromISR+0xd0>
  400bb8:	4632      	mov	r2, r6
  400bba:	4641      	mov	r1, r8
  400bbc:	4620      	mov	r0, r4
  400bbe:	4b17      	ldr	r3, [pc, #92]	; (400c1c <xQueueGenericSendFromISR+0xec>)
  400bc0:	4798      	blx	r3
  400bc2:	6ca3      	ldr	r3, [r4, #72]	; 0x48
  400bc4:	f1b3 3fff 	cmp.w	r3, #4294967295
  400bc8:	d115      	bne.n	400bf6 <xQueueGenericSendFromISR+0xc6>
  400bca:	6d63      	ldr	r3, [r4, #84]	; 0x54
  400bcc:	b143      	cbz	r3, 400be0 <xQueueGenericSendFromISR+0xb0>
  400bce:	4631      	mov	r1, r6
  400bd0:	4620      	mov	r0, r4
  400bd2:	4b13      	ldr	r3, [pc, #76]	; (400c20 <xQueueGenericSendFromISR+0xf0>)
  400bd4:	4798      	blx	r3
  400bd6:	b1ad      	cbz	r5, 400c04 <xQueueGenericSendFromISR+0xd4>
  400bd8:	2801      	cmp	r0, #1
  400bda:	d113      	bne.n	400c04 <xQueueGenericSendFromISR+0xd4>
  400bdc:	6028      	str	r0, [r5, #0]
  400bde:	e016      	b.n	400c0e <xQueueGenericSendFromISR+0xde>
  400be0:	6a63      	ldr	r3, [r4, #36]	; 0x24
  400be2:	b18b      	cbz	r3, 400c08 <xQueueGenericSendFromISR+0xd8>
  400be4:	f104 0024 	add.w	r0, r4, #36	; 0x24
  400be8:	4b0e      	ldr	r3, [pc, #56]	; (400c24 <xQueueGenericSendFromISR+0xf4>)
  400bea:	4798      	blx	r3
  400bec:	b175      	cbz	r5, 400c0c <xQueueGenericSendFromISR+0xdc>
  400bee:	b168      	cbz	r0, 400c0c <xQueueGenericSendFromISR+0xdc>
  400bf0:	2001      	movs	r0, #1
  400bf2:	6028      	str	r0, [r5, #0]
  400bf4:	e00b      	b.n	400c0e <xQueueGenericSendFromISR+0xde>
  400bf6:	6ca3      	ldr	r3, [r4, #72]	; 0x48
  400bf8:	3301      	adds	r3, #1
  400bfa:	64a3      	str	r3, [r4, #72]	; 0x48
  400bfc:	2001      	movs	r0, #1
  400bfe:	e006      	b.n	400c0e <xQueueGenericSendFromISR+0xde>
  400c00:	2000      	movs	r0, #0
  400c02:	e004      	b.n	400c0e <xQueueGenericSendFromISR+0xde>
  400c04:	2001      	movs	r0, #1
  400c06:	e002      	b.n	400c0e <xQueueGenericSendFromISR+0xde>
  400c08:	2001      	movs	r0, #1
  400c0a:	e000      	b.n	400c0e <xQueueGenericSendFromISR+0xde>
  400c0c:	2001      	movs	r0, #1
  400c0e:	f387 8811 	msr	BASEPRI, r7
  400c12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400c16:	bf00      	nop
  400c18:	004004fd 	.word	0x004004fd
  400c1c:	0040066d 	.word	0x0040066d
  400c20:	004006f5 	.word	0x004006f5
  400c24:	004017b1 	.word	0x004017b1

00400c28 <xQueueGiveFromISR>:
  400c28:	b950      	cbnz	r0, 400c40 <xQueueGiveFromISR+0x18>
  400c2a:	f04f 0380 	mov.w	r3, #128	; 0x80
  400c2e:	b672      	cpsid	i
  400c30:	f383 8811 	msr	BASEPRI, r3
  400c34:	f3bf 8f6f 	isb	sy
  400c38:	f3bf 8f4f 	dsb	sy
  400c3c:	b662      	cpsie	i
  400c3e:	e7fe      	b.n	400c3e <xQueueGiveFromISR+0x16>
  400c40:	b570      	push	{r4, r5, r6, lr}
  400c42:	4604      	mov	r4, r0
  400c44:	6c03      	ldr	r3, [r0, #64]	; 0x40
  400c46:	b153      	cbz	r3, 400c5e <xQueueGiveFromISR+0x36>
  400c48:	f04f 0380 	mov.w	r3, #128	; 0x80
  400c4c:	b672      	cpsid	i
  400c4e:	f383 8811 	msr	BASEPRI, r3
  400c52:	f3bf 8f6f 	isb	sy
  400c56:	f3bf 8f4f 	dsb	sy
  400c5a:	b662      	cpsie	i
  400c5c:	e7fe      	b.n	400c5c <xQueueGiveFromISR+0x34>
  400c5e:	6803      	ldr	r3, [r0, #0]
  400c60:	b963      	cbnz	r3, 400c7c <xQueueGiveFromISR+0x54>
  400c62:	6843      	ldr	r3, [r0, #4]
  400c64:	b153      	cbz	r3, 400c7c <xQueueGiveFromISR+0x54>
  400c66:	f04f 0380 	mov.w	r3, #128	; 0x80
  400c6a:	b672      	cpsid	i
  400c6c:	f383 8811 	msr	BASEPRI, r3
  400c70:	f3bf 8f6f 	isb	sy
  400c74:	f3bf 8f4f 	dsb	sy
  400c78:	b662      	cpsie	i
  400c7a:	e7fe      	b.n	400c7a <xQueueGiveFromISR+0x52>
  400c7c:	460d      	mov	r5, r1
  400c7e:	4b1f      	ldr	r3, [pc, #124]	; (400cfc <xQueueGiveFromISR+0xd4>)
  400c80:	4798      	blx	r3
  400c82:	f3ef 8611 	mrs	r6, BASEPRI
  400c86:	f04f 0380 	mov.w	r3, #128	; 0x80
  400c8a:	b672      	cpsid	i
  400c8c:	f383 8811 	msr	BASEPRI, r3
  400c90:	f3bf 8f6f 	isb	sy
  400c94:	f3bf 8f4f 	dsb	sy
  400c98:	b662      	cpsie	i
  400c9a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
  400c9c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
  400c9e:	429a      	cmp	r2, r3
  400ca0:	d221      	bcs.n	400ce6 <xQueueGiveFromISR+0xbe>
  400ca2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
  400ca4:	3301      	adds	r3, #1
  400ca6:	63a3      	str	r3, [r4, #56]	; 0x38
  400ca8:	6ca3      	ldr	r3, [r4, #72]	; 0x48
  400caa:	f1b3 3fff 	cmp.w	r3, #4294967295
  400cae:	d115      	bne.n	400cdc <xQueueGiveFromISR+0xb4>
  400cb0:	6d63      	ldr	r3, [r4, #84]	; 0x54
  400cb2:	b143      	cbz	r3, 400cc6 <xQueueGiveFromISR+0x9e>
  400cb4:	2100      	movs	r1, #0
  400cb6:	4620      	mov	r0, r4
  400cb8:	4b11      	ldr	r3, [pc, #68]	; (400d00 <xQueueGiveFromISR+0xd8>)
  400cba:	4798      	blx	r3
  400cbc:	b1ad      	cbz	r5, 400cea <xQueueGiveFromISR+0xc2>
  400cbe:	2801      	cmp	r0, #1
  400cc0:	d113      	bne.n	400cea <xQueueGiveFromISR+0xc2>
  400cc2:	6028      	str	r0, [r5, #0]
  400cc4:	e016      	b.n	400cf4 <xQueueGiveFromISR+0xcc>
  400cc6:	6a63      	ldr	r3, [r4, #36]	; 0x24
  400cc8:	b18b      	cbz	r3, 400cee <xQueueGiveFromISR+0xc6>
  400cca:	f104 0024 	add.w	r0, r4, #36	; 0x24
  400cce:	4b0d      	ldr	r3, [pc, #52]	; (400d04 <xQueueGiveFromISR+0xdc>)
  400cd0:	4798      	blx	r3
  400cd2:	b175      	cbz	r5, 400cf2 <xQueueGiveFromISR+0xca>
  400cd4:	b168      	cbz	r0, 400cf2 <xQueueGiveFromISR+0xca>
  400cd6:	2001      	movs	r0, #1
  400cd8:	6028      	str	r0, [r5, #0]
  400cda:	e00b      	b.n	400cf4 <xQueueGiveFromISR+0xcc>
  400cdc:	6ca3      	ldr	r3, [r4, #72]	; 0x48
  400cde:	3301      	adds	r3, #1
  400ce0:	64a3      	str	r3, [r4, #72]	; 0x48
  400ce2:	2001      	movs	r0, #1
  400ce4:	e006      	b.n	400cf4 <xQueueGiveFromISR+0xcc>
  400ce6:	2000      	movs	r0, #0
  400ce8:	e004      	b.n	400cf4 <xQueueGiveFromISR+0xcc>
  400cea:	2001      	movs	r0, #1
  400cec:	e002      	b.n	400cf4 <xQueueGiveFromISR+0xcc>
  400cee:	2001      	movs	r0, #1
  400cf0:	e000      	b.n	400cf4 <xQueueGiveFromISR+0xcc>
  400cf2:	2001      	movs	r0, #1
  400cf4:	f386 8811 	msr	BASEPRI, r6
  400cf8:	bd70      	pop	{r4, r5, r6, pc}
  400cfa:	bf00      	nop
  400cfc:	004004fd 	.word	0x004004fd
  400d00:	004006f5 	.word	0x004006f5
  400d04:	004017b1 	.word	0x004017b1

00400d08 <xQueueGenericReceive>:
  400d08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  400d0c:	b085      	sub	sp, #20
  400d0e:	9201      	str	r2, [sp, #4]
  400d10:	b950      	cbnz	r0, 400d28 <xQueueGenericReceive+0x20>
  400d12:	f04f 0380 	mov.w	r3, #128	; 0x80
  400d16:	b672      	cpsid	i
  400d18:	f383 8811 	msr	BASEPRI, r3
  400d1c:	f3bf 8f6f 	isb	sy
  400d20:	f3bf 8f4f 	dsb	sy
  400d24:	b662      	cpsie	i
  400d26:	e7fe      	b.n	400d26 <xQueueGenericReceive+0x1e>
  400d28:	4604      	mov	r4, r0
  400d2a:	b961      	cbnz	r1, 400d46 <xQueueGenericReceive+0x3e>
  400d2c:	6c02      	ldr	r2, [r0, #64]	; 0x40
  400d2e:	b152      	cbz	r2, 400d46 <xQueueGenericReceive+0x3e>
  400d30:	f04f 0380 	mov.w	r3, #128	; 0x80
  400d34:	b672      	cpsid	i
  400d36:	f383 8811 	msr	BASEPRI, r3
  400d3a:	f3bf 8f6f 	isb	sy
  400d3e:	f3bf 8f4f 	dsb	sy
  400d42:	b662      	cpsie	i
  400d44:	e7fe      	b.n	400d44 <xQueueGenericReceive+0x3c>
  400d46:	4698      	mov	r8, r3
  400d48:	468b      	mov	fp, r1
  400d4a:	4b52      	ldr	r3, [pc, #328]	; (400e94 <xQueueGenericReceive+0x18c>)
  400d4c:	4798      	blx	r3
  400d4e:	b960      	cbnz	r0, 400d6a <xQueueGenericReceive+0x62>
  400d50:	9b01      	ldr	r3, [sp, #4]
  400d52:	b163      	cbz	r3, 400d6e <xQueueGenericReceive+0x66>
  400d54:	f04f 0380 	mov.w	r3, #128	; 0x80
  400d58:	b672      	cpsid	i
  400d5a:	f383 8811 	msr	BASEPRI, r3
  400d5e:	f3bf 8f6f 	isb	sy
  400d62:	f3bf 8f4f 	dsb	sy
  400d66:	b662      	cpsie	i
  400d68:	e7fe      	b.n	400d68 <xQueueGenericReceive+0x60>
  400d6a:	2600      	movs	r6, #0
  400d6c:	e000      	b.n	400d70 <xQueueGenericReceive+0x68>
  400d6e:	2600      	movs	r6, #0
  400d70:	4d49      	ldr	r5, [pc, #292]	; (400e98 <xQueueGenericReceive+0x190>)
  400d72:	f8df a154 	ldr.w	sl, [pc, #340]	; 400ec8 <xQueueGenericReceive+0x1c0>
  400d76:	f8df 9130 	ldr.w	r9, [pc, #304]	; 400ea8 <xQueueGenericReceive+0x1a0>
  400d7a:	47a8      	blx	r5
  400d7c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
  400d7e:	2b00      	cmp	r3, #0
  400d80:	d034      	beq.n	400dec <xQueueGenericReceive+0xe4>
  400d82:	68e5      	ldr	r5, [r4, #12]
  400d84:	4659      	mov	r1, fp
  400d86:	4620      	mov	r0, r4
  400d88:	4b44      	ldr	r3, [pc, #272]	; (400e9c <xQueueGenericReceive+0x194>)
  400d8a:	4798      	blx	r3
  400d8c:	f1b8 0f00 	cmp.w	r8, #0
  400d90:	d118      	bne.n	400dc4 <xQueueGenericReceive+0xbc>
  400d92:	6ba3      	ldr	r3, [r4, #56]	; 0x38
  400d94:	3b01      	subs	r3, #1
  400d96:	63a3      	str	r3, [r4, #56]	; 0x38
  400d98:	6823      	ldr	r3, [r4, #0]
  400d9a:	b913      	cbnz	r3, 400da2 <xQueueGenericReceive+0x9a>
  400d9c:	4b40      	ldr	r3, [pc, #256]	; (400ea0 <xQueueGenericReceive+0x198>)
  400d9e:	4798      	blx	r3
  400da0:	6060      	str	r0, [r4, #4]
  400da2:	6923      	ldr	r3, [r4, #16]
  400da4:	b1f3      	cbz	r3, 400de4 <xQueueGenericReceive+0xdc>
  400da6:	f104 0010 	add.w	r0, r4, #16
  400daa:	4b3e      	ldr	r3, [pc, #248]	; (400ea4 <xQueueGenericReceive+0x19c>)
  400dac:	4798      	blx	r3
  400dae:	2801      	cmp	r0, #1
  400db0:	d118      	bne.n	400de4 <xQueueGenericReceive+0xdc>
  400db2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  400db6:	4b3c      	ldr	r3, [pc, #240]	; (400ea8 <xQueueGenericReceive+0x1a0>)
  400db8:	601a      	str	r2, [r3, #0]
  400dba:	f3bf 8f4f 	dsb	sy
  400dbe:	f3bf 8f6f 	isb	sy
  400dc2:	e00f      	b.n	400de4 <xQueueGenericReceive+0xdc>
  400dc4:	60e5      	str	r5, [r4, #12]
  400dc6:	6a63      	ldr	r3, [r4, #36]	; 0x24
  400dc8:	b163      	cbz	r3, 400de4 <xQueueGenericReceive+0xdc>
  400dca:	f104 0024 	add.w	r0, r4, #36	; 0x24
  400dce:	4b35      	ldr	r3, [pc, #212]	; (400ea4 <xQueueGenericReceive+0x19c>)
  400dd0:	4798      	blx	r3
  400dd2:	b138      	cbz	r0, 400de4 <xQueueGenericReceive+0xdc>
  400dd4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  400dd8:	4b33      	ldr	r3, [pc, #204]	; (400ea8 <xQueueGenericReceive+0x1a0>)
  400dda:	601a      	str	r2, [r3, #0]
  400ddc:	f3bf 8f4f 	dsb	sy
  400de0:	f3bf 8f6f 	isb	sy
  400de4:	4b31      	ldr	r3, [pc, #196]	; (400eac <xQueueGenericReceive+0x1a4>)
  400de6:	4798      	blx	r3
  400de8:	2001      	movs	r0, #1
  400dea:	e04f      	b.n	400e8c <xQueueGenericReceive+0x184>
  400dec:	9b01      	ldr	r3, [sp, #4]
  400dee:	b91b      	cbnz	r3, 400df8 <xQueueGenericReceive+0xf0>
  400df0:	4b2e      	ldr	r3, [pc, #184]	; (400eac <xQueueGenericReceive+0x1a4>)
  400df2:	4798      	blx	r3
  400df4:	2000      	movs	r0, #0
  400df6:	e049      	b.n	400e8c <xQueueGenericReceive+0x184>
  400df8:	b916      	cbnz	r6, 400e00 <xQueueGenericReceive+0xf8>
  400dfa:	a802      	add	r0, sp, #8
  400dfc:	47d0      	blx	sl
  400dfe:	2601      	movs	r6, #1
  400e00:	4b2a      	ldr	r3, [pc, #168]	; (400eac <xQueueGenericReceive+0x1a4>)
  400e02:	4798      	blx	r3
  400e04:	4b2a      	ldr	r3, [pc, #168]	; (400eb0 <xQueueGenericReceive+0x1a8>)
  400e06:	4798      	blx	r3
  400e08:	47a8      	blx	r5
  400e0a:	6c63      	ldr	r3, [r4, #68]	; 0x44
  400e0c:	f1b3 3fff 	cmp.w	r3, #4294967295
  400e10:	d101      	bne.n	400e16 <xQueueGenericReceive+0x10e>
  400e12:	2300      	movs	r3, #0
  400e14:	6463      	str	r3, [r4, #68]	; 0x44
  400e16:	6ca3      	ldr	r3, [r4, #72]	; 0x48
  400e18:	f1b3 3fff 	cmp.w	r3, #4294967295
  400e1c:	d101      	bne.n	400e22 <xQueueGenericReceive+0x11a>
  400e1e:	2300      	movs	r3, #0
  400e20:	64a3      	str	r3, [r4, #72]	; 0x48
  400e22:	4b22      	ldr	r3, [pc, #136]	; (400eac <xQueueGenericReceive+0x1a4>)
  400e24:	4798      	blx	r3
  400e26:	a901      	add	r1, sp, #4
  400e28:	a802      	add	r0, sp, #8
  400e2a:	4b22      	ldr	r3, [pc, #136]	; (400eb4 <xQueueGenericReceive+0x1ac>)
  400e2c:	4798      	blx	r3
  400e2e:	bb38      	cbnz	r0, 400e80 <xQueueGenericReceive+0x178>
  400e30:	47a8      	blx	r5
  400e32:	6ba7      	ldr	r7, [r4, #56]	; 0x38
  400e34:	4b1d      	ldr	r3, [pc, #116]	; (400eac <xQueueGenericReceive+0x1a4>)
  400e36:	4798      	blx	r3
  400e38:	b9e7      	cbnz	r7, 400e74 <xQueueGenericReceive+0x16c>
  400e3a:	6823      	ldr	r3, [r4, #0]
  400e3c:	b92b      	cbnz	r3, 400e4a <xQueueGenericReceive+0x142>
  400e3e:	47a8      	blx	r5
  400e40:	6860      	ldr	r0, [r4, #4]
  400e42:	4b1d      	ldr	r3, [pc, #116]	; (400eb8 <xQueueGenericReceive+0x1b0>)
  400e44:	4798      	blx	r3
  400e46:	4b19      	ldr	r3, [pc, #100]	; (400eac <xQueueGenericReceive+0x1a4>)
  400e48:	4798      	blx	r3
  400e4a:	9901      	ldr	r1, [sp, #4]
  400e4c:	f104 0024 	add.w	r0, r4, #36	; 0x24
  400e50:	4b1a      	ldr	r3, [pc, #104]	; (400ebc <xQueueGenericReceive+0x1b4>)
  400e52:	4798      	blx	r3
  400e54:	4620      	mov	r0, r4
  400e56:	4b1a      	ldr	r3, [pc, #104]	; (400ec0 <xQueueGenericReceive+0x1b8>)
  400e58:	4798      	blx	r3
  400e5a:	4b1a      	ldr	r3, [pc, #104]	; (400ec4 <xQueueGenericReceive+0x1bc>)
  400e5c:	4798      	blx	r3
  400e5e:	2800      	cmp	r0, #0
  400e60:	d18b      	bne.n	400d7a <xQueueGenericReceive+0x72>
  400e62:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
  400e66:	f8c9 3000 	str.w	r3, [r9]
  400e6a:	f3bf 8f4f 	dsb	sy
  400e6e:	f3bf 8f6f 	isb	sy
  400e72:	e782      	b.n	400d7a <xQueueGenericReceive+0x72>
  400e74:	4620      	mov	r0, r4
  400e76:	4b12      	ldr	r3, [pc, #72]	; (400ec0 <xQueueGenericReceive+0x1b8>)
  400e78:	4798      	blx	r3
  400e7a:	4b12      	ldr	r3, [pc, #72]	; (400ec4 <xQueueGenericReceive+0x1bc>)
  400e7c:	4798      	blx	r3
  400e7e:	e77c      	b.n	400d7a <xQueueGenericReceive+0x72>
  400e80:	4620      	mov	r0, r4
  400e82:	4b0f      	ldr	r3, [pc, #60]	; (400ec0 <xQueueGenericReceive+0x1b8>)
  400e84:	4798      	blx	r3
  400e86:	4b0f      	ldr	r3, [pc, #60]	; (400ec4 <xQueueGenericReceive+0x1bc>)
  400e88:	4798      	blx	r3
  400e8a:	2000      	movs	r0, #0
  400e8c:	b005      	add	sp, #20
  400e8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  400e92:	bf00      	nop
  400e94:	00401919 	.word	0x00401919
  400e98:	00400305 	.word	0x00400305
  400e9c:	00400779 	.word	0x00400779
  400ea0:	00401aa1 	.word	0x00401aa1
  400ea4:	004017b1 	.word	0x004017b1
  400ea8:	e000ed04 	.word	0xe000ed04
  400eac:	00400351 	.word	0x00400351
  400eb0:	0040128d 	.word	0x0040128d
  400eb4:	00401879 	.word	0x00401879
  400eb8:	00401939 	.word	0x00401939
  400ebc:	004016ad 	.word	0x004016ad
  400ec0:	004007a1 	.word	0x004007a1
  400ec4:	004013dd 	.word	0x004013dd
  400ec8:	00401849 	.word	0x00401849

00400ecc <vQueueAddToRegistry>:
  400ecc:	b410      	push	{r4}
  400ece:	4b0b      	ldr	r3, [pc, #44]	; (400efc <vQueueAddToRegistry+0x30>)
  400ed0:	681b      	ldr	r3, [r3, #0]
  400ed2:	b12b      	cbz	r3, 400ee0 <vQueueAddToRegistry+0x14>
  400ed4:	2301      	movs	r3, #1
  400ed6:	4c09      	ldr	r4, [pc, #36]	; (400efc <vQueueAddToRegistry+0x30>)
  400ed8:	f854 2033 	ldr.w	r2, [r4, r3, lsl #3]
  400edc:	b942      	cbnz	r2, 400ef0 <vQueueAddToRegistry+0x24>
  400ede:	e000      	b.n	400ee2 <vQueueAddToRegistry+0x16>
  400ee0:	2300      	movs	r3, #0
  400ee2:	4a06      	ldr	r2, [pc, #24]	; (400efc <vQueueAddToRegistry+0x30>)
  400ee4:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
  400ee8:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
  400eec:	6058      	str	r0, [r3, #4]
  400eee:	e002      	b.n	400ef6 <vQueueAddToRegistry+0x2a>
  400ef0:	3301      	adds	r3, #1
  400ef2:	2b08      	cmp	r3, #8
  400ef4:	d1f0      	bne.n	400ed8 <vQueueAddToRegistry+0xc>
  400ef6:	f85d 4b04 	ldr.w	r4, [sp], #4
  400efa:	4770      	bx	lr
  400efc:	2040bef4 	.word	0x2040bef4

00400f00 <vQueueWaitForMessageRestricted>:
  400f00:	b570      	push	{r4, r5, r6, lr}
  400f02:	4604      	mov	r4, r0
  400f04:	460d      	mov	r5, r1
  400f06:	4616      	mov	r6, r2
  400f08:	4b0d      	ldr	r3, [pc, #52]	; (400f40 <vQueueWaitForMessageRestricted+0x40>)
  400f0a:	4798      	blx	r3
  400f0c:	6c63      	ldr	r3, [r4, #68]	; 0x44
  400f0e:	f1b3 3fff 	cmp.w	r3, #4294967295
  400f12:	d101      	bne.n	400f18 <vQueueWaitForMessageRestricted+0x18>
  400f14:	2300      	movs	r3, #0
  400f16:	6463      	str	r3, [r4, #68]	; 0x44
  400f18:	6ca3      	ldr	r3, [r4, #72]	; 0x48
  400f1a:	f1b3 3fff 	cmp.w	r3, #4294967295
  400f1e:	d101      	bne.n	400f24 <vQueueWaitForMessageRestricted+0x24>
  400f20:	2300      	movs	r3, #0
  400f22:	64a3      	str	r3, [r4, #72]	; 0x48
  400f24:	4b07      	ldr	r3, [pc, #28]	; (400f44 <vQueueWaitForMessageRestricted+0x44>)
  400f26:	4798      	blx	r3
  400f28:	6ba3      	ldr	r3, [r4, #56]	; 0x38
  400f2a:	b92b      	cbnz	r3, 400f38 <vQueueWaitForMessageRestricted+0x38>
  400f2c:	4632      	mov	r2, r6
  400f2e:	4629      	mov	r1, r5
  400f30:	f104 0024 	add.w	r0, r4, #36	; 0x24
  400f34:	4b04      	ldr	r3, [pc, #16]	; (400f48 <vQueueWaitForMessageRestricted+0x48>)
  400f36:	4798      	blx	r3
  400f38:	4620      	mov	r0, r4
  400f3a:	4b04      	ldr	r3, [pc, #16]	; (400f4c <vQueueWaitForMessageRestricted+0x4c>)
  400f3c:	4798      	blx	r3
  400f3e:	bd70      	pop	{r4, r5, r6, pc}
  400f40:	00400305 	.word	0x00400305
  400f44:	00400351 	.word	0x00400351
  400f48:	00401731 	.word	0x00401731
  400f4c:	004007a1 	.word	0x004007a1

00400f50 <prvResetNextTaskUnblockTime>:
  400f50:	4b08      	ldr	r3, [pc, #32]	; (400f74 <prvResetNextTaskUnblockTime+0x24>)
  400f52:	681b      	ldr	r3, [r3, #0]
  400f54:	681b      	ldr	r3, [r3, #0]
  400f56:	b923      	cbnz	r3, 400f62 <prvResetNextTaskUnblockTime+0x12>
  400f58:	f04f 32ff 	mov.w	r2, #4294967295
  400f5c:	4b06      	ldr	r3, [pc, #24]	; (400f78 <prvResetNextTaskUnblockTime+0x28>)
  400f5e:	601a      	str	r2, [r3, #0]
  400f60:	4770      	bx	lr
  400f62:	4b04      	ldr	r3, [pc, #16]	; (400f74 <prvResetNextTaskUnblockTime+0x24>)
  400f64:	681b      	ldr	r3, [r3, #0]
  400f66:	68db      	ldr	r3, [r3, #12]
  400f68:	68db      	ldr	r3, [r3, #12]
  400f6a:	685a      	ldr	r2, [r3, #4]
  400f6c:	4b02      	ldr	r3, [pc, #8]	; (400f78 <prvResetNextTaskUnblockTime+0x28>)
  400f6e:	601a      	str	r2, [r3, #0]
  400f70:	4770      	bx	lr
  400f72:	bf00      	nop
  400f74:	2040bd58 	.word	0x2040bd58
  400f78:	2040be7c 	.word	0x2040be7c

00400f7c <prvAddCurrentTaskToDelayedList>:
  400f7c:	b510      	push	{r4, lr}
  400f7e:	4b0f      	ldr	r3, [pc, #60]	; (400fbc <prvAddCurrentTaskToDelayedList+0x40>)
  400f80:	681b      	ldr	r3, [r3, #0]
  400f82:	6058      	str	r0, [r3, #4]
  400f84:	4b0e      	ldr	r3, [pc, #56]	; (400fc0 <prvAddCurrentTaskToDelayedList+0x44>)
  400f86:	681b      	ldr	r3, [r3, #0]
  400f88:	4298      	cmp	r0, r3
  400f8a:	d207      	bcs.n	400f9c <prvAddCurrentTaskToDelayedList+0x20>
  400f8c:	4b0d      	ldr	r3, [pc, #52]	; (400fc4 <prvAddCurrentTaskToDelayedList+0x48>)
  400f8e:	6818      	ldr	r0, [r3, #0]
  400f90:	4b0a      	ldr	r3, [pc, #40]	; (400fbc <prvAddCurrentTaskToDelayedList+0x40>)
  400f92:	6819      	ldr	r1, [r3, #0]
  400f94:	3104      	adds	r1, #4
  400f96:	4b0c      	ldr	r3, [pc, #48]	; (400fc8 <prvAddCurrentTaskToDelayedList+0x4c>)
  400f98:	4798      	blx	r3
  400f9a:	bd10      	pop	{r4, pc}
  400f9c:	4604      	mov	r4, r0
  400f9e:	4b0b      	ldr	r3, [pc, #44]	; (400fcc <prvAddCurrentTaskToDelayedList+0x50>)
  400fa0:	6818      	ldr	r0, [r3, #0]
  400fa2:	4b06      	ldr	r3, [pc, #24]	; (400fbc <prvAddCurrentTaskToDelayedList+0x40>)
  400fa4:	6819      	ldr	r1, [r3, #0]
  400fa6:	3104      	adds	r1, #4
  400fa8:	4b07      	ldr	r3, [pc, #28]	; (400fc8 <prvAddCurrentTaskToDelayedList+0x4c>)
  400faa:	4798      	blx	r3
  400fac:	4b08      	ldr	r3, [pc, #32]	; (400fd0 <prvAddCurrentTaskToDelayedList+0x54>)
  400fae:	681b      	ldr	r3, [r3, #0]
  400fb0:	429c      	cmp	r4, r3
  400fb2:	d201      	bcs.n	400fb8 <prvAddCurrentTaskToDelayedList+0x3c>
  400fb4:	4b06      	ldr	r3, [pc, #24]	; (400fd0 <prvAddCurrentTaskToDelayedList+0x54>)
  400fb6:	601c      	str	r4, [r3, #0]
  400fb8:	bd10      	pop	{r4, pc}
  400fba:	bf00      	nop
  400fbc:	2040be5c 	.word	0x2040be5c
  400fc0:	2040be78 	.word	0x2040be78
  400fc4:	2040bd78 	.word	0x2040bd78
  400fc8:	00400615 	.word	0x00400615
  400fcc:	2040bd58 	.word	0x2040bd58
  400fd0:	2040be7c 	.word	0x2040be7c

00400fd4 <xTaskGenericCreate>:
  400fd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  400fd8:	b083      	sub	sp, #12
  400fda:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  400fdc:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
  400fe0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
  400fe2:	b950      	cbnz	r0, 400ffa <xTaskGenericCreate+0x26>
  400fe4:	f04f 0380 	mov.w	r3, #128	; 0x80
  400fe8:	b672      	cpsid	i
  400fea:	f383 8811 	msr	BASEPRI, r3
  400fee:	f3bf 8f6f 	isb	sy
  400ff2:	f3bf 8f4f 	dsb	sy
  400ff6:	b662      	cpsie	i
  400ff8:	e7fe      	b.n	400ff8 <xTaskGenericCreate+0x24>
  400ffa:	2f09      	cmp	r7, #9
  400ffc:	d90a      	bls.n	401014 <xTaskGenericCreate+0x40>
  400ffe:	f04f 0380 	mov.w	r3, #128	; 0x80
  401002:	b672      	cpsid	i
  401004:	f383 8811 	msr	BASEPRI, r3
  401008:	f3bf 8f6f 	isb	sy
  40100c:	f3bf 8f4f 	dsb	sy
  401010:	b662      	cpsie	i
  401012:	e7fe      	b.n	401012 <xTaskGenericCreate+0x3e>
  401014:	9001      	str	r0, [sp, #4]
  401016:	9300      	str	r3, [sp, #0]
  401018:	4690      	mov	r8, r2
  40101a:	460e      	mov	r6, r1
  40101c:	b935      	cbnz	r5, 40102c <xTaskGenericCreate+0x58>
  40101e:	0090      	lsls	r0, r2, #2
  401020:	4b5f      	ldr	r3, [pc, #380]	; (4011a0 <xTaskGenericCreate+0x1cc>)
  401022:	4798      	blx	r3
  401024:	4605      	mov	r5, r0
  401026:	2800      	cmp	r0, #0
  401028:	f000 80b4 	beq.w	401194 <xTaskGenericCreate+0x1c0>
  40102c:	2058      	movs	r0, #88	; 0x58
  40102e:	4b5c      	ldr	r3, [pc, #368]	; (4011a0 <xTaskGenericCreate+0x1cc>)
  401030:	4798      	blx	r3
  401032:	4604      	mov	r4, r0
  401034:	b1a0      	cbz	r0, 401060 <xTaskGenericCreate+0x8c>
  401036:	6305      	str	r5, [r0, #48]	; 0x30
  401038:	ea4f 0288 	mov.w	r2, r8, lsl #2
  40103c:	21a5      	movs	r1, #165	; 0xa5
  40103e:	4628      	mov	r0, r5
  401040:	4b58      	ldr	r3, [pc, #352]	; (4011a4 <xTaskGenericCreate+0x1d0>)
  401042:	4798      	blx	r3
  401044:	f06f 4540 	mvn.w	r5, #3221225472	; 0xc0000000
  401048:	4445      	add	r5, r8
  40104a:	6b23      	ldr	r3, [r4, #48]	; 0x30
  40104c:	eb03 0385 	add.w	r3, r3, r5, lsl #2
  401050:	f023 0507 	bic.w	r5, r3, #7
  401054:	7833      	ldrb	r3, [r6, #0]
  401056:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  40105a:	7833      	ldrb	r3, [r6, #0]
  40105c:	b923      	cbnz	r3, 401068 <xTaskGenericCreate+0x94>
  40105e:	e00f      	b.n	401080 <xTaskGenericCreate+0xac>
  401060:	4628      	mov	r0, r5
  401062:	4b51      	ldr	r3, [pc, #324]	; (4011a8 <xTaskGenericCreate+0x1d4>)
  401064:	4798      	blx	r3
  401066:	e095      	b.n	401194 <xTaskGenericCreate+0x1c0>
  401068:	4633      	mov	r3, r6
  40106a:	f104 0234 	add.w	r2, r4, #52	; 0x34
  40106e:	3609      	adds	r6, #9
  401070:	f813 1f01 	ldrb.w	r1, [r3, #1]!
  401074:	f802 1f01 	strb.w	r1, [r2, #1]!
  401078:	7819      	ldrb	r1, [r3, #0]
  40107a:	b109      	cbz	r1, 401080 <xTaskGenericCreate+0xac>
  40107c:	429e      	cmp	r6, r3
  40107e:	d1f7      	bne.n	401070 <xTaskGenericCreate+0x9c>
  401080:	f04f 0800 	mov.w	r8, #0
  401084:	f884 803d 	strb.w	r8, [r4, #61]	; 0x3d
  401088:	463e      	mov	r6, r7
  40108a:	2f09      	cmp	r7, #9
  40108c:	bf28      	it	cs
  40108e:	2609      	movcs	r6, #9
  401090:	62e6      	str	r6, [r4, #44]	; 0x2c
  401092:	64a6      	str	r6, [r4, #72]	; 0x48
  401094:	f8c4 804c 	str.w	r8, [r4, #76]	; 0x4c
  401098:	f104 0904 	add.w	r9, r4, #4
  40109c:	4648      	mov	r0, r9
  40109e:	f8df b154 	ldr.w	fp, [pc, #340]	; 4011f4 <xTaskGenericCreate+0x220>
  4010a2:	47d8      	blx	fp
  4010a4:	f104 0018 	add.w	r0, r4, #24
  4010a8:	47d8      	blx	fp
  4010aa:	6124      	str	r4, [r4, #16]
  4010ac:	f1c6 060a 	rsb	r6, r6, #10
  4010b0:	61a6      	str	r6, [r4, #24]
  4010b2:	6264      	str	r4, [r4, #36]	; 0x24
  4010b4:	f8c4 8050 	str.w	r8, [r4, #80]	; 0x50
  4010b8:	f884 8054 	strb.w	r8, [r4, #84]	; 0x54
  4010bc:	9a00      	ldr	r2, [sp, #0]
  4010be:	9901      	ldr	r1, [sp, #4]
  4010c0:	4628      	mov	r0, r5
  4010c2:	4b3a      	ldr	r3, [pc, #232]	; (4011ac <xTaskGenericCreate+0x1d8>)
  4010c4:	4798      	blx	r3
  4010c6:	6020      	str	r0, [r4, #0]
  4010c8:	f1ba 0f00 	cmp.w	sl, #0
  4010cc:	d001      	beq.n	4010d2 <xTaskGenericCreate+0xfe>
  4010ce:	f8ca 4000 	str.w	r4, [sl]
  4010d2:	4b37      	ldr	r3, [pc, #220]	; (4011b0 <xTaskGenericCreate+0x1dc>)
  4010d4:	4798      	blx	r3
  4010d6:	4a37      	ldr	r2, [pc, #220]	; (4011b4 <xTaskGenericCreate+0x1e0>)
  4010d8:	6813      	ldr	r3, [r2, #0]
  4010da:	3301      	adds	r3, #1
  4010dc:	6013      	str	r3, [r2, #0]
  4010de:	4b36      	ldr	r3, [pc, #216]	; (4011b8 <xTaskGenericCreate+0x1e4>)
  4010e0:	681b      	ldr	r3, [r3, #0]
  4010e2:	bb0b      	cbnz	r3, 401128 <xTaskGenericCreate+0x154>
  4010e4:	4b34      	ldr	r3, [pc, #208]	; (4011b8 <xTaskGenericCreate+0x1e4>)
  4010e6:	601c      	str	r4, [r3, #0]
  4010e8:	6813      	ldr	r3, [r2, #0]
  4010ea:	2b01      	cmp	r3, #1
  4010ec:	d126      	bne.n	40113c <xTaskGenericCreate+0x168>
  4010ee:	4d33      	ldr	r5, [pc, #204]	; (4011bc <xTaskGenericCreate+0x1e8>)
  4010f0:	f105 08c8 	add.w	r8, r5, #200	; 0xc8
  4010f4:	4e32      	ldr	r6, [pc, #200]	; (4011c0 <xTaskGenericCreate+0x1ec>)
  4010f6:	4628      	mov	r0, r5
  4010f8:	47b0      	blx	r6
  4010fa:	3514      	adds	r5, #20
  4010fc:	4545      	cmp	r5, r8
  4010fe:	d1fa      	bne.n	4010f6 <xTaskGenericCreate+0x122>
  401100:	f8df 80f4 	ldr.w	r8, [pc, #244]	; 4011f8 <xTaskGenericCreate+0x224>
  401104:	4640      	mov	r0, r8
  401106:	4d2e      	ldr	r5, [pc, #184]	; (4011c0 <xTaskGenericCreate+0x1ec>)
  401108:	47a8      	blx	r5
  40110a:	4e2e      	ldr	r6, [pc, #184]	; (4011c4 <xTaskGenericCreate+0x1f0>)
  40110c:	4630      	mov	r0, r6
  40110e:	47a8      	blx	r5
  401110:	482d      	ldr	r0, [pc, #180]	; (4011c8 <xTaskGenericCreate+0x1f4>)
  401112:	47a8      	blx	r5
  401114:	482d      	ldr	r0, [pc, #180]	; (4011cc <xTaskGenericCreate+0x1f8>)
  401116:	47a8      	blx	r5
  401118:	482d      	ldr	r0, [pc, #180]	; (4011d0 <xTaskGenericCreate+0x1fc>)
  40111a:	47a8      	blx	r5
  40111c:	4b2d      	ldr	r3, [pc, #180]	; (4011d4 <xTaskGenericCreate+0x200>)
  40111e:	f8c3 8000 	str.w	r8, [r3]
  401122:	4b2d      	ldr	r3, [pc, #180]	; (4011d8 <xTaskGenericCreate+0x204>)
  401124:	601e      	str	r6, [r3, #0]
  401126:	e009      	b.n	40113c <xTaskGenericCreate+0x168>
  401128:	4b2c      	ldr	r3, [pc, #176]	; (4011dc <xTaskGenericCreate+0x208>)
  40112a:	681b      	ldr	r3, [r3, #0]
  40112c:	b933      	cbnz	r3, 40113c <xTaskGenericCreate+0x168>
  40112e:	4b22      	ldr	r3, [pc, #136]	; (4011b8 <xTaskGenericCreate+0x1e4>)
  401130:	681b      	ldr	r3, [r3, #0]
  401132:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  401134:	429f      	cmp	r7, r3
  401136:	d301      	bcc.n	40113c <xTaskGenericCreate+0x168>
  401138:	4b1f      	ldr	r3, [pc, #124]	; (4011b8 <xTaskGenericCreate+0x1e4>)
  40113a:	601c      	str	r4, [r3, #0]
  40113c:	4a28      	ldr	r2, [pc, #160]	; (4011e0 <xTaskGenericCreate+0x20c>)
  40113e:	6813      	ldr	r3, [r2, #0]
  401140:	3301      	adds	r3, #1
  401142:	6013      	str	r3, [r2, #0]
  401144:	6423      	str	r3, [r4, #64]	; 0x40
  401146:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  401148:	4926      	ldr	r1, [pc, #152]	; (4011e4 <xTaskGenericCreate+0x210>)
  40114a:	680b      	ldr	r3, [r1, #0]
  40114c:	2201      	movs	r2, #1
  40114e:	4082      	lsls	r2, r0
  401150:	4313      	orrs	r3, r2
  401152:	600b      	str	r3, [r1, #0]
  401154:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  401158:	4649      	mov	r1, r9
  40115a:	4b18      	ldr	r3, [pc, #96]	; (4011bc <xTaskGenericCreate+0x1e8>)
  40115c:	eb03 0080 	add.w	r0, r3, r0, lsl #2
  401160:	4b21      	ldr	r3, [pc, #132]	; (4011e8 <xTaskGenericCreate+0x214>)
  401162:	4798      	blx	r3
  401164:	4b21      	ldr	r3, [pc, #132]	; (4011ec <xTaskGenericCreate+0x218>)
  401166:	4798      	blx	r3
  401168:	4b1c      	ldr	r3, [pc, #112]	; (4011dc <xTaskGenericCreate+0x208>)
  40116a:	681b      	ldr	r3, [r3, #0]
  40116c:	b173      	cbz	r3, 40118c <xTaskGenericCreate+0x1b8>
  40116e:	4b12      	ldr	r3, [pc, #72]	; (4011b8 <xTaskGenericCreate+0x1e4>)
  401170:	681b      	ldr	r3, [r3, #0]
  401172:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  401174:	429f      	cmp	r7, r3
  401176:	d90b      	bls.n	401190 <xTaskGenericCreate+0x1bc>
  401178:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  40117c:	4b1c      	ldr	r3, [pc, #112]	; (4011f0 <xTaskGenericCreate+0x21c>)
  40117e:	601a      	str	r2, [r3, #0]
  401180:	f3bf 8f4f 	dsb	sy
  401184:	f3bf 8f6f 	isb	sy
  401188:	2001      	movs	r0, #1
  40118a:	e005      	b.n	401198 <xTaskGenericCreate+0x1c4>
  40118c:	2001      	movs	r0, #1
  40118e:	e003      	b.n	401198 <xTaskGenericCreate+0x1c4>
  401190:	2001      	movs	r0, #1
  401192:	e001      	b.n	401198 <xTaskGenericCreate+0x1c4>
  401194:	f04f 30ff 	mov.w	r0, #4294967295
  401198:	b003      	add	sp, #12
  40119a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40119e:	bf00      	nop
  4011a0:	00400561 	.word	0x00400561
  4011a4:	00402ce1 	.word	0x00402ce1
  4011a8:	004005c1 	.word	0x004005c1
  4011ac:	004002b9 	.word	0x004002b9
  4011b0:	00400305 	.word	0x00400305
  4011b4:	2040be84 	.word	0x2040be84
  4011b8:	2040be5c 	.word	0x2040be5c
  4011bc:	2040bd80 	.word	0x2040bd80
  4011c0:	004005dd 	.word	0x004005dd
  4011c4:	2040be88 	.word	0x2040be88
  4011c8:	2040be60 	.word	0x2040be60
  4011cc:	2040be48 	.word	0x2040be48
  4011d0:	2040be9c 	.word	0x2040be9c
  4011d4:	2040bd58 	.word	0x2040bd58
  4011d8:	2040bd78 	.word	0x2040bd78
  4011dc:	2040bd5c 	.word	0x2040bd5c
  4011e0:	2040be80 	.word	0x2040be80
  4011e4:	2040beb0 	.word	0x2040beb0
  4011e8:	004005fd 	.word	0x004005fd
  4011ec:	00400351 	.word	0x00400351
  4011f0:	e000ed04 	.word	0xe000ed04
  4011f4:	004005f5 	.word	0x004005f5
  4011f8:	2040bd64 	.word	0x2040bd64

004011fc <vTaskStartScheduler>:
  4011fc:	b510      	push	{r4, lr}
  4011fe:	b084      	sub	sp, #16
  401200:	2300      	movs	r3, #0
  401202:	9303      	str	r3, [sp, #12]
  401204:	9302      	str	r3, [sp, #8]
  401206:	9301      	str	r3, [sp, #4]
  401208:	9300      	str	r3, [sp, #0]
  40120a:	2282      	movs	r2, #130	; 0x82
  40120c:	4917      	ldr	r1, [pc, #92]	; (40126c <vTaskStartScheduler+0x70>)
  40120e:	4818      	ldr	r0, [pc, #96]	; (401270 <vTaskStartScheduler+0x74>)
  401210:	4c18      	ldr	r4, [pc, #96]	; (401274 <vTaskStartScheduler+0x78>)
  401212:	47a0      	blx	r4
  401214:	2801      	cmp	r0, #1
  401216:	d11a      	bne.n	40124e <vTaskStartScheduler+0x52>
  401218:	4b17      	ldr	r3, [pc, #92]	; (401278 <vTaskStartScheduler+0x7c>)
  40121a:	4798      	blx	r3
  40121c:	2801      	cmp	r0, #1
  40121e:	d116      	bne.n	40124e <vTaskStartScheduler+0x52>
  401220:	f04f 0380 	mov.w	r3, #128	; 0x80
  401224:	b672      	cpsid	i
  401226:	f383 8811 	msr	BASEPRI, r3
  40122a:	f3bf 8f6f 	isb	sy
  40122e:	f3bf 8f4f 	dsb	sy
  401232:	b662      	cpsie	i
  401234:	f04f 32ff 	mov.w	r2, #4294967295
  401238:	4b10      	ldr	r3, [pc, #64]	; (40127c <vTaskStartScheduler+0x80>)
  40123a:	601a      	str	r2, [r3, #0]
  40123c:	2201      	movs	r2, #1
  40123e:	4b10      	ldr	r3, [pc, #64]	; (401280 <vTaskStartScheduler+0x84>)
  401240:	601a      	str	r2, [r3, #0]
  401242:	2200      	movs	r2, #0
  401244:	4b0f      	ldr	r3, [pc, #60]	; (401284 <vTaskStartScheduler+0x88>)
  401246:	601a      	str	r2, [r3, #0]
  401248:	4b0f      	ldr	r3, [pc, #60]	; (401288 <vTaskStartScheduler+0x8c>)
  40124a:	4798      	blx	r3
  40124c:	e00b      	b.n	401266 <vTaskStartScheduler+0x6a>
  40124e:	b950      	cbnz	r0, 401266 <vTaskStartScheduler+0x6a>
  401250:	f04f 0380 	mov.w	r3, #128	; 0x80
  401254:	b672      	cpsid	i
  401256:	f383 8811 	msr	BASEPRI, r3
  40125a:	f3bf 8f6f 	isb	sy
  40125e:	f3bf 8f4f 	dsb	sy
  401262:	b662      	cpsie	i
  401264:	e7fe      	b.n	401264 <vTaskStartScheduler+0x68>
  401266:	b004      	add	sp, #16
  401268:	bd10      	pop	{r4, pc}
  40126a:	bf00      	nop
  40126c:	00402f48 	.word	0x00402f48
  401270:	00401585 	.word	0x00401585
  401274:	00400fd5 	.word	0x00400fd5
  401278:	00401b89 	.word	0x00401b89
  40127c:	2040be7c 	.word	0x2040be7c
  401280:	2040bd5c 	.word	0x2040bd5c
  401284:	2040be78 	.word	0x2040be78
  401288:	00400439 	.word	0x00400439

0040128c <vTaskSuspendAll>:
  40128c:	4a02      	ldr	r2, [pc, #8]	; (401298 <vTaskSuspendAll+0xc>)
  40128e:	6813      	ldr	r3, [r2, #0]
  401290:	3301      	adds	r3, #1
  401292:	6013      	str	r3, [r2, #0]
  401294:	4770      	bx	lr
  401296:	bf00      	nop
  401298:	2040be74 	.word	0x2040be74

0040129c <xTaskGetTickCount>:
  40129c:	4b01      	ldr	r3, [pc, #4]	; (4012a4 <xTaskGetTickCount+0x8>)
  40129e:	6818      	ldr	r0, [r3, #0]
  4012a0:	4770      	bx	lr
  4012a2:	bf00      	nop
  4012a4:	2040be78 	.word	0x2040be78

004012a8 <xTaskIncrementTick>:
  4012a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4012ac:	4b3d      	ldr	r3, [pc, #244]	; (4013a4 <xTaskIncrementTick+0xfc>)
  4012ae:	681b      	ldr	r3, [r3, #0]
  4012b0:	2b00      	cmp	r3, #0
  4012b2:	d16a      	bne.n	40138a <xTaskIncrementTick+0xe2>
  4012b4:	4b3c      	ldr	r3, [pc, #240]	; (4013a8 <xTaskIncrementTick+0x100>)
  4012b6:	681a      	ldr	r2, [r3, #0]
  4012b8:	3201      	adds	r2, #1
  4012ba:	601a      	str	r2, [r3, #0]
  4012bc:	681e      	ldr	r6, [r3, #0]
  4012be:	b9d6      	cbnz	r6, 4012f6 <xTaskIncrementTick+0x4e>
  4012c0:	4b3a      	ldr	r3, [pc, #232]	; (4013ac <xTaskIncrementTick+0x104>)
  4012c2:	681b      	ldr	r3, [r3, #0]
  4012c4:	681b      	ldr	r3, [r3, #0]
  4012c6:	b153      	cbz	r3, 4012de <xTaskIncrementTick+0x36>
  4012c8:	f04f 0380 	mov.w	r3, #128	; 0x80
  4012cc:	b672      	cpsid	i
  4012ce:	f383 8811 	msr	BASEPRI, r3
  4012d2:	f3bf 8f6f 	isb	sy
  4012d6:	f3bf 8f4f 	dsb	sy
  4012da:	b662      	cpsie	i
  4012dc:	e7fe      	b.n	4012dc <xTaskIncrementTick+0x34>
  4012de:	4a33      	ldr	r2, [pc, #204]	; (4013ac <xTaskIncrementTick+0x104>)
  4012e0:	6811      	ldr	r1, [r2, #0]
  4012e2:	4b33      	ldr	r3, [pc, #204]	; (4013b0 <xTaskIncrementTick+0x108>)
  4012e4:	6818      	ldr	r0, [r3, #0]
  4012e6:	6010      	str	r0, [r2, #0]
  4012e8:	6019      	str	r1, [r3, #0]
  4012ea:	4a32      	ldr	r2, [pc, #200]	; (4013b4 <xTaskIncrementTick+0x10c>)
  4012ec:	6813      	ldr	r3, [r2, #0]
  4012ee:	3301      	adds	r3, #1
  4012f0:	6013      	str	r3, [r2, #0]
  4012f2:	4b31      	ldr	r3, [pc, #196]	; (4013b8 <xTaskIncrementTick+0x110>)
  4012f4:	4798      	blx	r3
  4012f6:	4b31      	ldr	r3, [pc, #196]	; (4013bc <xTaskIncrementTick+0x114>)
  4012f8:	681b      	ldr	r3, [r3, #0]
  4012fa:	429e      	cmp	r6, r3
  4012fc:	d201      	bcs.n	401302 <xTaskIncrementTick+0x5a>
  4012fe:	2400      	movs	r4, #0
  401300:	e037      	b.n	401372 <xTaskIncrementTick+0xca>
  401302:	2400      	movs	r4, #0
  401304:	f8df 90a4 	ldr.w	r9, [pc, #164]	; 4013ac <xTaskIncrementTick+0x104>
  401308:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 4013d8 <xTaskIncrementTick+0x130>
  40130c:	4f2c      	ldr	r7, [pc, #176]	; (4013c0 <xTaskIncrementTick+0x118>)
  40130e:	f8d9 3000 	ldr.w	r3, [r9]
  401312:	681b      	ldr	r3, [r3, #0]
  401314:	b923      	cbnz	r3, 401320 <xTaskIncrementTick+0x78>
  401316:	f04f 32ff 	mov.w	r2, #4294967295
  40131a:	4b28      	ldr	r3, [pc, #160]	; (4013bc <xTaskIncrementTick+0x114>)
  40131c:	601a      	str	r2, [r3, #0]
  40131e:	e028      	b.n	401372 <xTaskIncrementTick+0xca>
  401320:	f8d9 3000 	ldr.w	r3, [r9]
  401324:	68db      	ldr	r3, [r3, #12]
  401326:	68dd      	ldr	r5, [r3, #12]
  401328:	686b      	ldr	r3, [r5, #4]
  40132a:	429e      	cmp	r6, r3
  40132c:	d202      	bcs.n	401334 <xTaskIncrementTick+0x8c>
  40132e:	4a23      	ldr	r2, [pc, #140]	; (4013bc <xTaskIncrementTick+0x114>)
  401330:	6013      	str	r3, [r2, #0]
  401332:	e01e      	b.n	401372 <xTaskIncrementTick+0xca>
  401334:	f105 0a04 	add.w	sl, r5, #4
  401338:	4650      	mov	r0, sl
  40133a:	47c0      	blx	r8
  40133c:	6aab      	ldr	r3, [r5, #40]	; 0x28
  40133e:	b113      	cbz	r3, 401346 <xTaskIncrementTick+0x9e>
  401340:	f105 0018 	add.w	r0, r5, #24
  401344:	47c0      	blx	r8
  401346:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
  401348:	683b      	ldr	r3, [r7, #0]
  40134a:	2201      	movs	r2, #1
  40134c:	4082      	lsls	r2, r0
  40134e:	4313      	orrs	r3, r2
  401350:	603b      	str	r3, [r7, #0]
  401352:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  401356:	4651      	mov	r1, sl
  401358:	4b1a      	ldr	r3, [pc, #104]	; (4013c4 <xTaskIncrementTick+0x11c>)
  40135a:	eb03 0080 	add.w	r0, r3, r0, lsl #2
  40135e:	4b1a      	ldr	r3, [pc, #104]	; (4013c8 <xTaskIncrementTick+0x120>)
  401360:	4798      	blx	r3
  401362:	4b1a      	ldr	r3, [pc, #104]	; (4013cc <xTaskIncrementTick+0x124>)
  401364:	681b      	ldr	r3, [r3, #0]
  401366:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  401368:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  40136a:	429a      	cmp	r2, r3
  40136c:	bf28      	it	cs
  40136e:	2401      	movcs	r4, #1
  401370:	e7cd      	b.n	40130e <xTaskIncrementTick+0x66>
  401372:	4b16      	ldr	r3, [pc, #88]	; (4013cc <xTaskIncrementTick+0x124>)
  401374:	681b      	ldr	r3, [r3, #0]
  401376:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  401378:	eb03 0383 	add.w	r3, r3, r3, lsl #2
  40137c:	4a11      	ldr	r2, [pc, #68]	; (4013c4 <xTaskIncrementTick+0x11c>)
  40137e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
  401382:	2b02      	cmp	r3, #2
  401384:	bf28      	it	cs
  401386:	2401      	movcs	r4, #1
  401388:	e004      	b.n	401394 <xTaskIncrementTick+0xec>
  40138a:	4a11      	ldr	r2, [pc, #68]	; (4013d0 <xTaskIncrementTick+0x128>)
  40138c:	6813      	ldr	r3, [r2, #0]
  40138e:	3301      	adds	r3, #1
  401390:	6013      	str	r3, [r2, #0]
  401392:	2400      	movs	r4, #0
  401394:	4b0f      	ldr	r3, [pc, #60]	; (4013d4 <xTaskIncrementTick+0x12c>)
  401396:	681b      	ldr	r3, [r3, #0]
  401398:	2b00      	cmp	r3, #0
  40139a:	bf0c      	ite	eq
  40139c:	4620      	moveq	r0, r4
  40139e:	2001      	movne	r0, #1
  4013a0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4013a4:	2040be74 	.word	0x2040be74
  4013a8:	2040be78 	.word	0x2040be78
  4013ac:	2040bd58 	.word	0x2040bd58
  4013b0:	2040bd78 	.word	0x2040bd78
  4013b4:	2040bd54 	.word	0x2040bd54
  4013b8:	00400f51 	.word	0x00400f51
  4013bc:	2040be7c 	.word	0x2040be7c
  4013c0:	2040beb0 	.word	0x2040beb0
  4013c4:	2040bd80 	.word	0x2040bd80
  4013c8:	004005fd 	.word	0x004005fd
  4013cc:	2040be5c 	.word	0x2040be5c
  4013d0:	2040bd7c 	.word	0x2040bd7c
  4013d4:	2040beb4 	.word	0x2040beb4
  4013d8:	00400649 	.word	0x00400649

004013dc <xTaskResumeAll>:
  4013dc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4013e0:	4b36      	ldr	r3, [pc, #216]	; (4014bc <xTaskResumeAll+0xe0>)
  4013e2:	681b      	ldr	r3, [r3, #0]
  4013e4:	b953      	cbnz	r3, 4013fc <xTaskResumeAll+0x20>
  4013e6:	f04f 0380 	mov.w	r3, #128	; 0x80
  4013ea:	b672      	cpsid	i
  4013ec:	f383 8811 	msr	BASEPRI, r3
  4013f0:	f3bf 8f6f 	isb	sy
  4013f4:	f3bf 8f4f 	dsb	sy
  4013f8:	b662      	cpsie	i
  4013fa:	e7fe      	b.n	4013fa <xTaskResumeAll+0x1e>
  4013fc:	4b30      	ldr	r3, [pc, #192]	; (4014c0 <xTaskResumeAll+0xe4>)
  4013fe:	4798      	blx	r3
  401400:	4b2e      	ldr	r3, [pc, #184]	; (4014bc <xTaskResumeAll+0xe0>)
  401402:	681a      	ldr	r2, [r3, #0]
  401404:	3a01      	subs	r2, #1
  401406:	601a      	str	r2, [r3, #0]
  401408:	681b      	ldr	r3, [r3, #0]
  40140a:	2b00      	cmp	r3, #0
  40140c:	d14d      	bne.n	4014aa <xTaskResumeAll+0xce>
  40140e:	4b2d      	ldr	r3, [pc, #180]	; (4014c4 <xTaskResumeAll+0xe8>)
  401410:	681b      	ldr	r3, [r3, #0]
  401412:	bb0b      	cbnz	r3, 401458 <xTaskResumeAll+0x7c>
  401414:	2400      	movs	r4, #0
  401416:	e04b      	b.n	4014b0 <xTaskResumeAll+0xd4>
  401418:	68fb      	ldr	r3, [r7, #12]
  40141a:	68dc      	ldr	r4, [r3, #12]
  40141c:	f104 0018 	add.w	r0, r4, #24
  401420:	47b0      	blx	r6
  401422:	f104 0804 	add.w	r8, r4, #4
  401426:	4640      	mov	r0, r8
  401428:	47b0      	blx	r6
  40142a:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  40142c:	682b      	ldr	r3, [r5, #0]
  40142e:	2201      	movs	r2, #1
  401430:	4082      	lsls	r2, r0
  401432:	4313      	orrs	r3, r2
  401434:	602b      	str	r3, [r5, #0]
  401436:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  40143a:	4641      	mov	r1, r8
  40143c:	eb09 0080 	add.w	r0, r9, r0, lsl #2
  401440:	4b21      	ldr	r3, [pc, #132]	; (4014c8 <xTaskResumeAll+0xec>)
  401442:	4798      	blx	r3
  401444:	4b21      	ldr	r3, [pc, #132]	; (4014cc <xTaskResumeAll+0xf0>)
  401446:	681b      	ldr	r3, [r3, #0]
  401448:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
  40144a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  40144c:	429a      	cmp	r2, r3
  40144e:	d308      	bcc.n	401462 <xTaskResumeAll+0x86>
  401450:	2201      	movs	r2, #1
  401452:	4b1f      	ldr	r3, [pc, #124]	; (4014d0 <xTaskResumeAll+0xf4>)
  401454:	601a      	str	r2, [r3, #0]
  401456:	e004      	b.n	401462 <xTaskResumeAll+0x86>
  401458:	4f1e      	ldr	r7, [pc, #120]	; (4014d4 <xTaskResumeAll+0xf8>)
  40145a:	4e1f      	ldr	r6, [pc, #124]	; (4014d8 <xTaskResumeAll+0xfc>)
  40145c:	4d1f      	ldr	r5, [pc, #124]	; (4014dc <xTaskResumeAll+0x100>)
  40145e:	f8df 9090 	ldr.w	r9, [pc, #144]	; 4014f0 <xTaskResumeAll+0x114>
  401462:	683b      	ldr	r3, [r7, #0]
  401464:	2b00      	cmp	r3, #0
  401466:	d1d7      	bne.n	401418 <xTaskResumeAll+0x3c>
  401468:	4b1d      	ldr	r3, [pc, #116]	; (4014e0 <xTaskResumeAll+0x104>)
  40146a:	681b      	ldr	r3, [r3, #0]
  40146c:	b17b      	cbz	r3, 40148e <xTaskResumeAll+0xb2>
  40146e:	4b1c      	ldr	r3, [pc, #112]	; (4014e0 <xTaskResumeAll+0x104>)
  401470:	681b      	ldr	r3, [r3, #0]
  401472:	b163      	cbz	r3, 40148e <xTaskResumeAll+0xb2>
  401474:	4e1b      	ldr	r6, [pc, #108]	; (4014e4 <xTaskResumeAll+0x108>)
  401476:	4d16      	ldr	r5, [pc, #88]	; (4014d0 <xTaskResumeAll+0xf4>)
  401478:	4c19      	ldr	r4, [pc, #100]	; (4014e0 <xTaskResumeAll+0x104>)
  40147a:	47b0      	blx	r6
  40147c:	b108      	cbz	r0, 401482 <xTaskResumeAll+0xa6>
  40147e:	2301      	movs	r3, #1
  401480:	602b      	str	r3, [r5, #0]
  401482:	6823      	ldr	r3, [r4, #0]
  401484:	3b01      	subs	r3, #1
  401486:	6023      	str	r3, [r4, #0]
  401488:	6823      	ldr	r3, [r4, #0]
  40148a:	2b00      	cmp	r3, #0
  40148c:	d1f5      	bne.n	40147a <xTaskResumeAll+0x9e>
  40148e:	4b10      	ldr	r3, [pc, #64]	; (4014d0 <xTaskResumeAll+0xf4>)
  401490:	681b      	ldr	r3, [r3, #0]
  401492:	2b01      	cmp	r3, #1
  401494:	d10b      	bne.n	4014ae <xTaskResumeAll+0xd2>
  401496:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  40149a:	4b13      	ldr	r3, [pc, #76]	; (4014e8 <xTaskResumeAll+0x10c>)
  40149c:	601a      	str	r2, [r3, #0]
  40149e:	f3bf 8f4f 	dsb	sy
  4014a2:	f3bf 8f6f 	isb	sy
  4014a6:	2401      	movs	r4, #1
  4014a8:	e002      	b.n	4014b0 <xTaskResumeAll+0xd4>
  4014aa:	2400      	movs	r4, #0
  4014ac:	e000      	b.n	4014b0 <xTaskResumeAll+0xd4>
  4014ae:	2400      	movs	r4, #0
  4014b0:	4b0e      	ldr	r3, [pc, #56]	; (4014ec <xTaskResumeAll+0x110>)
  4014b2:	4798      	blx	r3
  4014b4:	4620      	mov	r0, r4
  4014b6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4014ba:	bf00      	nop
  4014bc:	2040be74 	.word	0x2040be74
  4014c0:	00400305 	.word	0x00400305
  4014c4:	2040be84 	.word	0x2040be84
  4014c8:	004005fd 	.word	0x004005fd
  4014cc:	2040be5c 	.word	0x2040be5c
  4014d0:	2040beb4 	.word	0x2040beb4
  4014d4:	2040be60 	.word	0x2040be60
  4014d8:	00400649 	.word	0x00400649
  4014dc:	2040beb0 	.word	0x2040beb0
  4014e0:	2040bd7c 	.word	0x2040bd7c
  4014e4:	004012a9 	.word	0x004012a9
  4014e8:	e000ed04 	.word	0xe000ed04
  4014ec:	00400351 	.word	0x00400351
  4014f0:	2040bd80 	.word	0x2040bd80

004014f4 <vTaskDelay>:
  4014f4:	b510      	push	{r4, lr}
  4014f6:	2800      	cmp	r0, #0
  4014f8:	d029      	beq.n	40154e <vTaskDelay+0x5a>
  4014fa:	4604      	mov	r4, r0
  4014fc:	4b18      	ldr	r3, [pc, #96]	; (401560 <vTaskDelay+0x6c>)
  4014fe:	681b      	ldr	r3, [r3, #0]
  401500:	b153      	cbz	r3, 401518 <vTaskDelay+0x24>
  401502:	f04f 0380 	mov.w	r3, #128	; 0x80
  401506:	b672      	cpsid	i
  401508:	f383 8811 	msr	BASEPRI, r3
  40150c:	f3bf 8f6f 	isb	sy
  401510:	f3bf 8f4f 	dsb	sy
  401514:	b662      	cpsie	i
  401516:	e7fe      	b.n	401516 <vTaskDelay+0x22>
  401518:	4b12      	ldr	r3, [pc, #72]	; (401564 <vTaskDelay+0x70>)
  40151a:	4798      	blx	r3
  40151c:	4b12      	ldr	r3, [pc, #72]	; (401568 <vTaskDelay+0x74>)
  40151e:	681b      	ldr	r3, [r3, #0]
  401520:	441c      	add	r4, r3
  401522:	4b12      	ldr	r3, [pc, #72]	; (40156c <vTaskDelay+0x78>)
  401524:	6818      	ldr	r0, [r3, #0]
  401526:	3004      	adds	r0, #4
  401528:	4b11      	ldr	r3, [pc, #68]	; (401570 <vTaskDelay+0x7c>)
  40152a:	4798      	blx	r3
  40152c:	b948      	cbnz	r0, 401542 <vTaskDelay+0x4e>
  40152e:	4b0f      	ldr	r3, [pc, #60]	; (40156c <vTaskDelay+0x78>)
  401530:	681a      	ldr	r2, [r3, #0]
  401532:	4910      	ldr	r1, [pc, #64]	; (401574 <vTaskDelay+0x80>)
  401534:	680b      	ldr	r3, [r1, #0]
  401536:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
  401538:	2201      	movs	r2, #1
  40153a:	4082      	lsls	r2, r0
  40153c:	ea23 0302 	bic.w	r3, r3, r2
  401540:	600b      	str	r3, [r1, #0]
  401542:	4620      	mov	r0, r4
  401544:	4b0c      	ldr	r3, [pc, #48]	; (401578 <vTaskDelay+0x84>)
  401546:	4798      	blx	r3
  401548:	4b0c      	ldr	r3, [pc, #48]	; (40157c <vTaskDelay+0x88>)
  40154a:	4798      	blx	r3
  40154c:	b938      	cbnz	r0, 40155e <vTaskDelay+0x6a>
  40154e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  401552:	4b0b      	ldr	r3, [pc, #44]	; (401580 <vTaskDelay+0x8c>)
  401554:	601a      	str	r2, [r3, #0]
  401556:	f3bf 8f4f 	dsb	sy
  40155a:	f3bf 8f6f 	isb	sy
  40155e:	bd10      	pop	{r4, pc}
  401560:	2040be74 	.word	0x2040be74
  401564:	0040128d 	.word	0x0040128d
  401568:	2040be78 	.word	0x2040be78
  40156c:	2040be5c 	.word	0x2040be5c
  401570:	00400649 	.word	0x00400649
  401574:	2040beb0 	.word	0x2040beb0
  401578:	00400f7d 	.word	0x00400f7d
  40157c:	004013dd 	.word	0x004013dd
  401580:	e000ed04 	.word	0xe000ed04

00401584 <prvIdleTask>:
  401584:	b580      	push	{r7, lr}
  401586:	4d18      	ldr	r5, [pc, #96]	; (4015e8 <prvIdleTask+0x64>)
  401588:	4f18      	ldr	r7, [pc, #96]	; (4015ec <prvIdleTask+0x68>)
  40158a:	f8df 8080 	ldr.w	r8, [pc, #128]	; 40160c <prvIdleTask+0x88>
  40158e:	4e18      	ldr	r6, [pc, #96]	; (4015f0 <prvIdleTask+0x6c>)
  401590:	e019      	b.n	4015c6 <prvIdleTask+0x42>
  401592:	47c0      	blx	r8
  401594:	683c      	ldr	r4, [r7, #0]
  401596:	47b0      	blx	r6
  401598:	b1ac      	cbz	r4, 4015c6 <prvIdleTask+0x42>
  40159a:	4b16      	ldr	r3, [pc, #88]	; (4015f4 <prvIdleTask+0x70>)
  40159c:	4798      	blx	r3
  40159e:	68fb      	ldr	r3, [r7, #12]
  4015a0:	68dc      	ldr	r4, [r3, #12]
  4015a2:	1d20      	adds	r0, r4, #4
  4015a4:	4b14      	ldr	r3, [pc, #80]	; (4015f8 <prvIdleTask+0x74>)
  4015a6:	4798      	blx	r3
  4015a8:	4a14      	ldr	r2, [pc, #80]	; (4015fc <prvIdleTask+0x78>)
  4015aa:	6813      	ldr	r3, [r2, #0]
  4015ac:	3b01      	subs	r3, #1
  4015ae:	6013      	str	r3, [r2, #0]
  4015b0:	682b      	ldr	r3, [r5, #0]
  4015b2:	3b01      	subs	r3, #1
  4015b4:	602b      	str	r3, [r5, #0]
  4015b6:	4b12      	ldr	r3, [pc, #72]	; (401600 <prvIdleTask+0x7c>)
  4015b8:	4798      	blx	r3
  4015ba:	6b20      	ldr	r0, [r4, #48]	; 0x30
  4015bc:	f8df 9050 	ldr.w	r9, [pc, #80]	; 401610 <prvIdleTask+0x8c>
  4015c0:	47c8      	blx	r9
  4015c2:	4620      	mov	r0, r4
  4015c4:	47c8      	blx	r9
  4015c6:	682b      	ldr	r3, [r5, #0]
  4015c8:	2b00      	cmp	r3, #0
  4015ca:	d1e2      	bne.n	401592 <prvIdleTask+0xe>
  4015cc:	4b0d      	ldr	r3, [pc, #52]	; (401604 <prvIdleTask+0x80>)
  4015ce:	681b      	ldr	r3, [r3, #0]
  4015d0:	2b01      	cmp	r3, #1
  4015d2:	d9dc      	bls.n	40158e <prvIdleTask+0xa>
  4015d4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  4015d8:	4b0b      	ldr	r3, [pc, #44]	; (401608 <prvIdleTask+0x84>)
  4015da:	601a      	str	r2, [r3, #0]
  4015dc:	f3bf 8f4f 	dsb	sy
  4015e0:	f3bf 8f6f 	isb	sy
  4015e4:	e7d1      	b.n	40158a <prvIdleTask+0x6>
  4015e6:	bf00      	nop
  4015e8:	2040bd60 	.word	0x2040bd60
  4015ec:	2040be48 	.word	0x2040be48
  4015f0:	004013dd 	.word	0x004013dd
  4015f4:	00400305 	.word	0x00400305
  4015f8:	00400649 	.word	0x00400649
  4015fc:	2040be84 	.word	0x2040be84
  401600:	00400351 	.word	0x00400351
  401604:	2040bd80 	.word	0x2040bd80
  401608:	e000ed04 	.word	0xe000ed04
  40160c:	0040128d 	.word	0x0040128d
  401610:	004005c1 	.word	0x004005c1

00401614 <vTaskSwitchContext>:
  401614:	4b20      	ldr	r3, [pc, #128]	; (401698 <vTaskSwitchContext+0x84>)
  401616:	681b      	ldr	r3, [r3, #0]
  401618:	b11b      	cbz	r3, 401622 <vTaskSwitchContext+0xe>
  40161a:	2201      	movs	r2, #1
  40161c:	4b1f      	ldr	r3, [pc, #124]	; (40169c <vTaskSwitchContext+0x88>)
  40161e:	601a      	str	r2, [r3, #0]
  401620:	4770      	bx	lr
  401622:	2200      	movs	r2, #0
  401624:	4b1d      	ldr	r3, [pc, #116]	; (40169c <vTaskSwitchContext+0x88>)
  401626:	601a      	str	r2, [r3, #0]
  401628:	4b1d      	ldr	r3, [pc, #116]	; (4016a0 <vTaskSwitchContext+0x8c>)
  40162a:	681b      	ldr	r3, [r3, #0]
  40162c:	fab3 f383 	clz	r3, r3
  401630:	b2db      	uxtb	r3, r3
  401632:	f1c3 031f 	rsb	r3, r3, #31
  401636:	eb03 0183 	add.w	r1, r3, r3, lsl #2
  40163a:	4a1a      	ldr	r2, [pc, #104]	; (4016a4 <vTaskSwitchContext+0x90>)
  40163c:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
  401640:	b952      	cbnz	r2, 401658 <vTaskSwitchContext+0x44>
  401642:	f04f 0380 	mov.w	r3, #128	; 0x80
  401646:	b672      	cpsid	i
  401648:	f383 8811 	msr	BASEPRI, r3
  40164c:	f3bf 8f6f 	isb	sy
  401650:	f3bf 8f4f 	dsb	sy
  401654:	b662      	cpsie	i
  401656:	e7fe      	b.n	401656 <vTaskSwitchContext+0x42>
  401658:	b410      	push	{r4}
  40165a:	4a12      	ldr	r2, [pc, #72]	; (4016a4 <vTaskSwitchContext+0x90>)
  40165c:	0099      	lsls	r1, r3, #2
  40165e:	18c8      	adds	r0, r1, r3
  401660:	eb02 0080 	add.w	r0, r2, r0, lsl #2
  401664:	6844      	ldr	r4, [r0, #4]
  401666:	6864      	ldr	r4, [r4, #4]
  401668:	6044      	str	r4, [r0, #4]
  40166a:	4602      	mov	r2, r0
  40166c:	3208      	adds	r2, #8
  40166e:	4294      	cmp	r4, r2
  401670:	d106      	bne.n	401680 <vTaskSwitchContext+0x6c>
  401672:	6860      	ldr	r0, [r4, #4]
  401674:	eb03 0183 	add.w	r1, r3, r3, lsl #2
  401678:	4a0a      	ldr	r2, [pc, #40]	; (4016a4 <vTaskSwitchContext+0x90>)
  40167a:	eb02 0281 	add.w	r2, r2, r1, lsl #2
  40167e:	6050      	str	r0, [r2, #4]
  401680:	eb03 0383 	add.w	r3, r3, r3, lsl #2
  401684:	4a07      	ldr	r2, [pc, #28]	; (4016a4 <vTaskSwitchContext+0x90>)
  401686:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  40168a:	685b      	ldr	r3, [r3, #4]
  40168c:	68da      	ldr	r2, [r3, #12]
  40168e:	4b06      	ldr	r3, [pc, #24]	; (4016a8 <vTaskSwitchContext+0x94>)
  401690:	601a      	str	r2, [r3, #0]
  401692:	f85d 4b04 	ldr.w	r4, [sp], #4
  401696:	4770      	bx	lr
  401698:	2040be74 	.word	0x2040be74
  40169c:	2040beb4 	.word	0x2040beb4
  4016a0:	2040beb0 	.word	0x2040beb0
  4016a4:	2040bd80 	.word	0x2040bd80
  4016a8:	2040be5c 	.word	0x2040be5c

004016ac <vTaskPlaceOnEventList>:
  4016ac:	b538      	push	{r3, r4, r5, lr}
  4016ae:	b950      	cbnz	r0, 4016c6 <vTaskPlaceOnEventList+0x1a>
  4016b0:	f04f 0380 	mov.w	r3, #128	; 0x80
  4016b4:	b672      	cpsid	i
  4016b6:	f383 8811 	msr	BASEPRI, r3
  4016ba:	f3bf 8f6f 	isb	sy
  4016be:	f3bf 8f4f 	dsb	sy
  4016c2:	b662      	cpsie	i
  4016c4:	e7fe      	b.n	4016c4 <vTaskPlaceOnEventList+0x18>
  4016c6:	460c      	mov	r4, r1
  4016c8:	4d11      	ldr	r5, [pc, #68]	; (401710 <vTaskPlaceOnEventList+0x64>)
  4016ca:	6829      	ldr	r1, [r5, #0]
  4016cc:	3118      	adds	r1, #24
  4016ce:	4b11      	ldr	r3, [pc, #68]	; (401714 <vTaskPlaceOnEventList+0x68>)
  4016d0:	4798      	blx	r3
  4016d2:	6828      	ldr	r0, [r5, #0]
  4016d4:	3004      	adds	r0, #4
  4016d6:	4b10      	ldr	r3, [pc, #64]	; (401718 <vTaskPlaceOnEventList+0x6c>)
  4016d8:	4798      	blx	r3
  4016da:	b940      	cbnz	r0, 4016ee <vTaskPlaceOnEventList+0x42>
  4016dc:	682a      	ldr	r2, [r5, #0]
  4016de:	490f      	ldr	r1, [pc, #60]	; (40171c <vTaskPlaceOnEventList+0x70>)
  4016e0:	680b      	ldr	r3, [r1, #0]
  4016e2:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
  4016e4:	2201      	movs	r2, #1
  4016e6:	4082      	lsls	r2, r0
  4016e8:	ea23 0302 	bic.w	r3, r3, r2
  4016ec:	600b      	str	r3, [r1, #0]
  4016ee:	f1b4 3fff 	cmp.w	r4, #4294967295
  4016f2:	d106      	bne.n	401702 <vTaskPlaceOnEventList+0x56>
  4016f4:	4b06      	ldr	r3, [pc, #24]	; (401710 <vTaskPlaceOnEventList+0x64>)
  4016f6:	6819      	ldr	r1, [r3, #0]
  4016f8:	3104      	adds	r1, #4
  4016fa:	4809      	ldr	r0, [pc, #36]	; (401720 <vTaskPlaceOnEventList+0x74>)
  4016fc:	4b09      	ldr	r3, [pc, #36]	; (401724 <vTaskPlaceOnEventList+0x78>)
  4016fe:	4798      	blx	r3
  401700:	bd38      	pop	{r3, r4, r5, pc}
  401702:	4b09      	ldr	r3, [pc, #36]	; (401728 <vTaskPlaceOnEventList+0x7c>)
  401704:	6818      	ldr	r0, [r3, #0]
  401706:	4420      	add	r0, r4
  401708:	4b08      	ldr	r3, [pc, #32]	; (40172c <vTaskPlaceOnEventList+0x80>)
  40170a:	4798      	blx	r3
  40170c:	bd38      	pop	{r3, r4, r5, pc}
  40170e:	bf00      	nop
  401710:	2040be5c 	.word	0x2040be5c
  401714:	00400615 	.word	0x00400615
  401718:	00400649 	.word	0x00400649
  40171c:	2040beb0 	.word	0x2040beb0
  401720:	2040be9c 	.word	0x2040be9c
  401724:	004005fd 	.word	0x004005fd
  401728:	2040be78 	.word	0x2040be78
  40172c:	00400f7d 	.word	0x00400f7d

00401730 <vTaskPlaceOnEventListRestricted>:
  401730:	b950      	cbnz	r0, 401748 <vTaskPlaceOnEventListRestricted+0x18>
  401732:	f04f 0380 	mov.w	r3, #128	; 0x80
  401736:	b672      	cpsid	i
  401738:	f383 8811 	msr	BASEPRI, r3
  40173c:	f3bf 8f6f 	isb	sy
  401740:	f3bf 8f4f 	dsb	sy
  401744:	b662      	cpsie	i
  401746:	e7fe      	b.n	401746 <vTaskPlaceOnEventListRestricted+0x16>
  401748:	b570      	push	{r4, r5, r6, lr}
  40174a:	4615      	mov	r5, r2
  40174c:	460c      	mov	r4, r1
  40174e:	4e11      	ldr	r6, [pc, #68]	; (401794 <vTaskPlaceOnEventListRestricted+0x64>)
  401750:	6831      	ldr	r1, [r6, #0]
  401752:	3118      	adds	r1, #24
  401754:	4b10      	ldr	r3, [pc, #64]	; (401798 <vTaskPlaceOnEventListRestricted+0x68>)
  401756:	4798      	blx	r3
  401758:	6830      	ldr	r0, [r6, #0]
  40175a:	3004      	adds	r0, #4
  40175c:	4b0f      	ldr	r3, [pc, #60]	; (40179c <vTaskPlaceOnEventListRestricted+0x6c>)
  40175e:	4798      	blx	r3
  401760:	b940      	cbnz	r0, 401774 <vTaskPlaceOnEventListRestricted+0x44>
  401762:	6832      	ldr	r2, [r6, #0]
  401764:	490e      	ldr	r1, [pc, #56]	; (4017a0 <vTaskPlaceOnEventListRestricted+0x70>)
  401766:	680b      	ldr	r3, [r1, #0]
  401768:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
  40176a:	2201      	movs	r2, #1
  40176c:	4082      	lsls	r2, r0
  40176e:	ea23 0302 	bic.w	r3, r3, r2
  401772:	600b      	str	r3, [r1, #0]
  401774:	2d01      	cmp	r5, #1
  401776:	d106      	bne.n	401786 <vTaskPlaceOnEventListRestricted+0x56>
  401778:	4b06      	ldr	r3, [pc, #24]	; (401794 <vTaskPlaceOnEventListRestricted+0x64>)
  40177a:	6819      	ldr	r1, [r3, #0]
  40177c:	3104      	adds	r1, #4
  40177e:	4809      	ldr	r0, [pc, #36]	; (4017a4 <vTaskPlaceOnEventListRestricted+0x74>)
  401780:	4b05      	ldr	r3, [pc, #20]	; (401798 <vTaskPlaceOnEventListRestricted+0x68>)
  401782:	4798      	blx	r3
  401784:	bd70      	pop	{r4, r5, r6, pc}
  401786:	4b08      	ldr	r3, [pc, #32]	; (4017a8 <vTaskPlaceOnEventListRestricted+0x78>)
  401788:	6818      	ldr	r0, [r3, #0]
  40178a:	4420      	add	r0, r4
  40178c:	4b07      	ldr	r3, [pc, #28]	; (4017ac <vTaskPlaceOnEventListRestricted+0x7c>)
  40178e:	4798      	blx	r3
  401790:	bd70      	pop	{r4, r5, r6, pc}
  401792:	bf00      	nop
  401794:	2040be5c 	.word	0x2040be5c
  401798:	004005fd 	.word	0x004005fd
  40179c:	00400649 	.word	0x00400649
  4017a0:	2040beb0 	.word	0x2040beb0
  4017a4:	2040be9c 	.word	0x2040be9c
  4017a8:	2040be78 	.word	0x2040be78
  4017ac:	00400f7d 	.word	0x00400f7d

004017b0 <xTaskRemoveFromEventList>:
  4017b0:	b538      	push	{r3, r4, r5, lr}
  4017b2:	68c3      	ldr	r3, [r0, #12]
  4017b4:	68dc      	ldr	r4, [r3, #12]
  4017b6:	b954      	cbnz	r4, 4017ce <xTaskRemoveFromEventList+0x1e>
  4017b8:	f04f 0380 	mov.w	r3, #128	; 0x80
  4017bc:	b672      	cpsid	i
  4017be:	f383 8811 	msr	BASEPRI, r3
  4017c2:	f3bf 8f6f 	isb	sy
  4017c6:	f3bf 8f4f 	dsb	sy
  4017ca:	b662      	cpsie	i
  4017cc:	e7fe      	b.n	4017cc <xTaskRemoveFromEventList+0x1c>
  4017ce:	f104 0518 	add.w	r5, r4, #24
  4017d2:	4628      	mov	r0, r5
  4017d4:	4b14      	ldr	r3, [pc, #80]	; (401828 <xTaskRemoveFromEventList+0x78>)
  4017d6:	4798      	blx	r3
  4017d8:	4b14      	ldr	r3, [pc, #80]	; (40182c <xTaskRemoveFromEventList+0x7c>)
  4017da:	681b      	ldr	r3, [r3, #0]
  4017dc:	b99b      	cbnz	r3, 401806 <xTaskRemoveFromEventList+0x56>
  4017de:	1d25      	adds	r5, r4, #4
  4017e0:	4628      	mov	r0, r5
  4017e2:	4b11      	ldr	r3, [pc, #68]	; (401828 <xTaskRemoveFromEventList+0x78>)
  4017e4:	4798      	blx	r3
  4017e6:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  4017e8:	4911      	ldr	r1, [pc, #68]	; (401830 <xTaskRemoveFromEventList+0x80>)
  4017ea:	680b      	ldr	r3, [r1, #0]
  4017ec:	2201      	movs	r2, #1
  4017ee:	4082      	lsls	r2, r0
  4017f0:	4313      	orrs	r3, r2
  4017f2:	600b      	str	r3, [r1, #0]
  4017f4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  4017f8:	4629      	mov	r1, r5
  4017fa:	4b0e      	ldr	r3, [pc, #56]	; (401834 <xTaskRemoveFromEventList+0x84>)
  4017fc:	eb03 0080 	add.w	r0, r3, r0, lsl #2
  401800:	4b0d      	ldr	r3, [pc, #52]	; (401838 <xTaskRemoveFromEventList+0x88>)
  401802:	4798      	blx	r3
  401804:	e003      	b.n	40180e <xTaskRemoveFromEventList+0x5e>
  401806:	4629      	mov	r1, r5
  401808:	480c      	ldr	r0, [pc, #48]	; (40183c <xTaskRemoveFromEventList+0x8c>)
  40180a:	4b0b      	ldr	r3, [pc, #44]	; (401838 <xTaskRemoveFromEventList+0x88>)
  40180c:	4798      	blx	r3
  40180e:	4b0c      	ldr	r3, [pc, #48]	; (401840 <xTaskRemoveFromEventList+0x90>)
  401810:	681b      	ldr	r3, [r3, #0]
  401812:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
  401814:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  401816:	429a      	cmp	r2, r3
  401818:	d903      	bls.n	401822 <xTaskRemoveFromEventList+0x72>
  40181a:	2001      	movs	r0, #1
  40181c:	4b09      	ldr	r3, [pc, #36]	; (401844 <xTaskRemoveFromEventList+0x94>)
  40181e:	6018      	str	r0, [r3, #0]
  401820:	bd38      	pop	{r3, r4, r5, pc}
  401822:	2000      	movs	r0, #0
  401824:	bd38      	pop	{r3, r4, r5, pc}
  401826:	bf00      	nop
  401828:	00400649 	.word	0x00400649
  40182c:	2040be74 	.word	0x2040be74
  401830:	2040beb0 	.word	0x2040beb0
  401834:	2040bd80 	.word	0x2040bd80
  401838:	004005fd 	.word	0x004005fd
  40183c:	2040be60 	.word	0x2040be60
  401840:	2040be5c 	.word	0x2040be5c
  401844:	2040beb4 	.word	0x2040beb4

00401848 <vTaskSetTimeOutState>:
  401848:	b950      	cbnz	r0, 401860 <vTaskSetTimeOutState+0x18>
  40184a:	f04f 0380 	mov.w	r3, #128	; 0x80
  40184e:	b672      	cpsid	i
  401850:	f383 8811 	msr	BASEPRI, r3
  401854:	f3bf 8f6f 	isb	sy
  401858:	f3bf 8f4f 	dsb	sy
  40185c:	b662      	cpsie	i
  40185e:	e7fe      	b.n	40185e <vTaskSetTimeOutState+0x16>
  401860:	4a03      	ldr	r2, [pc, #12]	; (401870 <vTaskSetTimeOutState+0x28>)
  401862:	6812      	ldr	r2, [r2, #0]
  401864:	6002      	str	r2, [r0, #0]
  401866:	4a03      	ldr	r2, [pc, #12]	; (401874 <vTaskSetTimeOutState+0x2c>)
  401868:	6812      	ldr	r2, [r2, #0]
  40186a:	6042      	str	r2, [r0, #4]
  40186c:	4770      	bx	lr
  40186e:	bf00      	nop
  401870:	2040bd54 	.word	0x2040bd54
  401874:	2040be78 	.word	0x2040be78

00401878 <xTaskCheckForTimeOut>:
  401878:	b538      	push	{r3, r4, r5, lr}
  40187a:	b950      	cbnz	r0, 401892 <xTaskCheckForTimeOut+0x1a>
  40187c:	f04f 0380 	mov.w	r3, #128	; 0x80
  401880:	b672      	cpsid	i
  401882:	f383 8811 	msr	BASEPRI, r3
  401886:	f3bf 8f6f 	isb	sy
  40188a:	f3bf 8f4f 	dsb	sy
  40188e:	b662      	cpsie	i
  401890:	e7fe      	b.n	401890 <xTaskCheckForTimeOut+0x18>
  401892:	4604      	mov	r4, r0
  401894:	b951      	cbnz	r1, 4018ac <xTaskCheckForTimeOut+0x34>
  401896:	f04f 0380 	mov.w	r3, #128	; 0x80
  40189a:	b672      	cpsid	i
  40189c:	f383 8811 	msr	BASEPRI, r3
  4018a0:	f3bf 8f6f 	isb	sy
  4018a4:	f3bf 8f4f 	dsb	sy
  4018a8:	b662      	cpsie	i
  4018aa:	e7fe      	b.n	4018aa <xTaskCheckForTimeOut+0x32>
  4018ac:	460d      	mov	r5, r1
  4018ae:	4b12      	ldr	r3, [pc, #72]	; (4018f8 <xTaskCheckForTimeOut+0x80>)
  4018b0:	4798      	blx	r3
  4018b2:	4b12      	ldr	r3, [pc, #72]	; (4018fc <xTaskCheckForTimeOut+0x84>)
  4018b4:	6819      	ldr	r1, [r3, #0]
  4018b6:	682b      	ldr	r3, [r5, #0]
  4018b8:	f1b3 3fff 	cmp.w	r3, #4294967295
  4018bc:	d013      	beq.n	4018e6 <xTaskCheckForTimeOut+0x6e>
  4018be:	4a10      	ldr	r2, [pc, #64]	; (401900 <xTaskCheckForTimeOut+0x88>)
  4018c0:	6812      	ldr	r2, [r2, #0]
  4018c2:	6820      	ldr	r0, [r4, #0]
  4018c4:	4290      	cmp	r0, r2
  4018c6:	d002      	beq.n	4018ce <xTaskCheckForTimeOut+0x56>
  4018c8:	6862      	ldr	r2, [r4, #4]
  4018ca:	4291      	cmp	r1, r2
  4018cc:	d20d      	bcs.n	4018ea <xTaskCheckForTimeOut+0x72>
  4018ce:	6862      	ldr	r2, [r4, #4]
  4018d0:	1a88      	subs	r0, r1, r2
  4018d2:	4283      	cmp	r3, r0
  4018d4:	d90b      	bls.n	4018ee <xTaskCheckForTimeOut+0x76>
  4018d6:	1a52      	subs	r2, r2, r1
  4018d8:	4413      	add	r3, r2
  4018da:	602b      	str	r3, [r5, #0]
  4018dc:	4620      	mov	r0, r4
  4018de:	4b09      	ldr	r3, [pc, #36]	; (401904 <xTaskCheckForTimeOut+0x8c>)
  4018e0:	4798      	blx	r3
  4018e2:	2400      	movs	r4, #0
  4018e4:	e004      	b.n	4018f0 <xTaskCheckForTimeOut+0x78>
  4018e6:	2400      	movs	r4, #0
  4018e8:	e002      	b.n	4018f0 <xTaskCheckForTimeOut+0x78>
  4018ea:	2401      	movs	r4, #1
  4018ec:	e000      	b.n	4018f0 <xTaskCheckForTimeOut+0x78>
  4018ee:	2401      	movs	r4, #1
  4018f0:	4b05      	ldr	r3, [pc, #20]	; (401908 <xTaskCheckForTimeOut+0x90>)
  4018f2:	4798      	blx	r3
  4018f4:	4620      	mov	r0, r4
  4018f6:	bd38      	pop	{r3, r4, r5, pc}
  4018f8:	00400305 	.word	0x00400305
  4018fc:	2040be78 	.word	0x2040be78
  401900:	2040bd54 	.word	0x2040bd54
  401904:	00401849 	.word	0x00401849
  401908:	00400351 	.word	0x00400351

0040190c <vTaskMissedYield>:
  40190c:	2201      	movs	r2, #1
  40190e:	4b01      	ldr	r3, [pc, #4]	; (401914 <vTaskMissedYield+0x8>)
  401910:	601a      	str	r2, [r3, #0]
  401912:	4770      	bx	lr
  401914:	2040beb4 	.word	0x2040beb4

00401918 <xTaskGetSchedulerState>:
  401918:	4b05      	ldr	r3, [pc, #20]	; (401930 <xTaskGetSchedulerState+0x18>)
  40191a:	681b      	ldr	r3, [r3, #0]
  40191c:	b133      	cbz	r3, 40192c <xTaskGetSchedulerState+0x14>
  40191e:	4b05      	ldr	r3, [pc, #20]	; (401934 <xTaskGetSchedulerState+0x1c>)
  401920:	681b      	ldr	r3, [r3, #0]
  401922:	2b00      	cmp	r3, #0
  401924:	bf0c      	ite	eq
  401926:	2002      	moveq	r0, #2
  401928:	2000      	movne	r0, #0
  40192a:	4770      	bx	lr
  40192c:	2001      	movs	r0, #1
  40192e:	4770      	bx	lr
  401930:	2040bd5c 	.word	0x2040bd5c
  401934:	2040be74 	.word	0x2040be74

00401938 <vTaskPriorityInherit>:
  401938:	2800      	cmp	r0, #0
  40193a:	d045      	beq.n	4019c8 <vTaskPriorityInherit+0x90>
  40193c:	b538      	push	{r3, r4, r5, lr}
  40193e:	4603      	mov	r3, r0
  401940:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
  401942:	4922      	ldr	r1, [pc, #136]	; (4019cc <vTaskPriorityInherit+0x94>)
  401944:	6809      	ldr	r1, [r1, #0]
  401946:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  401948:	428a      	cmp	r2, r1
  40194a:	d23c      	bcs.n	4019c6 <vTaskPriorityInherit+0x8e>
  40194c:	6981      	ldr	r1, [r0, #24]
  40194e:	2900      	cmp	r1, #0
  401950:	db05      	blt.n	40195e <vTaskPriorityInherit+0x26>
  401952:	491e      	ldr	r1, [pc, #120]	; (4019cc <vTaskPriorityInherit+0x94>)
  401954:	6809      	ldr	r1, [r1, #0]
  401956:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  401958:	f1c1 010a 	rsb	r1, r1, #10
  40195c:	6181      	str	r1, [r0, #24]
  40195e:	eb02 0282 	add.w	r2, r2, r2, lsl #2
  401962:	491b      	ldr	r1, [pc, #108]	; (4019d0 <vTaskPriorityInherit+0x98>)
  401964:	eb01 0282 	add.w	r2, r1, r2, lsl #2
  401968:	6959      	ldr	r1, [r3, #20]
  40196a:	4291      	cmp	r1, r2
  40196c:	d127      	bne.n	4019be <vTaskPriorityInherit+0x86>
  40196e:	461c      	mov	r4, r3
  401970:	1d1d      	adds	r5, r3, #4
  401972:	4628      	mov	r0, r5
  401974:	4b17      	ldr	r3, [pc, #92]	; (4019d4 <vTaskPriorityInherit+0x9c>)
  401976:	4798      	blx	r3
  401978:	b970      	cbnz	r0, 401998 <vTaskPriorityInherit+0x60>
  40197a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  40197c:	eb03 0183 	add.w	r1, r3, r3, lsl #2
  401980:	4a13      	ldr	r2, [pc, #76]	; (4019d0 <vTaskPriorityInherit+0x98>)
  401982:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
  401986:	b93a      	cbnz	r2, 401998 <vTaskPriorityInherit+0x60>
  401988:	4813      	ldr	r0, [pc, #76]	; (4019d8 <vTaskPriorityInherit+0xa0>)
  40198a:	6802      	ldr	r2, [r0, #0]
  40198c:	2101      	movs	r1, #1
  40198e:	fa01 f303 	lsl.w	r3, r1, r3
  401992:	ea22 0303 	bic.w	r3, r2, r3
  401996:	6003      	str	r3, [r0, #0]
  401998:	4b0c      	ldr	r3, [pc, #48]	; (4019cc <vTaskPriorityInherit+0x94>)
  40199a:	681b      	ldr	r3, [r3, #0]
  40199c:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
  40199e:	62e0      	str	r0, [r4, #44]	; 0x2c
  4019a0:	490d      	ldr	r1, [pc, #52]	; (4019d8 <vTaskPriorityInherit+0xa0>)
  4019a2:	680a      	ldr	r2, [r1, #0]
  4019a4:	2301      	movs	r3, #1
  4019a6:	4083      	lsls	r3, r0
  4019a8:	4313      	orrs	r3, r2
  4019aa:	600b      	str	r3, [r1, #0]
  4019ac:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  4019b0:	4629      	mov	r1, r5
  4019b2:	4b07      	ldr	r3, [pc, #28]	; (4019d0 <vTaskPriorityInherit+0x98>)
  4019b4:	eb03 0080 	add.w	r0, r3, r0, lsl #2
  4019b8:	4b08      	ldr	r3, [pc, #32]	; (4019dc <vTaskPriorityInherit+0xa4>)
  4019ba:	4798      	blx	r3
  4019bc:	bd38      	pop	{r3, r4, r5, pc}
  4019be:	4a03      	ldr	r2, [pc, #12]	; (4019cc <vTaskPriorityInherit+0x94>)
  4019c0:	6812      	ldr	r2, [r2, #0]
  4019c2:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
  4019c4:	62da      	str	r2, [r3, #44]	; 0x2c
  4019c6:	bd38      	pop	{r3, r4, r5, pc}
  4019c8:	4770      	bx	lr
  4019ca:	bf00      	nop
  4019cc:	2040be5c 	.word	0x2040be5c
  4019d0:	2040bd80 	.word	0x2040bd80
  4019d4:	00400649 	.word	0x00400649
  4019d8:	2040beb0 	.word	0x2040beb0
  4019dc:	004005fd 	.word	0x004005fd

004019e0 <xTaskPriorityDisinherit>:
  4019e0:	2800      	cmp	r0, #0
  4019e2:	d04e      	beq.n	401a82 <xTaskPriorityDisinherit+0xa2>
  4019e4:	b538      	push	{r3, r4, r5, lr}
  4019e6:	4603      	mov	r3, r0
  4019e8:	4a28      	ldr	r2, [pc, #160]	; (401a8c <xTaskPriorityDisinherit+0xac>)
  4019ea:	6812      	ldr	r2, [r2, #0]
  4019ec:	4290      	cmp	r0, r2
  4019ee:	d00a      	beq.n	401a06 <xTaskPriorityDisinherit+0x26>
  4019f0:	f04f 0380 	mov.w	r3, #128	; 0x80
  4019f4:	b672      	cpsid	i
  4019f6:	f383 8811 	msr	BASEPRI, r3
  4019fa:	f3bf 8f6f 	isb	sy
  4019fe:	f3bf 8f4f 	dsb	sy
  401a02:	b662      	cpsie	i
  401a04:	e7fe      	b.n	401a04 <xTaskPriorityDisinherit+0x24>
  401a06:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
  401a08:	b952      	cbnz	r2, 401a20 <xTaskPriorityDisinherit+0x40>
  401a0a:	f04f 0380 	mov.w	r3, #128	; 0x80
  401a0e:	b672      	cpsid	i
  401a10:	f383 8811 	msr	BASEPRI, r3
  401a14:	f3bf 8f6f 	isb	sy
  401a18:	f3bf 8f4f 	dsb	sy
  401a1c:	b662      	cpsie	i
  401a1e:	e7fe      	b.n	401a1e <xTaskPriorityDisinherit+0x3e>
  401a20:	3a01      	subs	r2, #1
  401a22:	64c2      	str	r2, [r0, #76]	; 0x4c
  401a24:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
  401a26:	6c99      	ldr	r1, [r3, #72]	; 0x48
  401a28:	4288      	cmp	r0, r1
  401a2a:	d02c      	beq.n	401a86 <xTaskPriorityDisinherit+0xa6>
  401a2c:	bb5a      	cbnz	r2, 401a86 <xTaskPriorityDisinherit+0xa6>
  401a2e:	461c      	mov	r4, r3
  401a30:	1d1d      	adds	r5, r3, #4
  401a32:	4628      	mov	r0, r5
  401a34:	4b16      	ldr	r3, [pc, #88]	; (401a90 <xTaskPriorityDisinherit+0xb0>)
  401a36:	4798      	blx	r3
  401a38:	b968      	cbnz	r0, 401a56 <xTaskPriorityDisinherit+0x76>
  401a3a:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  401a3c:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  401a40:	4b14      	ldr	r3, [pc, #80]	; (401a94 <xTaskPriorityDisinherit+0xb4>)
  401a42:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
  401a46:	b933      	cbnz	r3, 401a56 <xTaskPriorityDisinherit+0x76>
  401a48:	4813      	ldr	r0, [pc, #76]	; (401a98 <xTaskPriorityDisinherit+0xb8>)
  401a4a:	6803      	ldr	r3, [r0, #0]
  401a4c:	2201      	movs	r2, #1
  401a4e:	408a      	lsls	r2, r1
  401a50:	ea23 0302 	bic.w	r3, r3, r2
  401a54:	6003      	str	r3, [r0, #0]
  401a56:	6ca0      	ldr	r0, [r4, #72]	; 0x48
  401a58:	62e0      	str	r0, [r4, #44]	; 0x2c
  401a5a:	f1c0 030a 	rsb	r3, r0, #10
  401a5e:	61a3      	str	r3, [r4, #24]
  401a60:	4a0d      	ldr	r2, [pc, #52]	; (401a98 <xTaskPriorityDisinherit+0xb8>)
  401a62:	6813      	ldr	r3, [r2, #0]
  401a64:	2401      	movs	r4, #1
  401a66:	fa04 f100 	lsl.w	r1, r4, r0
  401a6a:	430b      	orrs	r3, r1
  401a6c:	6013      	str	r3, [r2, #0]
  401a6e:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  401a72:	4629      	mov	r1, r5
  401a74:	4b07      	ldr	r3, [pc, #28]	; (401a94 <xTaskPriorityDisinherit+0xb4>)
  401a76:	eb03 0080 	add.w	r0, r3, r0, lsl #2
  401a7a:	4b08      	ldr	r3, [pc, #32]	; (401a9c <xTaskPriorityDisinherit+0xbc>)
  401a7c:	4798      	blx	r3
  401a7e:	4620      	mov	r0, r4
  401a80:	bd38      	pop	{r3, r4, r5, pc}
  401a82:	2000      	movs	r0, #0
  401a84:	4770      	bx	lr
  401a86:	2000      	movs	r0, #0
  401a88:	bd38      	pop	{r3, r4, r5, pc}
  401a8a:	bf00      	nop
  401a8c:	2040be5c 	.word	0x2040be5c
  401a90:	00400649 	.word	0x00400649
  401a94:	2040bd80 	.word	0x2040bd80
  401a98:	2040beb0 	.word	0x2040beb0
  401a9c:	004005fd 	.word	0x004005fd

00401aa0 <pvTaskIncrementMutexHeldCount>:
  401aa0:	4b05      	ldr	r3, [pc, #20]	; (401ab8 <pvTaskIncrementMutexHeldCount+0x18>)
  401aa2:	681b      	ldr	r3, [r3, #0]
  401aa4:	b123      	cbz	r3, 401ab0 <pvTaskIncrementMutexHeldCount+0x10>
  401aa6:	4b04      	ldr	r3, [pc, #16]	; (401ab8 <pvTaskIncrementMutexHeldCount+0x18>)
  401aa8:	681a      	ldr	r2, [r3, #0]
  401aaa:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
  401aac:	3301      	adds	r3, #1
  401aae:	64d3      	str	r3, [r2, #76]	; 0x4c
  401ab0:	4b01      	ldr	r3, [pc, #4]	; (401ab8 <pvTaskIncrementMutexHeldCount+0x18>)
  401ab2:	6818      	ldr	r0, [r3, #0]
  401ab4:	4770      	bx	lr
  401ab6:	bf00      	nop
  401ab8:	2040be5c 	.word	0x2040be5c

00401abc <prvInsertTimerInActiveList>:
  401abc:	b508      	push	{r3, lr}
  401abe:	6041      	str	r1, [r0, #4]
  401ac0:	6100      	str	r0, [r0, #16]
  401ac2:	4291      	cmp	r1, r2
  401ac4:	d80a      	bhi.n	401adc <prvInsertTimerInActiveList+0x20>
  401ac6:	1ad2      	subs	r2, r2, r3
  401ac8:	6983      	ldr	r3, [r0, #24]
  401aca:	429a      	cmp	r2, r3
  401acc:	d211      	bcs.n	401af2 <prvInsertTimerInActiveList+0x36>
  401ace:	1d01      	adds	r1, r0, #4
  401ad0:	4b0a      	ldr	r3, [pc, #40]	; (401afc <prvInsertTimerInActiveList+0x40>)
  401ad2:	6818      	ldr	r0, [r3, #0]
  401ad4:	4b0a      	ldr	r3, [pc, #40]	; (401b00 <prvInsertTimerInActiveList+0x44>)
  401ad6:	4798      	blx	r3
  401ad8:	2000      	movs	r0, #0
  401ada:	bd08      	pop	{r3, pc}
  401adc:	429a      	cmp	r2, r3
  401ade:	d201      	bcs.n	401ae4 <prvInsertTimerInActiveList+0x28>
  401ae0:	4299      	cmp	r1, r3
  401ae2:	d208      	bcs.n	401af6 <prvInsertTimerInActiveList+0x3a>
  401ae4:	1d01      	adds	r1, r0, #4
  401ae6:	4b07      	ldr	r3, [pc, #28]	; (401b04 <prvInsertTimerInActiveList+0x48>)
  401ae8:	6818      	ldr	r0, [r3, #0]
  401aea:	4b05      	ldr	r3, [pc, #20]	; (401b00 <prvInsertTimerInActiveList+0x44>)
  401aec:	4798      	blx	r3
  401aee:	2000      	movs	r0, #0
  401af0:	bd08      	pop	{r3, pc}
  401af2:	2001      	movs	r0, #1
  401af4:	bd08      	pop	{r3, pc}
  401af6:	2001      	movs	r0, #1
  401af8:	bd08      	pop	{r3, pc}
  401afa:	bf00      	nop
  401afc:	2040beec 	.word	0x2040beec
  401b00:	00400615 	.word	0x00400615
  401b04:	2040beb8 	.word	0x2040beb8

00401b08 <prvCheckForValidListAndQueue>:
  401b08:	b570      	push	{r4, r5, r6, lr}
  401b0a:	4b14      	ldr	r3, [pc, #80]	; (401b5c <prvCheckForValidListAndQueue+0x54>)
  401b0c:	4798      	blx	r3
  401b0e:	4b14      	ldr	r3, [pc, #80]	; (401b60 <prvCheckForValidListAndQueue+0x58>)
  401b10:	681b      	ldr	r3, [r3, #0]
  401b12:	bb03      	cbnz	r3, 401b56 <prvCheckForValidListAndQueue+0x4e>
  401b14:	4d13      	ldr	r5, [pc, #76]	; (401b64 <prvCheckForValidListAndQueue+0x5c>)
  401b16:	4628      	mov	r0, r5
  401b18:	4e13      	ldr	r6, [pc, #76]	; (401b68 <prvCheckForValidListAndQueue+0x60>)
  401b1a:	47b0      	blx	r6
  401b1c:	4c13      	ldr	r4, [pc, #76]	; (401b6c <prvCheckForValidListAndQueue+0x64>)
  401b1e:	4620      	mov	r0, r4
  401b20:	47b0      	blx	r6
  401b22:	4b13      	ldr	r3, [pc, #76]	; (401b70 <prvCheckForValidListAndQueue+0x68>)
  401b24:	601d      	str	r5, [r3, #0]
  401b26:	4b13      	ldr	r3, [pc, #76]	; (401b74 <prvCheckForValidListAndQueue+0x6c>)
  401b28:	601c      	str	r4, [r3, #0]
  401b2a:	2200      	movs	r2, #0
  401b2c:	2110      	movs	r1, #16
  401b2e:	2005      	movs	r0, #5
  401b30:	4b11      	ldr	r3, [pc, #68]	; (401b78 <prvCheckForValidListAndQueue+0x70>)
  401b32:	4798      	blx	r3
  401b34:	4b0a      	ldr	r3, [pc, #40]	; (401b60 <prvCheckForValidListAndQueue+0x58>)
  401b36:	6018      	str	r0, [r3, #0]
  401b38:	b950      	cbnz	r0, 401b50 <prvCheckForValidListAndQueue+0x48>
  401b3a:	f04f 0380 	mov.w	r3, #128	; 0x80
  401b3e:	b672      	cpsid	i
  401b40:	f383 8811 	msr	BASEPRI, r3
  401b44:	f3bf 8f6f 	isb	sy
  401b48:	f3bf 8f4f 	dsb	sy
  401b4c:	b662      	cpsie	i
  401b4e:	e7fe      	b.n	401b4e <prvCheckForValidListAndQueue+0x46>
  401b50:	490a      	ldr	r1, [pc, #40]	; (401b7c <prvCheckForValidListAndQueue+0x74>)
  401b52:	4b0b      	ldr	r3, [pc, #44]	; (401b80 <prvCheckForValidListAndQueue+0x78>)
  401b54:	4798      	blx	r3
  401b56:	4b0b      	ldr	r3, [pc, #44]	; (401b84 <prvCheckForValidListAndQueue+0x7c>)
  401b58:	4798      	blx	r3
  401b5a:	bd70      	pop	{r4, r5, r6, pc}
  401b5c:	00400305 	.word	0x00400305
  401b60:	2040bee8 	.word	0x2040bee8
  401b64:	2040bebc 	.word	0x2040bebc
  401b68:	004005dd 	.word	0x004005dd
  401b6c:	2040bed0 	.word	0x2040bed0
  401b70:	2040beb8 	.word	0x2040beb8
  401b74:	2040beec 	.word	0x2040beec
  401b78:	004008d1 	.word	0x004008d1
  401b7c:	00402f60 	.word	0x00402f60
  401b80:	00400ecd 	.word	0x00400ecd
  401b84:	00400351 	.word	0x00400351

00401b88 <xTimerCreateTimerTask>:
  401b88:	b510      	push	{r4, lr}
  401b8a:	b084      	sub	sp, #16
  401b8c:	4b0f      	ldr	r3, [pc, #60]	; (401bcc <xTimerCreateTimerTask+0x44>)
  401b8e:	4798      	blx	r3
  401b90:	4b0f      	ldr	r3, [pc, #60]	; (401bd0 <xTimerCreateTimerTask+0x48>)
  401b92:	681b      	ldr	r3, [r3, #0]
  401b94:	b163      	cbz	r3, 401bb0 <xTimerCreateTimerTask+0x28>
  401b96:	2300      	movs	r3, #0
  401b98:	9303      	str	r3, [sp, #12]
  401b9a:	9302      	str	r3, [sp, #8]
  401b9c:	9301      	str	r3, [sp, #4]
  401b9e:	2209      	movs	r2, #9
  401ba0:	9200      	str	r2, [sp, #0]
  401ba2:	f44f 7282 	mov.w	r2, #260	; 0x104
  401ba6:	490b      	ldr	r1, [pc, #44]	; (401bd4 <xTimerCreateTimerTask+0x4c>)
  401ba8:	480b      	ldr	r0, [pc, #44]	; (401bd8 <xTimerCreateTimerTask+0x50>)
  401baa:	4c0c      	ldr	r4, [pc, #48]	; (401bdc <xTimerCreateTimerTask+0x54>)
  401bac:	47a0      	blx	r4
  401bae:	b950      	cbnz	r0, 401bc6 <xTimerCreateTimerTask+0x3e>
  401bb0:	f04f 0380 	mov.w	r3, #128	; 0x80
  401bb4:	b672      	cpsid	i
  401bb6:	f383 8811 	msr	BASEPRI, r3
  401bba:	f3bf 8f6f 	isb	sy
  401bbe:	f3bf 8f4f 	dsb	sy
  401bc2:	b662      	cpsie	i
  401bc4:	e7fe      	b.n	401bc4 <xTimerCreateTimerTask+0x3c>
  401bc6:	b004      	add	sp, #16
  401bc8:	bd10      	pop	{r4, pc}
  401bca:	bf00      	nop
  401bcc:	00401b09 	.word	0x00401b09
  401bd0:	2040bee8 	.word	0x2040bee8
  401bd4:	00402f68 	.word	0x00402f68
  401bd8:	00401d0d 	.word	0x00401d0d
  401bdc:	00400fd5 	.word	0x00400fd5

00401be0 <xTimerGenericCommand>:
  401be0:	b950      	cbnz	r0, 401bf8 <xTimerGenericCommand+0x18>
  401be2:	f04f 0380 	mov.w	r3, #128	; 0x80
  401be6:	b672      	cpsid	i
  401be8:	f383 8811 	msr	BASEPRI, r3
  401bec:	f3bf 8f6f 	isb	sy
  401bf0:	f3bf 8f4f 	dsb	sy
  401bf4:	b662      	cpsie	i
  401bf6:	e7fe      	b.n	401bf6 <xTimerGenericCommand+0x16>
  401bf8:	b530      	push	{r4, r5, lr}
  401bfa:	b085      	sub	sp, #20
  401bfc:	4615      	mov	r5, r2
  401bfe:	4604      	mov	r4, r0
  401c00:	4a0f      	ldr	r2, [pc, #60]	; (401c40 <xTimerGenericCommand+0x60>)
  401c02:	6810      	ldr	r0, [r2, #0]
  401c04:	b1c0      	cbz	r0, 401c38 <xTimerGenericCommand+0x58>
  401c06:	461a      	mov	r2, r3
  401c08:	9100      	str	r1, [sp, #0]
  401c0a:	9501      	str	r5, [sp, #4]
  401c0c:	9402      	str	r4, [sp, #8]
  401c0e:	2905      	cmp	r1, #5
  401c10:	dc0d      	bgt.n	401c2e <xTimerGenericCommand+0x4e>
  401c12:	4b0c      	ldr	r3, [pc, #48]	; (401c44 <xTimerGenericCommand+0x64>)
  401c14:	4798      	blx	r3
  401c16:	2802      	cmp	r0, #2
  401c18:	f04f 0300 	mov.w	r3, #0
  401c1c:	bf0c      	ite	eq
  401c1e:	9a08      	ldreq	r2, [sp, #32]
  401c20:	461a      	movne	r2, r3
  401c22:	4669      	mov	r1, sp
  401c24:	4806      	ldr	r0, [pc, #24]	; (401c40 <xTimerGenericCommand+0x60>)
  401c26:	6800      	ldr	r0, [r0, #0]
  401c28:	4c07      	ldr	r4, [pc, #28]	; (401c48 <xTimerGenericCommand+0x68>)
  401c2a:	47a0      	blx	r4
  401c2c:	e005      	b.n	401c3a <xTimerGenericCommand+0x5a>
  401c2e:	2300      	movs	r3, #0
  401c30:	4669      	mov	r1, sp
  401c32:	4c06      	ldr	r4, [pc, #24]	; (401c4c <xTimerGenericCommand+0x6c>)
  401c34:	47a0      	blx	r4
  401c36:	e000      	b.n	401c3a <xTimerGenericCommand+0x5a>
  401c38:	2000      	movs	r0, #0
  401c3a:	b005      	add	sp, #20
  401c3c:	bd30      	pop	{r4, r5, pc}
  401c3e:	bf00      	nop
  401c40:	2040bee8 	.word	0x2040bee8
  401c44:	00401919 	.word	0x00401919
  401c48:	00400955 	.word	0x00400955
  401c4c:	00400b31 	.word	0x00400b31

00401c50 <prvSampleTimeNow>:
  401c50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  401c54:	b082      	sub	sp, #8
  401c56:	4680      	mov	r8, r0
  401c58:	4b25      	ldr	r3, [pc, #148]	; (401cf0 <prvSampleTimeNow+0xa0>)
  401c5a:	4798      	blx	r3
  401c5c:	4607      	mov	r7, r0
  401c5e:	4b25      	ldr	r3, [pc, #148]	; (401cf4 <prvSampleTimeNow+0xa4>)
  401c60:	681b      	ldr	r3, [r3, #0]
  401c62:	4298      	cmp	r0, r3
  401c64:	d23b      	bcs.n	401cde <prvSampleTimeNow+0x8e>
  401c66:	e02b      	b.n	401cc0 <prvSampleTimeNow+0x70>
  401c68:	68db      	ldr	r3, [r3, #12]
  401c6a:	f8d3 a000 	ldr.w	sl, [r3]
  401c6e:	68dc      	ldr	r4, [r3, #12]
  401c70:	f104 0904 	add.w	r9, r4, #4
  401c74:	4648      	mov	r0, r9
  401c76:	47b0      	blx	r6
  401c78:	6a63      	ldr	r3, [r4, #36]	; 0x24
  401c7a:	4620      	mov	r0, r4
  401c7c:	4798      	blx	r3
  401c7e:	69e3      	ldr	r3, [r4, #28]
  401c80:	2b01      	cmp	r3, #1
  401c82:	d11f      	bne.n	401cc4 <prvSampleTimeNow+0x74>
  401c84:	69a3      	ldr	r3, [r4, #24]
  401c86:	4453      	add	r3, sl
  401c88:	459a      	cmp	sl, r3
  401c8a:	d206      	bcs.n	401c9a <prvSampleTimeNow+0x4a>
  401c8c:	6063      	str	r3, [r4, #4]
  401c8e:	6124      	str	r4, [r4, #16]
  401c90:	4649      	mov	r1, r9
  401c92:	6828      	ldr	r0, [r5, #0]
  401c94:	4b18      	ldr	r3, [pc, #96]	; (401cf8 <prvSampleTimeNow+0xa8>)
  401c96:	4798      	blx	r3
  401c98:	e014      	b.n	401cc4 <prvSampleTimeNow+0x74>
  401c9a:	2100      	movs	r1, #0
  401c9c:	9100      	str	r1, [sp, #0]
  401c9e:	460b      	mov	r3, r1
  401ca0:	4652      	mov	r2, sl
  401ca2:	4620      	mov	r0, r4
  401ca4:	4c15      	ldr	r4, [pc, #84]	; (401cfc <prvSampleTimeNow+0xac>)
  401ca6:	47a0      	blx	r4
  401ca8:	b960      	cbnz	r0, 401cc4 <prvSampleTimeNow+0x74>
  401caa:	f04f 0380 	mov.w	r3, #128	; 0x80
  401cae:	b672      	cpsid	i
  401cb0:	f383 8811 	msr	BASEPRI, r3
  401cb4:	f3bf 8f6f 	isb	sy
  401cb8:	f3bf 8f4f 	dsb	sy
  401cbc:	b662      	cpsie	i
  401cbe:	e7fe      	b.n	401cbe <prvSampleTimeNow+0x6e>
  401cc0:	4d0f      	ldr	r5, [pc, #60]	; (401d00 <prvSampleTimeNow+0xb0>)
  401cc2:	4e10      	ldr	r6, [pc, #64]	; (401d04 <prvSampleTimeNow+0xb4>)
  401cc4:	682b      	ldr	r3, [r5, #0]
  401cc6:	681a      	ldr	r2, [r3, #0]
  401cc8:	2a00      	cmp	r2, #0
  401cca:	d1cd      	bne.n	401c68 <prvSampleTimeNow+0x18>
  401ccc:	4a0e      	ldr	r2, [pc, #56]	; (401d08 <prvSampleTimeNow+0xb8>)
  401cce:	6810      	ldr	r0, [r2, #0]
  401cd0:	490b      	ldr	r1, [pc, #44]	; (401d00 <prvSampleTimeNow+0xb0>)
  401cd2:	6008      	str	r0, [r1, #0]
  401cd4:	6013      	str	r3, [r2, #0]
  401cd6:	2301      	movs	r3, #1
  401cd8:	f8c8 3000 	str.w	r3, [r8]
  401cdc:	e002      	b.n	401ce4 <prvSampleTimeNow+0x94>
  401cde:	2300      	movs	r3, #0
  401ce0:	f8c8 3000 	str.w	r3, [r8]
  401ce4:	4b03      	ldr	r3, [pc, #12]	; (401cf4 <prvSampleTimeNow+0xa4>)
  401ce6:	601f      	str	r7, [r3, #0]
  401ce8:	4638      	mov	r0, r7
  401cea:	b002      	add	sp, #8
  401cec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  401cf0:	0040129d 	.word	0x0040129d
  401cf4:	2040bee4 	.word	0x2040bee4
  401cf8:	00400615 	.word	0x00400615
  401cfc:	00401be1 	.word	0x00401be1
  401d00:	2040beb8 	.word	0x2040beb8
  401d04:	00400649 	.word	0x00400649
  401d08:	2040beec 	.word	0x2040beec

00401d0c <prvTimerTask>:
  401d0c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  401d10:	b089      	sub	sp, #36	; 0x24
  401d12:	4c68      	ldr	r4, [pc, #416]	; (401eb4 <prvTimerTask+0x1a8>)
  401d14:	f8df 81cc 	ldr.w	r8, [pc, #460]	; 401ee4 <prvTimerTask+0x1d8>
  401d18:	4d67      	ldr	r5, [pc, #412]	; (401eb8 <prvTimerTask+0x1ac>)
  401d1a:	4b68      	ldr	r3, [pc, #416]	; (401ebc <prvTimerTask+0x1b0>)
  401d1c:	681b      	ldr	r3, [r3, #0]
  401d1e:	681a      	ldr	r2, [r3, #0]
  401d20:	2a00      	cmp	r2, #0
  401d22:	f000 80b5 	beq.w	401e90 <prvTimerTask+0x184>
  401d26:	68db      	ldr	r3, [r3, #12]
  401d28:	681e      	ldr	r6, [r3, #0]
  401d2a:	4b65      	ldr	r3, [pc, #404]	; (401ec0 <prvTimerTask+0x1b4>)
  401d2c:	4798      	blx	r3
  401d2e:	a804      	add	r0, sp, #16
  401d30:	4b64      	ldr	r3, [pc, #400]	; (401ec4 <prvTimerTask+0x1b8>)
  401d32:	4798      	blx	r3
  401d34:	4607      	mov	r7, r0
  401d36:	9b04      	ldr	r3, [sp, #16]
  401d38:	2b00      	cmp	r3, #0
  401d3a:	d144      	bne.n	401dc6 <prvTimerTask+0xba>
  401d3c:	42b0      	cmp	r0, r6
  401d3e:	d330      	bcc.n	401da2 <prvTimerTask+0x96>
  401d40:	4b61      	ldr	r3, [pc, #388]	; (401ec8 <prvTimerTask+0x1bc>)
  401d42:	4798      	blx	r3
  401d44:	4b5d      	ldr	r3, [pc, #372]	; (401ebc <prvTimerTask+0x1b0>)
  401d46:	681b      	ldr	r3, [r3, #0]
  401d48:	68db      	ldr	r3, [r3, #12]
  401d4a:	f8d3 900c 	ldr.w	r9, [r3, #12]
  401d4e:	f109 0004 	add.w	r0, r9, #4
  401d52:	4b5e      	ldr	r3, [pc, #376]	; (401ecc <prvTimerTask+0x1c0>)
  401d54:	4798      	blx	r3
  401d56:	f8d9 301c 	ldr.w	r3, [r9, #28]
  401d5a:	2b01      	cmp	r3, #1
  401d5c:	d11c      	bne.n	401d98 <prvTimerTask+0x8c>
  401d5e:	f8d9 1018 	ldr.w	r1, [r9, #24]
  401d62:	4633      	mov	r3, r6
  401d64:	463a      	mov	r2, r7
  401d66:	4431      	add	r1, r6
  401d68:	4648      	mov	r0, r9
  401d6a:	4f59      	ldr	r7, [pc, #356]	; (401ed0 <prvTimerTask+0x1c4>)
  401d6c:	47b8      	blx	r7
  401d6e:	2801      	cmp	r0, #1
  401d70:	d112      	bne.n	401d98 <prvTimerTask+0x8c>
  401d72:	2100      	movs	r1, #0
  401d74:	9100      	str	r1, [sp, #0]
  401d76:	460b      	mov	r3, r1
  401d78:	4632      	mov	r2, r6
  401d7a:	4648      	mov	r0, r9
  401d7c:	4e55      	ldr	r6, [pc, #340]	; (401ed4 <prvTimerTask+0x1c8>)
  401d7e:	47b0      	blx	r6
  401d80:	b950      	cbnz	r0, 401d98 <prvTimerTask+0x8c>
  401d82:	f04f 0380 	mov.w	r3, #128	; 0x80
  401d86:	b672      	cpsid	i
  401d88:	f383 8811 	msr	BASEPRI, r3
  401d8c:	f3bf 8f6f 	isb	sy
  401d90:	f3bf 8f4f 	dsb	sy
  401d94:	b662      	cpsie	i
  401d96:	e7fe      	b.n	401d96 <prvTimerTask+0x8a>
  401d98:	f8d9 3024 	ldr.w	r3, [r9, #36]	; 0x24
  401d9c:	4648      	mov	r0, r9
  401d9e:	4798      	blx	r3
  401da0:	e06d      	b.n	401e7e <prvTimerTask+0x172>
  401da2:	2200      	movs	r2, #0
  401da4:	1bf1      	subs	r1, r6, r7
  401da6:	6820      	ldr	r0, [r4, #0]
  401da8:	4b4b      	ldr	r3, [pc, #300]	; (401ed8 <prvTimerTask+0x1cc>)
  401daa:	4798      	blx	r3
  401dac:	4b46      	ldr	r3, [pc, #280]	; (401ec8 <prvTimerTask+0x1bc>)
  401dae:	4798      	blx	r3
  401db0:	2800      	cmp	r0, #0
  401db2:	d164      	bne.n	401e7e <prvTimerTask+0x172>
  401db4:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
  401db8:	f8c8 3000 	str.w	r3, [r8]
  401dbc:	f3bf 8f4f 	dsb	sy
  401dc0:	f3bf 8f6f 	isb	sy
  401dc4:	e05b      	b.n	401e7e <prvTimerTask+0x172>
  401dc6:	4b40      	ldr	r3, [pc, #256]	; (401ec8 <prvTimerTask+0x1bc>)
  401dc8:	4798      	blx	r3
  401dca:	e058      	b.n	401e7e <prvTimerTask+0x172>
  401dcc:	9b04      	ldr	r3, [sp, #16]
  401dce:	2b00      	cmp	r3, #0
  401dd0:	da06      	bge.n	401de0 <prvTimerTask+0xd4>
  401dd2:	9907      	ldr	r1, [sp, #28]
  401dd4:	9806      	ldr	r0, [sp, #24]
  401dd6:	9b05      	ldr	r3, [sp, #20]
  401dd8:	4798      	blx	r3
  401dda:	9b04      	ldr	r3, [sp, #16]
  401ddc:	2b00      	cmp	r3, #0
  401dde:	db4f      	blt.n	401e80 <prvTimerTask+0x174>
  401de0:	9e06      	ldr	r6, [sp, #24]
  401de2:	6973      	ldr	r3, [r6, #20]
  401de4:	b10b      	cbz	r3, 401dea <prvTimerTask+0xde>
  401de6:	1d30      	adds	r0, r6, #4
  401de8:	47b8      	blx	r7
  401dea:	a803      	add	r0, sp, #12
  401dec:	4b35      	ldr	r3, [pc, #212]	; (401ec4 <prvTimerTask+0x1b8>)
  401dee:	4798      	blx	r3
  401df0:	9b04      	ldr	r3, [sp, #16]
  401df2:	2b09      	cmp	r3, #9
  401df4:	d844      	bhi.n	401e80 <prvTimerTask+0x174>
  401df6:	e8df f003 	tbb	[pc, r3]
  401dfa:	0505      	.short	0x0505
  401dfc:	3f2a4305 	.word	0x3f2a4305
  401e00:	2a430505 	.word	0x2a430505
  401e04:	9f05      	ldr	r7, [sp, #20]
  401e06:	69b1      	ldr	r1, [r6, #24]
  401e08:	463b      	mov	r3, r7
  401e0a:	4602      	mov	r2, r0
  401e0c:	4439      	add	r1, r7
  401e0e:	4630      	mov	r0, r6
  401e10:	4f2f      	ldr	r7, [pc, #188]	; (401ed0 <prvTimerTask+0x1c4>)
  401e12:	47b8      	blx	r7
  401e14:	2801      	cmp	r0, #1
  401e16:	d132      	bne.n	401e7e <prvTimerTask+0x172>
  401e18:	6a73      	ldr	r3, [r6, #36]	; 0x24
  401e1a:	4630      	mov	r0, r6
  401e1c:	4798      	blx	r3
  401e1e:	69f3      	ldr	r3, [r6, #28]
  401e20:	2b01      	cmp	r3, #1
  401e22:	d12c      	bne.n	401e7e <prvTimerTask+0x172>
  401e24:	69b2      	ldr	r2, [r6, #24]
  401e26:	2100      	movs	r1, #0
  401e28:	9100      	str	r1, [sp, #0]
  401e2a:	460b      	mov	r3, r1
  401e2c:	9805      	ldr	r0, [sp, #20]
  401e2e:	4402      	add	r2, r0
  401e30:	4630      	mov	r0, r6
  401e32:	4e28      	ldr	r6, [pc, #160]	; (401ed4 <prvTimerTask+0x1c8>)
  401e34:	47b0      	blx	r6
  401e36:	bb10      	cbnz	r0, 401e7e <prvTimerTask+0x172>
  401e38:	f04f 0380 	mov.w	r3, #128	; 0x80
  401e3c:	b672      	cpsid	i
  401e3e:	f383 8811 	msr	BASEPRI, r3
  401e42:	f3bf 8f6f 	isb	sy
  401e46:	f3bf 8f4f 	dsb	sy
  401e4a:	b662      	cpsie	i
  401e4c:	e7fe      	b.n	401e4c <prvTimerTask+0x140>
  401e4e:	9905      	ldr	r1, [sp, #20]
  401e50:	61b1      	str	r1, [r6, #24]
  401e52:	b951      	cbnz	r1, 401e6a <prvTimerTask+0x15e>
  401e54:	f04f 0380 	mov.w	r3, #128	; 0x80
  401e58:	b672      	cpsid	i
  401e5a:	f383 8811 	msr	BASEPRI, r3
  401e5e:	f3bf 8f6f 	isb	sy
  401e62:	f3bf 8f4f 	dsb	sy
  401e66:	b662      	cpsie	i
  401e68:	e7fe      	b.n	401e68 <prvTimerTask+0x15c>
  401e6a:	4603      	mov	r3, r0
  401e6c:	4602      	mov	r2, r0
  401e6e:	4401      	add	r1, r0
  401e70:	4630      	mov	r0, r6
  401e72:	4e17      	ldr	r6, [pc, #92]	; (401ed0 <prvTimerTask+0x1c4>)
  401e74:	47b0      	blx	r6
  401e76:	e002      	b.n	401e7e <prvTimerTask+0x172>
  401e78:	4630      	mov	r0, r6
  401e7a:	4b18      	ldr	r3, [pc, #96]	; (401edc <prvTimerTask+0x1d0>)
  401e7c:	4798      	blx	r3
  401e7e:	4f13      	ldr	r7, [pc, #76]	; (401ecc <prvTimerTask+0x1c0>)
  401e80:	2300      	movs	r3, #0
  401e82:	461a      	mov	r2, r3
  401e84:	a904      	add	r1, sp, #16
  401e86:	6820      	ldr	r0, [r4, #0]
  401e88:	47a8      	blx	r5
  401e8a:	2800      	cmp	r0, #0
  401e8c:	d19e      	bne.n	401dcc <prvTimerTask+0xc0>
  401e8e:	e744      	b.n	401d1a <prvTimerTask+0xe>
  401e90:	4b0b      	ldr	r3, [pc, #44]	; (401ec0 <prvTimerTask+0x1b4>)
  401e92:	4798      	blx	r3
  401e94:	a804      	add	r0, sp, #16
  401e96:	4b0b      	ldr	r3, [pc, #44]	; (401ec4 <prvTimerTask+0x1b8>)
  401e98:	4798      	blx	r3
  401e9a:	4607      	mov	r7, r0
  401e9c:	9b04      	ldr	r3, [sp, #16]
  401e9e:	2b00      	cmp	r3, #0
  401ea0:	d191      	bne.n	401dc6 <prvTimerTask+0xba>
  401ea2:	4b0f      	ldr	r3, [pc, #60]	; (401ee0 <prvTimerTask+0x1d4>)
  401ea4:	681b      	ldr	r3, [r3, #0]
  401ea6:	681a      	ldr	r2, [r3, #0]
  401ea8:	fab2 f282 	clz	r2, r2
  401eac:	0952      	lsrs	r2, r2, #5
  401eae:	2600      	movs	r6, #0
  401eb0:	e778      	b.n	401da4 <prvTimerTask+0x98>
  401eb2:	bf00      	nop
  401eb4:	2040bee8 	.word	0x2040bee8
  401eb8:	00400d09 	.word	0x00400d09
  401ebc:	2040beb8 	.word	0x2040beb8
  401ec0:	0040128d 	.word	0x0040128d
  401ec4:	00401c51 	.word	0x00401c51
  401ec8:	004013dd 	.word	0x004013dd
  401ecc:	00400649 	.word	0x00400649
  401ed0:	00401abd 	.word	0x00401abd
  401ed4:	00401be1 	.word	0x00401be1
  401ed8:	00400f01 	.word	0x00400f01
  401edc:	004005c1 	.word	0x004005c1
  401ee0:	2040beec 	.word	0x2040beec
  401ee4:	e000ed04 	.word	0xe000ed04

00401ee8 <sysclk_init>:
  401ee8:	b510      	push	{r4, lr}
  401eea:	4810      	ldr	r0, [pc, #64]	; (401f2c <sysclk_init+0x44>)
  401eec:	4b10      	ldr	r3, [pc, #64]	; (401f30 <sysclk_init+0x48>)
  401eee:	4798      	blx	r3
  401ef0:	213e      	movs	r1, #62	; 0x3e
  401ef2:	2000      	movs	r0, #0
  401ef4:	4b0f      	ldr	r3, [pc, #60]	; (401f34 <sysclk_init+0x4c>)
  401ef6:	4798      	blx	r3
  401ef8:	4c0f      	ldr	r4, [pc, #60]	; (401f38 <sysclk_init+0x50>)
  401efa:	47a0      	blx	r4
  401efc:	2800      	cmp	r0, #0
  401efe:	d0fc      	beq.n	401efa <sysclk_init+0x12>
  401f00:	4b0e      	ldr	r3, [pc, #56]	; (401f3c <sysclk_init+0x54>)
  401f02:	4798      	blx	r3
  401f04:	4a0e      	ldr	r2, [pc, #56]	; (401f40 <sysclk_init+0x58>)
  401f06:	4b0f      	ldr	r3, [pc, #60]	; (401f44 <sysclk_init+0x5c>)
  401f08:	629a      	str	r2, [r3, #40]	; 0x28
  401f0a:	4c0f      	ldr	r4, [pc, #60]	; (401f48 <sysclk_init+0x60>)
  401f0c:	47a0      	blx	r4
  401f0e:	2800      	cmp	r0, #0
  401f10:	d0fc      	beq.n	401f0c <sysclk_init+0x24>
  401f12:	2002      	movs	r0, #2
  401f14:	4b0d      	ldr	r3, [pc, #52]	; (401f4c <sysclk_init+0x64>)
  401f16:	4798      	blx	r3
  401f18:	2000      	movs	r0, #0
  401f1a:	4b0d      	ldr	r3, [pc, #52]	; (401f50 <sysclk_init+0x68>)
  401f1c:	4798      	blx	r3
  401f1e:	4b0d      	ldr	r3, [pc, #52]	; (401f54 <sysclk_init+0x6c>)
  401f20:	4798      	blx	r3
  401f22:	4802      	ldr	r0, [pc, #8]	; (401f2c <sysclk_init+0x44>)
  401f24:	4b02      	ldr	r3, [pc, #8]	; (401f30 <sysclk_init+0x48>)
  401f26:	4798      	blx	r3
  401f28:	bd10      	pop	{r4, pc}
  401f2a:	bf00      	nop
  401f2c:	11e1a300 	.word	0x11e1a300
  401f30:	00402695 	.word	0x00402695
  401f34:	00402201 	.word	0x00402201
  401f38:	00402255 	.word	0x00402255
  401f3c:	00402265 	.word	0x00402265
  401f40:	20183f01 	.word	0x20183f01
  401f44:	400e0600 	.word	0x400e0600
  401f48:	00402275 	.word	0x00402275
  401f4c:	0040215d 	.word	0x0040215d
  401f50:	00402199 	.word	0x00402199
  401f54:	00402585 	.word	0x00402585

00401f58 <afec_process_callback>:
  401f58:	b570      	push	{r4, r5, r6, lr}
  401f5a:	b082      	sub	sp, #8
  401f5c:	6b02      	ldr	r2, [r0, #48]	; 0x30
  401f5e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
  401f60:	4013      	ands	r3, r2
  401f62:	9301      	str	r3, [sp, #4]
  401f64:	2400      	movs	r4, #0
  401f66:	4e1a      	ldr	r6, [pc, #104]	; (401fd0 <afec_process_callback+0x78>)
  401f68:	4d1a      	ldr	r5, [pc, #104]	; (401fd4 <afec_process_callback+0x7c>)
  401f6a:	42a8      	cmp	r0, r5
  401f6c:	bf14      	ite	ne
  401f6e:	2000      	movne	r0, #0
  401f70:	2001      	moveq	r0, #1
  401f72:	0105      	lsls	r5, r0, #4
  401f74:	2c0b      	cmp	r4, #11
  401f76:	d80a      	bhi.n	401f8e <afec_process_callback+0x36>
  401f78:	9a01      	ldr	r2, [sp, #4]
  401f7a:	2301      	movs	r3, #1
  401f7c:	40a3      	lsls	r3, r4
  401f7e:	4213      	tst	r3, r2
  401f80:	d020      	beq.n	401fc4 <afec_process_callback+0x6c>
  401f82:	192b      	adds	r3, r5, r4
  401f84:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
  401f88:	b1e3      	cbz	r3, 401fc4 <afec_process_callback+0x6c>
  401f8a:	4798      	blx	r3
  401f8c:	e01a      	b.n	401fc4 <afec_process_callback+0x6c>
  401f8e:	2c0e      	cmp	r4, #14
  401f90:	d80c      	bhi.n	401fac <afec_process_callback+0x54>
  401f92:	9a01      	ldr	r2, [sp, #4]
  401f94:	f104 010c 	add.w	r1, r4, #12
  401f98:	2301      	movs	r3, #1
  401f9a:	408b      	lsls	r3, r1
  401f9c:	4213      	tst	r3, r2
  401f9e:	d011      	beq.n	401fc4 <afec_process_callback+0x6c>
  401fa0:	192b      	adds	r3, r5, r4
  401fa2:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
  401fa6:	b16b      	cbz	r3, 401fc4 <afec_process_callback+0x6c>
  401fa8:	4798      	blx	r3
  401faa:	e00b      	b.n	401fc4 <afec_process_callback+0x6c>
  401fac:	9a01      	ldr	r2, [sp, #4]
  401fae:	f104 010f 	add.w	r1, r4, #15
  401fb2:	2301      	movs	r3, #1
  401fb4:	408b      	lsls	r3, r1
  401fb6:	4213      	tst	r3, r2
  401fb8:	d004      	beq.n	401fc4 <afec_process_callback+0x6c>
  401fba:	192b      	adds	r3, r5, r4
  401fbc:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
  401fc0:	b103      	cbz	r3, 401fc4 <afec_process_callback+0x6c>
  401fc2:	4798      	blx	r3
  401fc4:	3401      	adds	r4, #1
  401fc6:	2c10      	cmp	r4, #16
  401fc8:	d1d4      	bne.n	401f74 <afec_process_callback+0x1c>
  401fca:	b002      	add	sp, #8
  401fcc:	bd70      	pop	{r4, r5, r6, pc}
  401fce:	bf00      	nop
  401fd0:	2040bf34 	.word	0x2040bf34
  401fd4:	40064000 	.word	0x40064000

00401fd8 <AFEC0_Handler>:
  401fd8:	b508      	push	{r3, lr}
  401fda:	4802      	ldr	r0, [pc, #8]	; (401fe4 <AFEC0_Handler+0xc>)
  401fdc:	4b02      	ldr	r3, [pc, #8]	; (401fe8 <AFEC0_Handler+0x10>)
  401fde:	4798      	blx	r3
  401fe0:	bd08      	pop	{r3, pc}
  401fe2:	bf00      	nop
  401fe4:	4003c000 	.word	0x4003c000
  401fe8:	00401f59 	.word	0x00401f59

00401fec <AFEC1_Handler>:
  401fec:	b508      	push	{r3, lr}
  401fee:	4802      	ldr	r0, [pc, #8]	; (401ff8 <AFEC1_Handler+0xc>)
  401ff0:	4b02      	ldr	r3, [pc, #8]	; (401ffc <AFEC1_Handler+0x10>)
  401ff2:	4798      	blx	r3
  401ff4:	bd08      	pop	{r3, pc}
  401ff6:	bf00      	nop
  401ff8:	40064000 	.word	0x40064000
  401ffc:	00401f59 	.word	0x00401f59

00402000 <pio_set_debounce_filter>:
void pio_set_debounce_filter(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_cut_off)
{
#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	/* Set Debouncing, 0 bit field no effect */
	p_pio->PIO_IFSCER = ul_mask;
  402000:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
	/*
	 * The debouncing filter can filter a pulse of less than 1/2 Period of a
	 * programmable Divided Slow Clock:
	 * Tdiv_slclk = ((DIV+1)*2).Tslow_clock
	 */
	p_pio->PIO_SCDR = PIO_SCDR_DIV((FREQ_SLOW_CLOCK_EXT /
  402004:	0052      	lsls	r2, r2, #1
  402006:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  40200a:	fbb3 f2f2 	udiv	r2, r3, r2
  40200e:	3a01      	subs	r2, #1
  402010:	f3c2 020d 	ubfx	r2, r2, #0, #14
  402014:	f8c0 208c 	str.w	r2, [r0, #140]	; 0x8c
  402018:	4770      	bx	lr
  40201a:	bf00      	nop

0040201c <pio_set>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_set(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_SODR = ul_mask;
  40201c:	6301      	str	r1, [r0, #48]	; 0x30
  40201e:	4770      	bx	lr

00402020 <pio_clear>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_clear(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_CODR = ul_mask;
  402020:	6341      	str	r1, [r0, #52]	; 0x34
  402022:	4770      	bx	lr

00402024 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  402024:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  402026:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  40202a:	d02f      	beq.n	40208c <pio_set_peripheral+0x68>
  40202c:	d807      	bhi.n	40203e <pio_set_peripheral+0x1a>
  40202e:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  402032:	d014      	beq.n	40205e <pio_set_peripheral+0x3a>
  402034:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  402038:	d01e      	beq.n	402078 <pio_set_peripheral+0x54>
  40203a:	b939      	cbnz	r1, 40204c <pio_set_peripheral+0x28>
  40203c:	4770      	bx	lr
  40203e:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  402042:	d037      	beq.n	4020b4 <pio_set_peripheral+0x90>
  402044:	d804      	bhi.n	402050 <pio_set_peripheral+0x2c>
  402046:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  40204a:	d029      	beq.n	4020a0 <pio_set_peripheral+0x7c>
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  40204c:	6042      	str	r2, [r0, #4]
  40204e:	4770      	bx	lr

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  402050:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  402054:	d02e      	beq.n	4020b4 <pio_set_peripheral+0x90>
  402056:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  40205a:	d02b      	beq.n	4020b4 <pio_set_peripheral+0x90>
  40205c:	e7f6      	b.n	40204c <pio_set_peripheral+0x28>
 * \param ul_type PIO type.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_set_peripheral(Pio *p_pio, const pio_type_t ul_type,
		const uint32_t ul_mask)
{
  40205e:	b410      	push	{r4}
	p_pio->PIO_IDR = ul_mask;

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABCDSR[0];
  402060:	6f04      	ldr	r4, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  402062:	6f01      	ldr	r1, [r0, #112]	; 0x70
  402064:	43d3      	mvns	r3, r2
  402066:	4021      	ands	r1, r4
  402068:	4019      	ands	r1, r3
  40206a:	6701      	str	r1, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  40206c:	6f44      	ldr	r4, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  40206e:	6f41      	ldr	r1, [r0, #116]	; 0x74
  402070:	4021      	ands	r1, r4
  402072:	400b      	ands	r3, r1
  402074:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  402076:	e01a      	b.n	4020ae <pio_set_peripheral+0x8a>
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  402078:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  40207a:	4313      	orrs	r3, r2
  40207c:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  40207e:	6f41      	ldr	r1, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  402080:	6f43      	ldr	r3, [r0, #116]	; 0x74
  402082:	400b      	ands	r3, r1
  402084:	ea23 0302 	bic.w	r3, r3, r2
  402088:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  40208a:	e7df      	b.n	40204c <pio_set_peripheral+0x28>
#if (!SAMG)
	case PIO_PERIPH_C:
		ul_sr = p_pio->PIO_ABCDSR[0];
  40208c:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  40208e:	6f03      	ldr	r3, [r0, #112]	; 0x70
  402090:	400b      	ands	r3, r1
  402092:	ea23 0302 	bic.w	r3, r3, r2
  402096:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  402098:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  40209a:	4313      	orrs	r3, r2
  40209c:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  40209e:	e7d5      	b.n	40204c <pio_set_peripheral+0x28>
	case PIO_PERIPH_D:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4020a0:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4020a2:	4313      	orrs	r3, r2
  4020a4:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  4020a6:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  4020a8:	4313      	orrs	r3, r2
  4020aa:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  4020ac:	e7ce      	b.n	40204c <pio_set_peripheral+0x28>
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  4020ae:	6042      	str	r2, [r0, #4]
}
  4020b0:	f85d 4b04 	ldr.w	r4, [sp], #4
  4020b4:	4770      	bx	lr
  4020b6:	bf00      	nop

004020b8 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  4020b8:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  4020ba:	f012 0f01 	tst.w	r2, #1
  4020be:	d001      	beq.n	4020c4 <pio_set_input+0xc>
		p_pio->PIO_PUER = ul_mask;
  4020c0:	6641      	str	r1, [r0, #100]	; 0x64
  4020c2:	e000      	b.n	4020c6 <pio_set_input+0xe>
	} else {
		p_pio->PIO_PUDR = ul_mask;
  4020c4:	6601      	str	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_attribute & PIO_PULLUP);

	/* Enable Input Filter if necessary */
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  4020c6:	f012 0f0a 	tst.w	r2, #10
  4020ca:	d001      	beq.n	4020d0 <pio_set_input+0x18>
		p_pio->PIO_IFER = ul_mask;
  4020cc:	6201      	str	r1, [r0, #32]
  4020ce:	e000      	b.n	4020d2 <pio_set_input+0x1a>
	} else {
		p_pio->PIO_IFDR = ul_mask;
  4020d0:	6241      	str	r1, [r0, #36]	; 0x24
	}

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	/* Enable de-glitch or de-bounce if necessary */
	if (ul_attribute & PIO_DEGLITCH) {
  4020d2:	f012 0f02 	tst.w	r2, #2
  4020d6:	d002      	beq.n	4020de <pio_set_input+0x26>
		p_pio->PIO_IFSCDR = ul_mask;
  4020d8:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
  4020dc:	e004      	b.n	4020e8 <pio_set_input+0x30>
	} else {
		if (ul_attribute & PIO_DEBOUNCE) {
  4020de:	f012 0f08 	tst.w	r2, #8
  4020e2:	d001      	beq.n	4020e8 <pio_set_input+0x30>
			p_pio->PIO_IFSCER = ul_mask;
  4020e4:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
#else
#error "Unsupported device"
#endif

	/* Configure pin as input */
	p_pio->PIO_ODR = ul_mask;
  4020e8:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  4020ea:	6001      	str	r1, [r0, #0]
  4020ec:	4770      	bx	lr
  4020ee:	bf00      	nop

004020f0 <pio_set_output>:
 */
void pio_set_output(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_default_level,
		const uint32_t ul_multidrive_enable,
		const uint32_t ul_pull_up_enable)
{
  4020f0:	b410      	push	{r4}
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  4020f2:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  4020f4:	9c01      	ldr	r4, [sp, #4]
  4020f6:	b10c      	cbz	r4, 4020fc <pio_set_output+0xc>
		p_pio->PIO_PUER = ul_mask;
  4020f8:	6641      	str	r1, [r0, #100]	; 0x64
  4020fa:	e000      	b.n	4020fe <pio_set_output+0xe>
	} else {
		p_pio->PIO_PUDR = ul_mask;
  4020fc:	6601      	str	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_pull_up_enable);

	/* Enable multi-drive if necessary */
	if (ul_multidrive_enable) {
  4020fe:	b10b      	cbz	r3, 402104 <pio_set_output+0x14>
		p_pio->PIO_MDER = ul_mask;
  402100:	6501      	str	r1, [r0, #80]	; 0x50
  402102:	e000      	b.n	402106 <pio_set_output+0x16>
	} else {
		p_pio->PIO_MDDR = ul_mask;
  402104:	6541      	str	r1, [r0, #84]	; 0x54
	}

	/* Set default value */
	if (ul_default_level) {
  402106:	b10a      	cbz	r2, 40210c <pio_set_output+0x1c>
		p_pio->PIO_SODR = ul_mask;
  402108:	6301      	str	r1, [r0, #48]	; 0x30
  40210a:	e000      	b.n	40210e <pio_set_output+0x1e>
	} else {
		p_pio->PIO_CODR = ul_mask;
  40210c:	6341      	str	r1, [r0, #52]	; 0x34
	}

	/* Configure pin(s) as output(s) */
	p_pio->PIO_OER = ul_mask;
  40210e:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  402110:	6001      	str	r1, [r0, #0]
}
  402112:	f85d 4b04 	ldr.w	r4, [sp], #4
  402116:	4770      	bx	lr

00402118 <pio_configure_interrupt>:
 */
void pio_configure_interrupt(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_attr)
{
	/* Configure additional interrupt mode registers. */
	if (ul_attr & PIO_IT_AIME) {
  402118:	f012 0f10 	tst.w	r2, #16
  40211c:	d012      	beq.n	402144 <pio_configure_interrupt+0x2c>
		/* Enable additional interrupt mode. */
		p_pio->PIO_AIMER = ul_mask;
  40211e:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0

		/* If bit field of the selected pin is 1, set as
		   Rising Edge/High level detection event. */
		if (ul_attr & PIO_IT_RE_OR_HL) {
  402122:	f012 0f20 	tst.w	r2, #32
  402126:	d002      	beq.n	40212e <pio_configure_interrupt+0x16>
			/* Rising Edge or High Level */
			p_pio->PIO_REHLSR = ul_mask;
  402128:	f8c0 10d4 	str.w	r1, [r0, #212]	; 0xd4
  40212c:	e001      	b.n	402132 <pio_configure_interrupt+0x1a>
		} else {
			/* Falling Edge or Low Level */
			p_pio->PIO_FELLSR = ul_mask;
  40212e:	f8c0 10d0 	str.w	r1, [r0, #208]	; 0xd0
		}

		/* If bit field of the selected pin is 1, set as
		   edge detection source. */
		if (ul_attr & PIO_IT_EDGE) {
  402132:	f012 0f40 	tst.w	r2, #64	; 0x40
  402136:	d002      	beq.n	40213e <pio_configure_interrupt+0x26>
			/* Edge select */
			p_pio->PIO_ESR = ul_mask;
  402138:	f8c0 10c0 	str.w	r1, [r0, #192]	; 0xc0
  40213c:	4770      	bx	lr
		} else {
			/* Level select */
			p_pio->PIO_LSR = ul_mask;
  40213e:	f8c0 10c4 	str.w	r1, [r0, #196]	; 0xc4
  402142:	4770      	bx	lr
		}
	} else {
		/* Disable additional interrupt mode. */
		p_pio->PIO_AIMDR = ul_mask;
  402144:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
  402148:	4770      	bx	lr
  40214a:	bf00      	nop

0040214c <pio_enable_interrupt>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_enable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_ISR;
  40214c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
	p_pio->PIO_IER = ul_mask;
  40214e:	6401      	str	r1, [r0, #64]	; 0x40
  402150:	4770      	bx	lr
  402152:	bf00      	nop

00402154 <pio_get_interrupt_status>:
 *
 * \return The interrupt status mask value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  402154:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  402156:	4770      	bx	lr

00402158 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  402158:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  40215a:	4770      	bx	lr

0040215c <pmc_mck_set_division>:
 *
 * \param ul_div Division value.
 */
void pmc_mck_set_division(uint32_t ul_div)
{
	switch (ul_div) {
  40215c:	2803      	cmp	r0, #3
  40215e:	d007      	beq.n	402170 <pmc_mck_set_division+0x14>
  402160:	2804      	cmp	r0, #4
  402162:	d008      	beq.n	402176 <pmc_mck_set_division+0x1a>
		case 1:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
  402164:	2802      	cmp	r0, #2
  402166:	bf0c      	ite	eq
  402168:	f44f 7280 	moveq.w	r2, #256	; 0x100
  40216c:	2200      	movne	r2, #0
  40216e:	e004      	b.n	40217a <pmc_mck_set_division+0x1e>
			break;
		case 2:
			ul_div = PMC_MCKR_MDIV_PCK_DIV2;
			break;
		case 3:
			ul_div = PMC_MCKR_MDIV_PCK_DIV3;
  402170:	f44f 7240 	mov.w	r2, #768	; 0x300
			break;
  402174:	e001      	b.n	40217a <pmc_mck_set_division+0x1e>
		case 4:
			ul_div = PMC_MCKR_MDIV_PCK_DIV4;
  402176:	f44f 7200 	mov.w	r2, #512	; 0x200
		default:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
			break;
	}
	PMC->PMC_MCKR =
			(PMC->PMC_MCKR & (~PMC_MCKR_MDIV_Msk)) | ul_div;
  40217a:	4906      	ldr	r1, [pc, #24]	; (402194 <pmc_mck_set_division+0x38>)
  40217c:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  40217e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  402182:	4313      	orrs	r3, r2
			break;
		default:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
			break;
	}
	PMC->PMC_MCKR =
  402184:	630b      	str	r3, [r1, #48]	; 0x30
			(PMC->PMC_MCKR & (~PMC_MCKR_MDIV_Msk)) | ul_div;
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  402186:	460a      	mov	r2, r1
  402188:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40218a:	f013 0f08 	tst.w	r3, #8
  40218e:	d0fb      	beq.n	402188 <pmc_mck_set_division+0x2c>
}
  402190:	4770      	bx	lr
  402192:	bf00      	nop
  402194:	400e0600 	.word	0x400e0600

00402198 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  402198:	4a18      	ldr	r2, [pc, #96]	; (4021fc <pmc_switch_mck_to_pllack+0x64>)
  40219a:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40219c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  4021a0:	4318      	orrs	r0, r3
  4021a2:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  4021a4:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4021a6:	f013 0f08 	tst.w	r3, #8
  4021aa:	d003      	beq.n	4021b4 <pmc_switch_mck_to_pllack+0x1c>
  4021ac:	e009      	b.n	4021c2 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  4021ae:	3b01      	subs	r3, #1
  4021b0:	d103      	bne.n	4021ba <pmc_switch_mck_to_pllack+0x22>
  4021b2:	e01e      	b.n	4021f2 <pmc_switch_mck_to_pllack+0x5a>
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  4021b4:	f44f 6300 	mov.w	r3, #2048	; 0x800
  4021b8:	4910      	ldr	r1, [pc, #64]	; (4021fc <pmc_switch_mck_to_pllack+0x64>)
  4021ba:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  4021bc:	f012 0f08 	tst.w	r2, #8
  4021c0:	d0f5      	beq.n	4021ae <pmc_switch_mck_to_pllack+0x16>
		if (ul_timeout == 0) {
			return 1;
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  4021c2:	4a0e      	ldr	r2, [pc, #56]	; (4021fc <pmc_switch_mck_to_pllack+0x64>)
  4021c4:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4021c6:	f023 0303 	bic.w	r3, r3, #3
  4021ca:	f043 0302 	orr.w	r3, r3, #2
  4021ce:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  4021d0:	6e90      	ldr	r0, [r2, #104]	; 0x68
  4021d2:	f010 0008 	ands.w	r0, r0, #8
  4021d6:	d004      	beq.n	4021e2 <pmc_switch_mck_to_pllack+0x4a>
		if (ul_timeout == 0) {
			return 1;
		}
	}

	return 0;
  4021d8:	2000      	movs	r0, #0
  4021da:	4770      	bx	lr
	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
  4021dc:	3b01      	subs	r3, #1
  4021de:	d103      	bne.n	4021e8 <pmc_switch_mck_to_pllack+0x50>
  4021e0:	e009      	b.n	4021f6 <pmc_switch_mck_to_pllack+0x5e>
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  4021e2:	f44f 6300 	mov.w	r3, #2048	; 0x800
  4021e6:	4905      	ldr	r1, [pc, #20]	; (4021fc <pmc_switch_mck_to_pllack+0x64>)
  4021e8:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  4021ea:	f012 0f08 	tst.w	r2, #8
  4021ee:	d0f5      	beq.n	4021dc <pmc_switch_mck_to_pllack+0x44>
  4021f0:	4770      	bx	lr

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
  4021f2:	2001      	movs	r0, #1
  4021f4:	4770      	bx	lr
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
  4021f6:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  4021f8:	4770      	bx	lr
  4021fa:	bf00      	nop
  4021fc:	400e0600 	.word	0x400e0600

00402200 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  402200:	b138      	cbz	r0, 402212 <pmc_switch_mainck_to_xtal+0x12>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  402202:	490e      	ldr	r1, [pc, #56]	; (40223c <pmc_switch_mainck_to_xtal+0x3c>)
  402204:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  402206:	4a0e      	ldr	r2, [pc, #56]	; (402240 <pmc_switch_mainck_to_xtal+0x40>)
  402208:	401a      	ands	r2, r3
  40220a:	4b0e      	ldr	r3, [pc, #56]	; (402244 <pmc_switch_mainck_to_xtal+0x44>)
  40220c:	4313      	orrs	r3, r2
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  40220e:	620b      	str	r3, [r1, #32]
  402210:	4770      	bx	lr
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  402212:	480a      	ldr	r0, [pc, #40]	; (40223c <pmc_switch_mainck_to_xtal+0x3c>)
  402214:	6a03      	ldr	r3, [r0, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  402216:	0209      	lsls	r1, r1, #8
  402218:	b289      	uxth	r1, r1
  40221a:	4a0b      	ldr	r2, [pc, #44]	; (402248 <pmc_switch_mainck_to_xtal+0x48>)
  40221c:	401a      	ands	r2, r3
  40221e:	4b0b      	ldr	r3, [pc, #44]	; (40224c <pmc_switch_mainck_to_xtal+0x4c>)
  402220:	4313      	orrs	r3, r2
  402222:	4319      	orrs	r1, r3
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  402224:	6201      	str	r1, [r0, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  402226:	4602      	mov	r2, r0
  402228:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40222a:	f013 0f01 	tst.w	r3, #1
  40222e:	d0fb      	beq.n	402228 <pmc_switch_mainck_to_xtal+0x28>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  402230:	4a02      	ldr	r2, [pc, #8]	; (40223c <pmc_switch_mainck_to_xtal+0x3c>)
  402232:	6a11      	ldr	r1, [r2, #32]
  402234:	4b06      	ldr	r3, [pc, #24]	; (402250 <pmc_switch_mainck_to_xtal+0x50>)
  402236:	430b      	orrs	r3, r1
  402238:	6213      	str	r3, [r2, #32]
  40223a:	4770      	bx	lr
  40223c:	400e0600 	.word	0x400e0600
  402240:	fec8fffc 	.word	0xfec8fffc
  402244:	01370002 	.word	0x01370002
  402248:	ffc8fffc 	.word	0xffc8fffc
  40224c:	00370001 	.word	0x00370001
  402250:	01370000 	.word	0x01370000

00402254 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  402254:	4b02      	ldr	r3, [pc, #8]	; (402260 <pmc_osc_is_ready_mainck+0xc>)
  402256:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  402258:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  40225c:	4770      	bx	lr
  40225e:	bf00      	nop
  402260:	400e0600 	.word	0x400e0600

00402264 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  402264:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  402268:	4b01      	ldr	r3, [pc, #4]	; (402270 <pmc_disable_pllack+0xc>)
  40226a:	629a      	str	r2, [r3, #40]	; 0x28
  40226c:	4770      	bx	lr
  40226e:	bf00      	nop
  402270:	400e0600 	.word	0x400e0600

00402274 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  402274:	4b02      	ldr	r3, [pc, #8]	; (402280 <pmc_is_locked_pllack+0xc>)
  402276:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  402278:	f000 0002 	and.w	r0, r0, #2
  40227c:	4770      	bx	lr
  40227e:	bf00      	nop
  402280:	400e0600 	.word	0x400e0600

00402284 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  402284:	283f      	cmp	r0, #63	; 0x3f
  402286:	d81e      	bhi.n	4022c6 <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  402288:	281f      	cmp	r0, #31
  40228a:	d80c      	bhi.n	4022a6 <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  40228c:	4b11      	ldr	r3, [pc, #68]	; (4022d4 <pmc_enable_periph_clk+0x50>)
  40228e:	699a      	ldr	r2, [r3, #24]
  402290:	2301      	movs	r3, #1
  402292:	4083      	lsls	r3, r0
  402294:	4393      	bics	r3, r2
  402296:	d018      	beq.n	4022ca <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  402298:	2301      	movs	r3, #1
  40229a:	fa03 f000 	lsl.w	r0, r3, r0
  40229e:	4b0d      	ldr	r3, [pc, #52]	; (4022d4 <pmc_enable_periph_clk+0x50>)
  4022a0:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  4022a2:	2000      	movs	r0, #0
  4022a4:	4770      	bx	lr
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
			PMC->PMC_PCER0 = 1 << ul_id;
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP || SAMG55 || SAMV71 || SAMV70 || SAME70 || SAMS70)
	} else {
		ul_id -= 32;
  4022a6:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  4022a8:	4b0a      	ldr	r3, [pc, #40]	; (4022d4 <pmc_enable_periph_clk+0x50>)
  4022aa:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  4022ae:	2301      	movs	r3, #1
  4022b0:	4083      	lsls	r3, r0
  4022b2:	4393      	bics	r3, r2
  4022b4:	d00b      	beq.n	4022ce <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  4022b6:	2301      	movs	r3, #1
  4022b8:	fa03 f000 	lsl.w	r0, r3, r0
  4022bc:	4b05      	ldr	r3, [pc, #20]	; (4022d4 <pmc_enable_periph_clk+0x50>)
  4022be:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
		}
#endif
	}

	return 0;
  4022c2:	2000      	movs	r0, #0
  4022c4:	4770      	bx	lr
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
		return 1;
  4022c6:	2001      	movs	r0, #1
  4022c8:	4770      	bx	lr
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  4022ca:	2000      	movs	r0, #0
  4022cc:	4770      	bx	lr
  4022ce:	2000      	movs	r0, #0
}
  4022d0:	4770      	bx	lr
  4022d2:	bf00      	nop
  4022d4:	400e0600 	.word	0x400e0600

004022d8 <uart_init>:
 *
 * \retval 0 Success.
 * \retval 1 Bad baud rate generator value.
 */
uint32_t uart_init(Uart *p_uart, const sam_uart_opt_t *p_uart_opt)
{
  4022d8:	b410      	push	{r4}
	uint32_t cd = 0;

	/* Reset and disable receiver & transmitter */
	p_uart->UART_CR = UART_CR_RSTRX | UART_CR_RSTTX
  4022da:	23ac      	movs	r3, #172	; 0xac
  4022dc:	6003      	str	r3, [r0, #0]
			| UART_CR_RXDIS | UART_CR_TXDIS;

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
  4022de:	680b      	ldr	r3, [r1, #0]
  4022e0:	684a      	ldr	r2, [r1, #4]
  4022e2:	fbb3 f3f2 	udiv	r3, r3, r2
  4022e6:	091b      	lsrs	r3, r3, #4
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
  4022e8:	1e5c      	subs	r4, r3, #1
  4022ea:	f64f 72fe 	movw	r2, #65534	; 0xfffe
  4022ee:	4294      	cmp	r4, r2
  4022f0:	d806      	bhi.n	402300 <uart_init+0x28>
		return 1;

	p_uart->UART_BRGR = cd;
  4022f2:	6203      	str	r3, [r0, #32]
	/* Configure mode */
	p_uart->UART_MR = p_uart_opt->ul_mode;
  4022f4:	688b      	ldr	r3, [r1, #8]
  4022f6:	6043      	str	r3, [r0, #4]
	/* Disable PDC channel */
	p_uart->UART_PTCR = UART_PTCR_RXTDIS | UART_PTCR_TXTDIS;
#endif

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;
  4022f8:	2350      	movs	r3, #80	; 0x50
  4022fa:	6003      	str	r3, [r0, #0]

	return 0;
  4022fc:	2000      	movs	r0, #0
  4022fe:	e000      	b.n	402302 <uart_init+0x2a>

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
		return 1;
  402300:	2001      	movs	r0, #1

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;

	return 0;
}
  402302:	f85d 4b04 	ldr.w	r4, [sp], #4
  402306:	4770      	bx	lr

00402308 <uart_enable_tx>:
 * \param p_uart Pointer to a UART instance.
 */
void uart_enable_tx(Uart *p_uart)
{
	/* Enable transmitter */
	p_uart->UART_CR = UART_CR_TXEN;
  402308:	2340      	movs	r3, #64	; 0x40
  40230a:	6003      	str	r3, [r0, #0]
  40230c:	4770      	bx	lr
  40230e:	bf00      	nop

00402310 <uart_enable_rx>:
 * \param p_uart Pointer to a UART instance.
 */
void uart_enable_rx(Uart *p_uart)
{
	/* Enable receiver */
	p_uart->UART_CR = UART_CR_RXEN;
  402310:	2310      	movs	r3, #16
  402312:	6003      	str	r3, [r0, #0]
  402314:	4770      	bx	lr
  402316:	bf00      	nop

00402318 <uart_enable>:
 * \param p_uart Pointer to a UART instance.
 */
void uart_enable(Uart *p_uart)
{
	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;
  402318:	2350      	movs	r3, #80	; 0x50
  40231a:	6003      	str	r3, [r0, #0]
  40231c:	4770      	bx	lr
  40231e:	bf00      	nop

00402320 <uart_enable_interrupt>:
 * \param p_uart Pointer to a UART instance.
 *  \param ul_sources Interrupts to be enabled.
 */
void uart_enable_interrupt(Uart *p_uart, uint32_t ul_sources)
{
	p_uart->UART_IER = ul_sources;
  402320:	6081      	str	r1, [r0, #8]
  402322:	4770      	bx	lr

00402324 <uart_is_tx_ready>:
 * \retval 1 Data has been transmitted.
 * \retval 0 Transmit is not ready, data pending.
 */
uint32_t uart_is_tx_ready(Uart *p_uart)
{
	return (p_uart->UART_SR & UART_SR_TXRDY) > 0;
  402324:	6940      	ldr	r0, [r0, #20]
}
  402326:	f3c0 0040 	ubfx	r0, r0, #1, #1
  40232a:	4770      	bx	lr

0040232c <uart_set_clock_divisor>:
 * \param us_divisor Value to be set.
 *
 */
void uart_set_clock_divisor(Uart *p_uart, uint16_t us_divisor)
{
	p_uart->UART_BRGR = us_divisor;
  40232c:	6201      	str	r1, [r0, #32]
  40232e:	4770      	bx	lr

00402330 <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
  402330:	6943      	ldr	r3, [r0, #20]
  402332:	f013 0f02 	tst.w	r3, #2
  402336:	d002      	beq.n	40233e <uart_write+0xe>
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
  402338:	61c1      	str	r1, [r0, #28]
	return 0;
  40233a:	2000      	movs	r0, #0
  40233c:	4770      	bx	lr
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
		return 1;
  40233e:	2001      	movs	r0, #1

	/* Send character */
	p_uart->UART_THR = uc_data;
	return 0;
}
  402340:	4770      	bx	lr
  402342:	bf00      	nop

00402344 <board_init>:
#define UART_SERIAL_PARITY			US_MR_PAR_NO
#define	UART_SERIAL_STOP_BIT		US_MR_NBSTOP_1_BIT
#define PIOA_BUTTONS				PIO_PA11|PIO_PA12|PIO_PA13|PIO_PA14|PIO_PA15|PIO_PA16|PIO_PA17|PIO_PA18|PIO_PA19|PIO_PA20|PIO_PA22|PIO_PA23|PIO_PA24

void board_init(void)
{
  402344:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402348:	b087      	sub	sp, #28
	   ######################################
					Setup Clock
	   ######################################
	   ###################################### */
	CONFIG_SYSCLK_SOURCE;
	supc_switch_sclk_to_32kxtal(SUPC,0);
  40234a:	2100      	movs	r1, #0
  40234c:	4845      	ldr	r0, [pc, #276]	; (402464 <board_init+0x120>)
  40234e:	4b46      	ldr	r3, [pc, #280]	; (402468 <board_init+0x124>)
  402350:	4798      	blx	r3
	sysclk_init();
  402352:	4b46      	ldr	r3, [pc, #280]	; (40246c <board_init+0x128>)
  402354:	4798      	blx	r3
	/* ######################################
	   ######################################
					Enable UART
	   ######################################
	   ###################################### */
	const sam_uart_opt_t usart_console_settings = {
  402356:	4b46      	ldr	r3, [pc, #280]	; (402470 <board_init+0x12c>)
  402358:	ad03      	add	r5, sp, #12
  40235a:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
  40235e:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  402362:	2008      	movs	r0, #8
  402364:	4f43      	ldr	r7, [pc, #268]	; (402474 <board_init+0x130>)
  402366:	47b8      	blx	r7
		UART_SERIAL_PARITY,
		UART_SERIAL_STOP_BIT,
		UART_MR_CHMODE_NORMAL
	};
	sysclk_enable_peripheral_clock(ID_UART1);
	pmc_enable_periph_clk(ID_UART1);
  402368:	2008      	movs	r0, #8
  40236a:	47b8      	blx	r7
	uart_init(UART1, &usart_console_settings);
  40236c:	4c42      	ldr	r4, [pc, #264]	; (402478 <board_init+0x134>)
  40236e:	4629      	mov	r1, r5
  402370:	4620      	mov	r0, r4
  402372:	4b42      	ldr	r3, [pc, #264]	; (40247c <board_init+0x138>)
  402374:	4798      	blx	r3
	uart_enable(UART1);
  402376:	4620      	mov	r0, r4
  402378:	4b41      	ldr	r3, [pc, #260]	; (402480 <board_init+0x13c>)
  40237a:	4798      	blx	r3
	uart_enable_tx(UART1);
  40237c:	4620      	mov	r0, r4
  40237e:	4b41      	ldr	r3, [pc, #260]	; (402484 <board_init+0x140>)
  402380:	4798      	blx	r3
	uart_enable_rx(UART1);
  402382:	4620      	mov	r0, r4
  402384:	4b40      	ldr	r3, [pc, #256]	; (402488 <board_init+0x144>)
  402386:	4798      	blx	r3
	uart_set_clock_divisor(UART1,(83/1)); //Pippin had GLOBAL_SLOWDOWN IT WAS VALUED 1
  402388:	2153      	movs	r1, #83	; 0x53
  40238a:	4620      	mov	r0, r4
  40238c:	4b3f      	ldr	r3, [pc, #252]	; (40248c <board_init+0x148>)
  40238e:	4798      	blx	r3
	pmc_enable_periph_clk(ID_PIOA);
  402390:	200a      	movs	r0, #10
  402392:	47b8      	blx	r7
	pio_set_peripheral(PIOA,PIO_TYPE_PIO_PERIPH_C,1<<4 | 1<<5);
  402394:	f8df b144 	ldr.w	fp, [pc, #324]	; 4024dc <board_init+0x198>
  402398:	2230      	movs	r2, #48	; 0x30
  40239a:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  40239e:	4658      	mov	r0, fp
  4023a0:	4b3b      	ldr	r3, [pc, #236]	; (402490 <board_init+0x14c>)
  4023a2:	4798      	blx	r3
	//Test UART
	sendDebugString("MELLATRON9000 BOOT SEQUENCE\nUART CONSOLE STARTED ON UART4\nBaudRate: 115200\nBits: 8\nNo stop bits \n");
  4023a4:	483b      	ldr	r0, [pc, #236]	; (402494 <board_init+0x150>)
  4023a6:	4d3c      	ldr	r5, [pc, #240]	; (402498 <board_init+0x154>)
  4023a8:	47a8      	blx	r5
	   ######################################
	   ###################################### */
	//sendDebugString("LED INITIALIZATION - STARTED\n");
		//pio_set_peripheral(PIOB,PIO_TYPE_PIO_OUTPUT_1,1<<12);
		//pmc_enable_periph_clk(ID_PIOA);
		pmc_enable_periph_clk(ID_PIOD);
  4023aa:	2010      	movs	r0, #16
  4023ac:	47b8      	blx	r7
		pio_set_output(LED1,LOW,DISABLE,DISABLE);
  4023ae:	f8df a130 	ldr.w	sl, [pc, #304]	; 4024e0 <board_init+0x19c>
  4023b2:	2600      	movs	r6, #0
  4023b4:	9600      	str	r6, [sp, #0]
  4023b6:	4633      	mov	r3, r6
  4023b8:	4632      	mov	r2, r6
  4023ba:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  4023be:	4650      	mov	r0, sl
  4023c0:	f8df 9120 	ldr.w	r9, [pc, #288]	; 4024e4 <board_init+0x1a0>
  4023c4:	47c8      	blx	r9
		pio_set_output(LED2,LOW,DISABLE,DISABLE);
  4023c6:	9600      	str	r6, [sp, #0]
  4023c8:	4633      	mov	r3, r6
  4023ca:	4632      	mov	r2, r6
  4023cc:	f04f 6180 	mov.w	r1, #67108864	; 0x4000000
  4023d0:	4650      	mov	r0, sl
  4023d2:	47c8      	blx	r9
		/* ######################################
	   ######################################
					Disable Watchdog
	   ######################################
	   ###################################### */
		sendDebugString("WATCHDOG INITIALIZATION - STARTED\n");
  4023d4:	4831      	ldr	r0, [pc, #196]	; (40249c <board_init+0x158>)
  4023d6:	47a8      	blx	r5
		wdt_disable(WDT);
  4023d8:	4831      	ldr	r0, [pc, #196]	; (4024a0 <board_init+0x15c>)
  4023da:	4b32      	ldr	r3, [pc, #200]	; (4024a4 <board_init+0x160>)
  4023dc:	4798      	blx	r3
		sendDebugString("WATCHDOG INITIALIZATION - FINISHED\n");
  4023de:	4832      	ldr	r0, [pc, #200]	; (4024a8 <board_init+0x164>)
  4023e0:	47a8      	blx	r5
		/* ######################################
	   ######################################
					Enable IRQ
	   ######################################
	   ###################################### */
		sendDebugString("GLOBAL IRQ INITIALIZATION - STARTED\n");
  4023e2:	4832      	ldr	r0, [pc, #200]	; (4024ac <board_init+0x168>)
  4023e4:	47a8      	blx	r5
		cpu_irq_enable();
  4023e6:	f04f 0901 	mov.w	r9, #1
  4023ea:	4b31      	ldr	r3, [pc, #196]	; (4024b0 <board_init+0x16c>)
  4023ec:	f883 9000 	strb.w	r9, [r3]
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
  4023f0:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
  4023f4:	b662      	cpsie	i
		sendDebugString("GLOBAL IRQ INITIALIZATION - FINISHED\n");
  4023f6:	482f      	ldr	r0, [pc, #188]	; (4024b4 <board_init+0x170>)
  4023f8:	47a8      	blx	r5
	/* ######################################
	   ######################################
                  Setup Switches
	   ######################################
	   ###################################### */
		pmc_enable_periph_clk(ID_PIOA);
  4023fa:	200a      	movs	r0, #10
  4023fc:	47b8      	blx	r7
		pio_set_input(PIOA,PIOA_BUTTONS,PIO_PULLUP|PIO_DEBOUNCE);
  4023fe:	4e2e      	ldr	r6, [pc, #184]	; (4024b8 <board_init+0x174>)
  402400:	2209      	movs	r2, #9
  402402:	4631      	mov	r1, r6
  402404:	4658      	mov	r0, fp
  402406:	4b2d      	ldr	r3, [pc, #180]	; (4024bc <board_init+0x178>)
  402408:	4798      	blx	r3
		pio_set_debounce_filter(PIOA,PIOA_BUTTONS,100);
  40240a:	2264      	movs	r2, #100	; 0x64
  40240c:	4631      	mov	r1, r6
  40240e:	4658      	mov	r0, fp
  402410:	4b2b      	ldr	r3, [pc, #172]	; (4024c0 <board_init+0x17c>)
  402412:	4798      	blx	r3
	   ######################################
                  Setup Interrupts
	   ######################################
	   ###################################### */
	
		sendDebugString("PERIPHERAL IRQ INITIALIZATION - STARTED\n");
  402414:	482b      	ldr	r0, [pc, #172]	; (4024c4 <board_init+0x180>)
  402416:	47a8      	blx	r5
		//NVIC_ClearPendingIRQ(ISI_IRQn);
		//NVIC_SetPriority(ISI_IRQn,7);
		//NVIC_EnableIRQ(ISI_IRQn);
		
		//UART4
		uart_enable_interrupt(UART1,UART_IER_RXRDY);
  402418:	4649      	mov	r1, r9
  40241a:	4620      	mov	r0, r4
  40241c:	4b2a      	ldr	r3, [pc, #168]	; (4024c8 <board_init+0x184>)
  40241e:	4798      	blx	r3

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  402420:	4c2a      	ldr	r4, [pc, #168]	; (4024cc <board_init+0x188>)
  402422:	f44f 7380 	mov.w	r3, #256	; 0x100
  402426:	f8c4 3180 	str.w	r3, [r4, #384]	; 0x180
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHPR[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  40242a:	f04f 08c0 	mov.w	r8, #192	; 0xc0
  40242e:	f884 8308 	strb.w	r8, [r4, #776]	; 0x308
    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
/*  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));  enable interrupt */
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  402432:	6023      	str	r3, [r4, #0]
		NVIC_ClearPendingIRQ(UART1_IRQn);
		NVIC_SetPriority(UART1_IRQn,6);
		NVIC_EnableIRQ(UART1_IRQn);
		sendDebugString("PERIPHERAL IRQ INITIALIZATION - FINISHED\n");
  402434:	4826      	ldr	r0, [pc, #152]	; (4024d0 <board_init+0x18c>)
  402436:	47a8      	blx	r5

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
{
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
  402438:	f44f 6580 	mov.w	r5, #1024	; 0x400
  40243c:	f8c4 5080 	str.w	r5, [r4, #128]	; 0x80

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  402440:	f8c4 5180 	str.w	r5, [r4, #384]	; 0x180
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHPR[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  402444:	f884 830a 	strb.w	r8, [r4, #778]	; 0x30a

		NVIC_DisableIRQ(PIOA_IRQn);
		NVIC_ClearPendingIRQ(PIOA_IRQn);
		NVIC_SetPriority(PIOA_IRQn, 6);
		pio_enable_interrupt(PIOA,PIOA_BUTTONS);
  402448:	4631      	mov	r1, r6
  40244a:	4658      	mov	r0, fp
  40244c:	4b21      	ldr	r3, [pc, #132]	; (4024d4 <board_init+0x190>)
  40244e:	4798      	blx	r3
		pio_configure_interrupt(PIOA,PIOA_BUTTONS, PIO_IT_FALL_EDGE);
  402450:	2250      	movs	r2, #80	; 0x50
  402452:	4631      	mov	r1, r6
  402454:	4658      	mov	r0, fp
  402456:	4b20      	ldr	r3, [pc, #128]	; (4024d8 <board_init+0x194>)
  402458:	4798      	blx	r3
    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
/*  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));  enable interrupt */
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  40245a:	6025      	str	r5, [r4, #0]
		NVIC_EnableIRQ(PIOA_IRQn);
		
		 
}
  40245c:	b007      	add	sp, #28
  40245e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402462:	bf00      	nop
  402464:	400e1810 	.word	0x400e1810
  402468:	00400215 	.word	0x00400215
  40246c:	00401ee9 	.word	0x00401ee9
  402470:	00402f70 	.word	0x00402f70
  402474:	00402285 	.word	0x00402285
  402478:	400e0a00 	.word	0x400e0a00
  40247c:	004022d9 	.word	0x004022d9
  402480:	00402319 	.word	0x00402319
  402484:	00402309 	.word	0x00402309
  402488:	00402311 	.word	0x00402311
  40248c:	0040232d 	.word	0x0040232d
  402490:	00402025 	.word	0x00402025
  402494:	00402f7c 	.word	0x00402f7c
  402498:	00402709 	.word	0x00402709
  40249c:	00402fe0 	.word	0x00402fe0
  4024a0:	400e1850 	.word	0x400e1850
  4024a4:	00400241 	.word	0x00400241
  4024a8:	00403004 	.word	0x00403004
  4024ac:	00403028 	.word	0x00403028
  4024b0:	20400004 	.word	0x20400004
  4024b4:	00403050 	.word	0x00403050
  4024b8:	01dff800 	.word	0x01dff800
  4024bc:	004020b9 	.word	0x004020b9
  4024c0:	00402001 	.word	0x00402001
  4024c4:	00403078 	.word	0x00403078
  4024c8:	00402321 	.word	0x00402321
  4024cc:	e000e100 	.word	0xe000e100
  4024d0:	004030a4 	.word	0x004030a4
  4024d4:	0040214d 	.word	0x0040214d
  4024d8:	00402119 	.word	0x00402119
  4024dc:	400e0e00 	.word	0x400e0e00
  4024e0:	400e1400 	.word	0x400e1400
  4024e4:	004020f1 	.word	0x004020f1

004024e8 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  4024e8:	e7fe      	b.n	4024e8 <Dummy_Handler>
  4024ea:	bf00      	nop

004024ec <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
  4024ec:	b508      	push	{r3, lr}

        /* Initialize the relocate segment */
        pSrc = &_etext;
        pDest = &_srelocate;

        if (pSrc != pDest) {
  4024ee:	4b19      	ldr	r3, [pc, #100]	; (402554 <Reset_Handler+0x68>)
  4024f0:	4a19      	ldr	r2, [pc, #100]	; (402558 <Reset_Handler+0x6c>)
  4024f2:	429a      	cmp	r2, r3
  4024f4:	d003      	beq.n	4024fe <Reset_Handler+0x12>
                for (; pDest < &_erelocate;) {
  4024f6:	4b19      	ldr	r3, [pc, #100]	; (40255c <Reset_Handler+0x70>)
  4024f8:	4a16      	ldr	r2, [pc, #88]	; (402554 <Reset_Handler+0x68>)
  4024fa:	429a      	cmp	r2, r3
  4024fc:	d304      	bcc.n	402508 <Reset_Handler+0x1c>
                        *pDest++ = *pSrc++;
                }
        }

        /* Clear the zero segment */
        for (pDest = &_szero; pDest < &_ezero;) {
  4024fe:	4b18      	ldr	r3, [pc, #96]	; (402560 <Reset_Handler+0x74>)
  402500:	4a18      	ldr	r2, [pc, #96]	; (402564 <Reset_Handler+0x78>)
  402502:	429a      	cmp	r2, r3
  402504:	d30f      	bcc.n	402526 <Reset_Handler+0x3a>
  402506:	e01a      	b.n	40253e <Reset_Handler+0x52>
  402508:	4912      	ldr	r1, [pc, #72]	; (402554 <Reset_Handler+0x68>)
  40250a:	4b17      	ldr	r3, [pc, #92]	; (402568 <Reset_Handler+0x7c>)
  40250c:	1a5b      	subs	r3, r3, r1
  40250e:	f023 0303 	bic.w	r3, r3, #3
  402512:	3304      	adds	r3, #4
  402514:	4a10      	ldr	r2, [pc, #64]	; (402558 <Reset_Handler+0x6c>)
  402516:	4413      	add	r3, r2
        pSrc = &_etext;
        pDest = &_srelocate;

        if (pSrc != pDest) {
                for (; pDest < &_erelocate;) {
                        *pDest++ = *pSrc++;
  402518:	f852 0b04 	ldr.w	r0, [r2], #4
  40251c:	f841 0b04 	str.w	r0, [r1], #4
        /* Initialize the relocate segment */
        pSrc = &_etext;
        pDest = &_srelocate;

        if (pSrc != pDest) {
                for (; pDest < &_erelocate;) {
  402520:	429a      	cmp	r2, r3
  402522:	d1f9      	bne.n	402518 <Reset_Handler+0x2c>
  402524:	e7eb      	b.n	4024fe <Reset_Handler+0x12>
  402526:	4b11      	ldr	r3, [pc, #68]	; (40256c <Reset_Handler+0x80>)
  402528:	4a11      	ldr	r2, [pc, #68]	; (402570 <Reset_Handler+0x84>)
  40252a:	1ad2      	subs	r2, r2, r3
  40252c:	f022 0203 	bic.w	r2, r2, #3
  402530:	441a      	add	r2, r3
                        *pDest++ = *pSrc++;
                }
        }

        /* Clear the zero segment */
        for (pDest = &_szero; pDest < &_ezero;) {
  402532:	3b04      	subs	r3, #4
                *pDest++ = 0;
  402534:	2100      	movs	r1, #0
  402536:	f843 1b04 	str.w	r1, [r3], #4
                        *pDest++ = *pSrc++;
                }
        }

        /* Clear the zero segment */
        for (pDest = &_szero; pDest < &_ezero;) {
  40253a:	4293      	cmp	r3, r2
  40253c:	d1fb      	bne.n	402536 <Reset_Handler+0x4a>
                *pDest++ = 0;
        }

        /* Set the vector table base address */
        pSrc = (uint32_t *) & _sfixed;
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  40253e:	4a0d      	ldr	r2, [pc, #52]	; (402574 <Reset_Handler+0x88>)
  402540:	4b0d      	ldr	r3, [pc, #52]	; (402578 <Reset_Handler+0x8c>)
  402542:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  402546:	6093      	str	r3, [r2, #8]

        /* Initialize the C library */
        __libc_init_array();
  402548:	4b0c      	ldr	r3, [pc, #48]	; (40257c <Reset_Handler+0x90>)
  40254a:	4798      	blx	r3

        /* Branch to main function */
        main();
  40254c:	4b0c      	ldr	r3, [pc, #48]	; (402580 <Reset_Handler+0x94>)
  40254e:	4798      	blx	r3
  402550:	e7fe      	b.n	402550 <Reset_Handler+0x64>
  402552:	bf00      	nop
  402554:	20400000 	.word	0x20400000
  402558:	004031d4 	.word	0x004031d4
  40255c:	20400438 	.word	0x20400438
  402560:	2040bfb8 	.word	0x2040bfb8
  402564:	20400438 	.word	0x20400438
  402568:	20400437 	.word	0x20400437
  40256c:	2040043c 	.word	0x2040043c
  402570:	2040bfbb 	.word	0x2040bfbb
  402574:	e000ed00 	.word	0xe000ed00
  402578:	00400000 	.word	0x00400000
  40257c:	00402b5d 	.word	0x00402b5d
  402580:	00402a99 	.word	0x00402a99

00402584 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate( void )
{
  /* Determine clock frequency according to clock register values */
  switch (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk)
  402584:	4b3c      	ldr	r3, [pc, #240]	; (402678 <SystemCoreClockUpdate+0xf4>)
  402586:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  402588:	f003 0303 	and.w	r3, r3, #3
  40258c:	2b01      	cmp	r3, #1
  40258e:	d00f      	beq.n	4025b0 <SystemCoreClockUpdate+0x2c>
  402590:	b113      	cbz	r3, 402598 <SystemCoreClockUpdate+0x14>
  402592:	2b02      	cmp	r3, #2
  402594:	d029      	beq.n	4025ea <SystemCoreClockUpdate+0x66>
  402596:	e057      	b.n	402648 <SystemCoreClockUpdate+0xc4>
  {
    case PMC_MCKR_CSS_SLOW_CLK: /* Slow clock */
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  402598:	4b38      	ldr	r3, [pc, #224]	; (40267c <SystemCoreClockUpdate+0xf8>)
  40259a:	695b      	ldr	r3, [r3, #20]
  40259c:	f013 0f80 	tst.w	r3, #128	; 0x80
      {
        SystemCoreClock = CHIP_FREQ_XTAL_32K;
  4025a0:	bf14      	ite	ne
  4025a2:	f44f 4200 	movne.w	r2, #32768	; 0x8000
      }
      else
      {
        SystemCoreClock = CHIP_FREQ_SLCK_RC;
  4025a6:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  4025aa:	4b35      	ldr	r3, [pc, #212]	; (402680 <SystemCoreClockUpdate+0xfc>)
  4025ac:	601a      	str	r2, [r3, #0]
  4025ae:	e04b      	b.n	402648 <SystemCoreClockUpdate+0xc4>
      }
    break;

    case PMC_MCKR_CSS_MAIN_CLK: /* Main clock */
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  4025b0:	4b31      	ldr	r3, [pc, #196]	; (402678 <SystemCoreClockUpdate+0xf4>)
  4025b2:	6a1b      	ldr	r3, [r3, #32]
  4025b4:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4025b8:	d003      	beq.n	4025c2 <SystemCoreClockUpdate+0x3e>
      {
        SystemCoreClock = CHIP_FREQ_XTAL_12M;
  4025ba:	4a32      	ldr	r2, [pc, #200]	; (402684 <SystemCoreClockUpdate+0x100>)
  4025bc:	4b30      	ldr	r3, [pc, #192]	; (402680 <SystemCoreClockUpdate+0xfc>)
  4025be:	601a      	str	r2, [r3, #0]
  4025c0:	e042      	b.n	402648 <SystemCoreClockUpdate+0xc4>
      }
      else
      {
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4025c2:	4a31      	ldr	r2, [pc, #196]	; (402688 <SystemCoreClockUpdate+0x104>)
  4025c4:	4b2e      	ldr	r3, [pc, #184]	; (402680 <SystemCoreClockUpdate+0xfc>)
  4025c6:	601a      	str	r2, [r3, #0]

        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  4025c8:	4b2b      	ldr	r3, [pc, #172]	; (402678 <SystemCoreClockUpdate+0xf4>)
  4025ca:	6a1b      	ldr	r3, [r3, #32]
  4025cc:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4025d0:	2b10      	cmp	r3, #16
  4025d2:	d002      	beq.n	4025da <SystemCoreClockUpdate+0x56>
  4025d4:	2b20      	cmp	r3, #32
  4025d6:	d004      	beq.n	4025e2 <SystemCoreClockUpdate+0x5e>
  4025d8:	e036      	b.n	402648 <SystemCoreClockUpdate+0xc4>
        {
          case CKGR_MOR_MOSCRCF_4_MHz:
          break;

          case CKGR_MOR_MOSCRCF_8_MHz:
            SystemCoreClock *= 2U;
  4025da:	4a2c      	ldr	r2, [pc, #176]	; (40268c <SystemCoreClockUpdate+0x108>)
  4025dc:	4b28      	ldr	r3, [pc, #160]	; (402680 <SystemCoreClockUpdate+0xfc>)
  4025de:	601a      	str	r2, [r3, #0]
          break;
  4025e0:	e032      	b.n	402648 <SystemCoreClockUpdate+0xc4>

          case CKGR_MOR_MOSCRCF_12_MHz:
            SystemCoreClock *= 3U;
  4025e2:	4a28      	ldr	r2, [pc, #160]	; (402684 <SystemCoreClockUpdate+0x100>)
  4025e4:	4b26      	ldr	r3, [pc, #152]	; (402680 <SystemCoreClockUpdate+0xfc>)
  4025e6:	601a      	str	r2, [r3, #0]
          break;
  4025e8:	e02e      	b.n	402648 <SystemCoreClockUpdate+0xc4>
        }
      }
    break;

    case PMC_MCKR_CSS_PLLA_CLK:	/* PLLA clock */
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  4025ea:	4b23      	ldr	r3, [pc, #140]	; (402678 <SystemCoreClockUpdate+0xf4>)
  4025ec:	6a1b      	ldr	r3, [r3, #32]
  4025ee:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4025f2:	d003      	beq.n	4025fc <SystemCoreClockUpdate+0x78>
      {
        SystemCoreClock = CHIP_FREQ_XTAL_12M ;
  4025f4:	4a23      	ldr	r2, [pc, #140]	; (402684 <SystemCoreClockUpdate+0x100>)
  4025f6:	4b22      	ldr	r3, [pc, #136]	; (402680 <SystemCoreClockUpdate+0xfc>)
  4025f8:	601a      	str	r2, [r3, #0]
  4025fa:	e012      	b.n	402622 <SystemCoreClockUpdate+0x9e>
      }
      else
      {
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4025fc:	4a22      	ldr	r2, [pc, #136]	; (402688 <SystemCoreClockUpdate+0x104>)
  4025fe:	4b20      	ldr	r3, [pc, #128]	; (402680 <SystemCoreClockUpdate+0xfc>)
  402600:	601a      	str	r2, [r3, #0]

        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  402602:	4b1d      	ldr	r3, [pc, #116]	; (402678 <SystemCoreClockUpdate+0xf4>)
  402604:	6a1b      	ldr	r3, [r3, #32]
  402606:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40260a:	2b10      	cmp	r3, #16
  40260c:	d002      	beq.n	402614 <SystemCoreClockUpdate+0x90>
  40260e:	2b20      	cmp	r3, #32
  402610:	d004      	beq.n	40261c <SystemCoreClockUpdate+0x98>
  402612:	e006      	b.n	402622 <SystemCoreClockUpdate+0x9e>
        {
          case CKGR_MOR_MOSCRCF_4_MHz:
          break;

          case CKGR_MOR_MOSCRCF_8_MHz:
            SystemCoreClock *= 2U;
  402614:	4a1d      	ldr	r2, [pc, #116]	; (40268c <SystemCoreClockUpdate+0x108>)
  402616:	4b1a      	ldr	r3, [pc, #104]	; (402680 <SystemCoreClockUpdate+0xfc>)
  402618:	601a      	str	r2, [r3, #0]
          break;
  40261a:	e002      	b.n	402622 <SystemCoreClockUpdate+0x9e>

          case CKGR_MOR_MOSCRCF_12_MHz:
            SystemCoreClock *= 3U;
  40261c:	4a19      	ldr	r2, [pc, #100]	; (402684 <SystemCoreClockUpdate+0x100>)
  40261e:	4b18      	ldr	r3, [pc, #96]	; (402680 <SystemCoreClockUpdate+0xfc>)
  402620:	601a      	str	r2, [r3, #0]
          default:
          break;
        }
      }

      if ( (uint32_t) (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK )
  402622:	4b15      	ldr	r3, [pc, #84]	; (402678 <SystemCoreClockUpdate+0xf4>)
  402624:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  402626:	f003 0303 	and.w	r3, r3, #3
  40262a:	2b02      	cmp	r3, #2
  40262c:	d10c      	bne.n	402648 <SystemCoreClockUpdate+0xc4>
      {
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  40262e:	4a12      	ldr	r2, [pc, #72]	; (402678 <SystemCoreClockUpdate+0xf4>)
  402630:	6a93      	ldr	r3, [r2, #40]	; 0x28
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  402632:	6a92      	ldr	r2, [r2, #40]	; 0x28
  402634:	4812      	ldr	r0, [pc, #72]	; (402680 <SystemCoreClockUpdate+0xfc>)
  402636:	f3c3 410a 	ubfx	r1, r3, #16, #11
  40263a:	6803      	ldr	r3, [r0, #0]
  40263c:	fb01 3303 	mla	r3, r1, r3, r3
  402640:	b2d2      	uxtb	r2, r2
  402642:	fbb3 f3f2 	udiv	r3, r3, r2
  402646:	6003      	str	r3, [r0, #0]

    default:
    break;
  }

  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  402648:	4b0b      	ldr	r3, [pc, #44]	; (402678 <SystemCoreClockUpdate+0xf4>)
  40264a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40264c:	f003 0370 	and.w	r3, r3, #112	; 0x70
  402650:	2b70      	cmp	r3, #112	; 0x70
  402652:	d107      	bne.n	402664 <SystemCoreClockUpdate+0xe0>
  {
    SystemCoreClock /= 3U;
  402654:	4a0a      	ldr	r2, [pc, #40]	; (402680 <SystemCoreClockUpdate+0xfc>)
  402656:	6813      	ldr	r3, [r2, #0]
  402658:	490d      	ldr	r1, [pc, #52]	; (402690 <SystemCoreClockUpdate+0x10c>)
  40265a:	fba1 1303 	umull	r1, r3, r1, r3
  40265e:	085b      	lsrs	r3, r3, #1
  402660:	6013      	str	r3, [r2, #0]
  402662:	4770      	bx	lr
  }
  else
  {
    SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  402664:	4b04      	ldr	r3, [pc, #16]	; (402678 <SystemCoreClockUpdate+0xf4>)
  402666:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  402668:	4905      	ldr	r1, [pc, #20]	; (402680 <SystemCoreClockUpdate+0xfc>)
  40266a:	f3c3 1202 	ubfx	r2, r3, #4, #3
  40266e:	680b      	ldr	r3, [r1, #0]
  402670:	40d3      	lsrs	r3, r2
  402672:	600b      	str	r3, [r1, #0]
  402674:	4770      	bx	lr
  402676:	bf00      	nop
  402678:	400e0600 	.word	0x400e0600
  40267c:	400e1810 	.word	0x400e1810
  402680:	20400008 	.word	0x20400008
  402684:	00b71b00 	.word	0x00b71b00
  402688:	003d0900 	.word	0x003d0900
  40268c:	007a1200 	.word	0x007a1200
  402690:	aaaaaaab 	.word	0xaaaaaaab

00402694 <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
  if ( ul_clk < CHIP_FREQ_FWS_0 )
  402694:	4b12      	ldr	r3, [pc, #72]	; (4026e0 <system_init_flash+0x4c>)
  402696:	4298      	cmp	r0, r3
  402698:	d804      	bhi.n	4026a4 <system_init_flash+0x10>
  {
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  40269a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  40269e:	4b11      	ldr	r3, [pc, #68]	; (4026e4 <system_init_flash+0x50>)
  4026a0:	601a      	str	r2, [r3, #0]
  4026a2:	4770      	bx	lr
  }
  else
  {
    if (ul_clk < CHIP_FREQ_FWS_1)
  4026a4:	4b10      	ldr	r3, [pc, #64]	; (4026e8 <system_init_flash+0x54>)
  4026a6:	4298      	cmp	r0, r3
  4026a8:	d803      	bhi.n	4026b2 <system_init_flash+0x1e>
    {
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  4026aa:	4a10      	ldr	r2, [pc, #64]	; (4026ec <system_init_flash+0x58>)
  4026ac:	4b0d      	ldr	r3, [pc, #52]	; (4026e4 <system_init_flash+0x50>)
  4026ae:	601a      	str	r2, [r3, #0]
  4026b0:	4770      	bx	lr
    }
    else
    {
      if (ul_clk < CHIP_FREQ_FWS_2)
  4026b2:	4b0f      	ldr	r3, [pc, #60]	; (4026f0 <system_init_flash+0x5c>)
  4026b4:	4298      	cmp	r0, r3
  4026b6:	d803      	bhi.n	4026c0 <system_init_flash+0x2c>
      {
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  4026b8:	4a0e      	ldr	r2, [pc, #56]	; (4026f4 <system_init_flash+0x60>)
  4026ba:	4b0a      	ldr	r3, [pc, #40]	; (4026e4 <system_init_flash+0x50>)
  4026bc:	601a      	str	r2, [r3, #0]
  4026be:	4770      	bx	lr
      }
      else
      {
        if ( ul_clk < CHIP_FREQ_FWS_3 )
  4026c0:	4b0d      	ldr	r3, [pc, #52]	; (4026f8 <system_init_flash+0x64>)
  4026c2:	4298      	cmp	r0, r3
  4026c4:	d803      	bhi.n	4026ce <system_init_flash+0x3a>
        {
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  4026c6:	4a0d      	ldr	r2, [pc, #52]	; (4026fc <system_init_flash+0x68>)
  4026c8:	4b06      	ldr	r3, [pc, #24]	; (4026e4 <system_init_flash+0x50>)
  4026ca:	601a      	str	r2, [r3, #0]
  4026cc:	4770      	bx	lr
        }
        else
        {
          if ( ul_clk < CHIP_FREQ_FWS_4 )
  4026ce:	4b0c      	ldr	r3, [pc, #48]	; (402700 <system_init_flash+0x6c>)
  4026d0:	4298      	cmp	r0, r3
          {
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  4026d2:	bf94      	ite	ls
  4026d4:	f04f 2204 	movls.w	r2, #67109888	; 0x4000400
          }
          else
          {
            EFC->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  4026d8:	4a0a      	ldrhi	r2, [pc, #40]	; (402704 <system_init_flash+0x70>)
  4026da:	4b02      	ldr	r3, [pc, #8]	; (4026e4 <system_init_flash+0x50>)
  4026dc:	601a      	str	r2, [r3, #0]
  4026de:	4770      	bx	lr
  4026e0:	01312cff 	.word	0x01312cff
  4026e4:	400e0c00 	.word	0x400e0c00
  4026e8:	026259ff 	.word	0x026259ff
  4026ec:	04000100 	.word	0x04000100
  4026f0:	039386ff 	.word	0x039386ff
  4026f4:	04000200 	.word	0x04000200
  4026f8:	04c4b3ff 	.word	0x04c4b3ff
  4026fc:	04000300 	.word	0x04000300
  402700:	05f5e0ff 	.word	0x05f5e0ff
  402704:	04000500 	.word	0x04000500

00402708 <sendDebugString>:
  402708:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  40270c:	4680      	mov	r8, r0
  40270e:	1e47      	subs	r7, r0, #1
  402710:	2600      	movs	r6, #0
  402712:	f8df 9034 	ldr.w	r9, [pc, #52]	; 402748 <sendDebugString+0x40>
  402716:	4d0a      	ldr	r5, [pc, #40]	; (402740 <sendDebugString+0x38>)
  402718:	4c0a      	ldr	r4, [pc, #40]	; (402744 <sendDebugString+0x3c>)
  40271a:	f8df a030 	ldr.w	sl, [pc, #48]	; 40274c <sendDebugString+0x44>
  40271e:	e008      	b.n	402732 <sendDebugString+0x2a>
  402720:	4620      	mov	r0, r4
  402722:	47a8      	blx	r5
  402724:	2800      	cmp	r0, #0
  402726:	d0fb      	beq.n	402720 <sendDebugString+0x18>
  402728:	f817 1f01 	ldrb.w	r1, [r7, #1]!
  40272c:	4620      	mov	r0, r4
  40272e:	47d0      	blx	sl
  402730:	3601      	adds	r6, #1
  402732:	4640      	mov	r0, r8
  402734:	47c8      	blx	r9
  402736:	42b0      	cmp	r0, r6
  402738:	d8f2      	bhi.n	402720 <sendDebugString+0x18>
  40273a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40273e:	bf00      	nop
  402740:	00402325 	.word	0x00402325
  402744:	400e0a00 	.word	0x400e0a00
  402748:	00402d81 	.word	0x00402d81
  40274c:	00402331 	.word	0x00402331

00402750 <Task1>:
	return 0;
	/* Insert application code here, after the board has been initialized. */
}


void Task1 (void* pvParameters) {
  402750:	b538      	push	{r3, r4, r5, lr}
	int tg = 1;
	
	pio_clear(LED1);
  402752:	4d08      	ldr	r5, [pc, #32]	; (402774 <Task1+0x24>)
  402754:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  402758:	4628      	mov	r0, r5
  40275a:	4c07      	ldr	r4, [pc, #28]	; (402778 <Task1+0x28>)
  40275c:	47a0      	blx	r4
	pio_clear(LED2);
  40275e:	f04f 6180 	mov.w	r1, #67108864	; 0x4000000
  402762:	4628      	mov	r0, r5
  402764:	47a0      	blx	r4
			tg = !tg;
			//sendDebugString("Fresh\n");
		}
		
		
		vTaskDelay(1000);
  402766:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
  40276a:	4c04      	ldr	r4, [pc, #16]	; (40277c <Task1+0x2c>)
  40276c:	4628      	mov	r0, r5
  40276e:	47a0      	blx	r4
  402770:	e7fc      	b.n	40276c <Task1+0x1c>
  402772:	bf00      	nop
  402774:	400e1400 	.word	0x400e1400
  402778:	00402021 	.word	0x00402021
  40277c:	004014f5 	.word	0x004014f5

00402780 <ButtonTask>:
	}

}

void ButtonTask(void* pvParameters){
  402780:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	
	int tg1 = 1;
	int tg2 = 1;
	int tgd = 1;
	
	PIOAsem = xSemaphoreCreateBinary();
  402784:	2203      	movs	r2, #3
  402786:	2100      	movs	r1, #0
  402788:	2001      	movs	r0, #1
  40278a:	4ba6      	ldr	r3, [pc, #664]	; (402a24 <ButtonTask+0x2a4>)
  40278c:	4798      	blx	r3
  40278e:	4ba6      	ldr	r3, [pc, #664]	; (402a28 <ButtonTask+0x2a8>)
  402790:	6018      	str	r0, [r3, #0]

void ButtonTask(void* pvParameters){
	
	int tg1 = 1;
	int tg2 = 1;
	int tgd = 1;
  402792:	f04f 0901 	mov.w	r9, #1
}

void ButtonTask(void* pvParameters){
	
	int tg1 = 1;
	int tg2 = 1;
  402796:	46c8      	mov	r8, r9

}

void ButtonTask(void* pvParameters){
	
	int tg1 = 1;
  402798:	464f      	mov	r7, r9
	
	PIOAsem = xSemaphoreCreateBinary();
	
	for(;;){
		
		if( PIOAsem !=NULL){
  40279a:	461d      	mov	r5, r3
			
			if( xSemaphoreTake(PIOAsem,0xFFFF) == pdTRUE){
  40279c:	4ca3      	ldr	r4, [pc, #652]	; (402a2c <ButtonTask+0x2ac>)
					if(tg1){
						pio_set(LED1);
						tg1 = !tg1;
					}
					else {
						pio_clear(LED1);
  40279e:	4ea4      	ldr	r6, [pc, #656]	; (402a30 <ButtonTask+0x2b0>)
	
	PIOAsem = xSemaphoreCreateBinary();
	
	for(;;){
		
		if( PIOAsem !=NULL){
  4027a0:	6828      	ldr	r0, [r5, #0]
  4027a2:	2800      	cmp	r0, #0
  4027a4:	d0fd      	beq.n	4027a2 <ButtonTask+0x22>
			
			if( xSemaphoreTake(PIOAsem,0xFFFF) == pdTRUE){
  4027a6:	2300      	movs	r3, #0
  4027a8:	f64f 72ff 	movw	r2, #65535	; 0xffff
  4027ac:	4619      	mov	r1, r3
  4027ae:	47a0      	blx	r4
  4027b0:	2801      	cmp	r0, #1
  4027b2:	d1f5      	bne.n	4027a0 <ButtonTask+0x20>
				
				switch(ButtonStatus){
  4027b4:	4b9f      	ldr	r3, [pc, #636]	; (402a34 <ButtonTask+0x2b4>)
  4027b6:	681b      	ldr	r3, [r3, #0]
  4027b8:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
  4027bc:	d068      	beq.n	402890 <ButtonTask+0x110>
  4027be:	d812      	bhi.n	4027e6 <ButtonTask+0x66>
  4027c0:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
  4027c4:	f000 8088 	beq.w	4028d8 <ButtonTask+0x158>
  4027c8:	d806      	bhi.n	4027d8 <ButtonTask+0x58>
  4027ca:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
  4027ce:	d025      	beq.n	40281c <ButtonTask+0x9c>
  4027d0:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
  4027d4:	d038      	beq.n	402848 <ButtonTask+0xc8>
  4027d6:	e111      	b.n	4029fc <ButtonTask+0x27c>
  4027d8:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
  4027dc:	d06a      	beq.n	4028b4 <ButtonTask+0x134>
  4027de:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
  4027e2:	d043      	beq.n	40286c <ButtonTask+0xec>
  4027e4:	e10a      	b.n	4029fc <ButtonTask+0x27c>
  4027e6:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
  4027ea:	f000 80c5 	beq.w	402978 <ButtonTask+0x1f8>
  4027ee:	d808      	bhi.n	402802 <ButtonTask+0x82>
  4027f0:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
  4027f4:	f000 8082 	beq.w	4028fc <ButtonTask+0x17c>
  4027f8:	f5b3 2f00 	cmp.w	r3, #524288	; 0x80000
  4027fc:	f000 80d2 	beq.w	4029a4 <ButtonTask+0x224>
  402800:	e0fc      	b.n	4029fc <ButtonTask+0x27c>
  402802:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
  402806:	f000 80a1 	beq.w	40294c <ButtonTask+0x1cc>
  40280a:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
  40280e:	f000 80df 	beq.w	4029d0 <ButtonTask+0x250>
  402812:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
  402816:	f040 80f1 	bne.w	4029fc <ButtonTask+0x27c>
  40281a:	e081      	b.n	402920 <ButtonTask+0x1a0>
					
					case(Push1) :
					sendDebugString("Push Switch 1\n");
  40281c:	4886      	ldr	r0, [pc, #536]	; (402a38 <ButtonTask+0x2b8>)
  40281e:	4b87      	ldr	r3, [pc, #540]	; (402a3c <ButtonTask+0x2bc>)
  402820:	4798      	blx	r3
					if(tg2){
  402822:	f1b8 0f00 	cmp.w	r8, #0
  402826:	d007      	beq.n	402838 <ButtonTask+0xb8>
						pio_set(LED2);
  402828:	f04f 6180 	mov.w	r1, #67108864	; 0x4000000
  40282c:	4630      	mov	r0, r6
  40282e:	4b84      	ldr	r3, [pc, #528]	; (402a40 <ButtonTask+0x2c0>)
  402830:	4798      	blx	r3
						tg2 = !tg2;
  402832:	f04f 0800 	mov.w	r8, #0
  402836:	e7b3      	b.n	4027a0 <ButtonTask+0x20>
					}
					else {
						pio_clear(LED2);
  402838:	f04f 6180 	mov.w	r1, #67108864	; 0x4000000
  40283c:	4630      	mov	r0, r6
  40283e:	4b81      	ldr	r3, [pc, #516]	; (402a44 <ButtonTask+0x2c4>)
  402840:	4798      	blx	r3
						tg2 = !tg2;
  402842:	f04f 0801 	mov.w	r8, #1
  402846:	e7ab      	b.n	4027a0 <ButtonTask+0x20>
					}
					break;
					
					case(Push2) :
					sendDebugString("Push Switch 2\n");
  402848:	487f      	ldr	r0, [pc, #508]	; (402a48 <ButtonTask+0x2c8>)
  40284a:	4b7c      	ldr	r3, [pc, #496]	; (402a3c <ButtonTask+0x2bc>)
  40284c:	4798      	blx	r3
					if(tg1){
  40284e:	b137      	cbz	r7, 40285e <ButtonTask+0xde>
						pio_set(LED1);
  402850:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  402854:	4630      	mov	r0, r6
  402856:	4b7a      	ldr	r3, [pc, #488]	; (402a40 <ButtonTask+0x2c0>)
  402858:	4798      	blx	r3
						tg1 = !tg1;
  40285a:	2700      	movs	r7, #0
  40285c:	e7a0      	b.n	4027a0 <ButtonTask+0x20>
					}
					else {
						pio_clear(LED1);
  40285e:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  402862:	4630      	mov	r0, r6
  402864:	4b77      	ldr	r3, [pc, #476]	; (402a44 <ButtonTask+0x2c4>)
  402866:	4798      	blx	r3
						tg1 = !tg1;
  402868:	2701      	movs	r7, #1
  40286a:	e799      	b.n	4027a0 <ButtonTask+0x20>
					}
					break;
					
					case(SW4Left) :
					sendDebugString("NAV4 Left\n");
  40286c:	4877      	ldr	r0, [pc, #476]	; (402a4c <ButtonTask+0x2cc>)
  40286e:	4b73      	ldr	r3, [pc, #460]	; (402a3c <ButtonTask+0x2bc>)
  402870:	4798      	blx	r3
					if(tg1){
  402872:	b137      	cbz	r7, 402882 <ButtonTask+0x102>
						pio_set(LED1);
  402874:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  402878:	4630      	mov	r0, r6
  40287a:	4b71      	ldr	r3, [pc, #452]	; (402a40 <ButtonTask+0x2c0>)
  40287c:	4798      	blx	r3
						tg1 = !tg1;
  40287e:	2700      	movs	r7, #0
  402880:	e78e      	b.n	4027a0 <ButtonTask+0x20>
					}
					else {
						pio_clear(LED1);
  402882:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  402886:	4630      	mov	r0, r6
  402888:	4b6e      	ldr	r3, [pc, #440]	; (402a44 <ButtonTask+0x2c4>)
  40288a:	4798      	blx	r3
						tg1 = !tg1;
  40288c:	2701      	movs	r7, #1
  40288e:	e787      	b.n	4027a0 <ButtonTask+0x20>
					}
					break;
					
					case(SW4Right) :
					sendDebugString("NAV4 Right\n");
  402890:	486f      	ldr	r0, [pc, #444]	; (402a50 <ButtonTask+0x2d0>)
  402892:	4b6a      	ldr	r3, [pc, #424]	; (402a3c <ButtonTask+0x2bc>)
  402894:	4798      	blx	r3
					if(tg1){
  402896:	b137      	cbz	r7, 4028a6 <ButtonTask+0x126>
						pio_set(LED1);
  402898:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  40289c:	4630      	mov	r0, r6
  40289e:	4b68      	ldr	r3, [pc, #416]	; (402a40 <ButtonTask+0x2c0>)
  4028a0:	4798      	blx	r3
						tg1 = !tg1;
  4028a2:	2700      	movs	r7, #0
  4028a4:	e77c      	b.n	4027a0 <ButtonTask+0x20>
					}
					else {
						pio_clear(LED1);
  4028a6:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  4028aa:	4630      	mov	r0, r6
  4028ac:	4b65      	ldr	r3, [pc, #404]	; (402a44 <ButtonTask+0x2c4>)
  4028ae:	4798      	blx	r3
						tg1 = !tg1;
  4028b0:	2701      	movs	r7, #1
  4028b2:	e775      	b.n	4027a0 <ButtonTask+0x20>
					}
					break;
					
					case(SW4Up) :
					sendDebugString("NAV4 Up\n");
  4028b4:	4867      	ldr	r0, [pc, #412]	; (402a54 <ButtonTask+0x2d4>)
  4028b6:	4b61      	ldr	r3, [pc, #388]	; (402a3c <ButtonTask+0x2bc>)
  4028b8:	4798      	blx	r3
					if(tg1){
  4028ba:	b137      	cbz	r7, 4028ca <ButtonTask+0x14a>
						pio_set(LED1);
  4028bc:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  4028c0:	4630      	mov	r0, r6
  4028c2:	4b5f      	ldr	r3, [pc, #380]	; (402a40 <ButtonTask+0x2c0>)
  4028c4:	4798      	blx	r3
						tg1 = !tg1;
  4028c6:	2700      	movs	r7, #0
  4028c8:	e76a      	b.n	4027a0 <ButtonTask+0x20>
					}
					else {
						pio_clear(LED1);
  4028ca:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  4028ce:	4630      	mov	r0, r6
  4028d0:	4b5c      	ldr	r3, [pc, #368]	; (402a44 <ButtonTask+0x2c4>)
  4028d2:	4798      	blx	r3
						tg1 = !tg1;
  4028d4:	2701      	movs	r7, #1
  4028d6:	e763      	b.n	4027a0 <ButtonTask+0x20>
					}
					break;
					
					case(SW4Down) :
					sendDebugString("NAV4 Down\n");
  4028d8:	485f      	ldr	r0, [pc, #380]	; (402a58 <ButtonTask+0x2d8>)
  4028da:	4b58      	ldr	r3, [pc, #352]	; (402a3c <ButtonTask+0x2bc>)
  4028dc:	4798      	blx	r3
					if(tg1){
  4028de:	b137      	cbz	r7, 4028ee <ButtonTask+0x16e>
						pio_set(LED1);
  4028e0:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  4028e4:	4630      	mov	r0, r6
  4028e6:	4b56      	ldr	r3, [pc, #344]	; (402a40 <ButtonTask+0x2c0>)
  4028e8:	4798      	blx	r3
						tg1 = !tg1;
  4028ea:	2700      	movs	r7, #0
  4028ec:	e758      	b.n	4027a0 <ButtonTask+0x20>
					}
					else {
						pio_clear(LED1);
  4028ee:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  4028f2:	4630      	mov	r0, r6
  4028f4:	4b53      	ldr	r3, [pc, #332]	; (402a44 <ButtonTask+0x2c4>)
  4028f6:	4798      	blx	r3
						tg1 = !tg1;
  4028f8:	2701      	movs	r7, #1
  4028fa:	e751      	b.n	4027a0 <ButtonTask+0x20>
					}
					break;
					
					case(SW4Push) :
					sendDebugString("NAV4 Push\n");
  4028fc:	4857      	ldr	r0, [pc, #348]	; (402a5c <ButtonTask+0x2dc>)
  4028fe:	4b4f      	ldr	r3, [pc, #316]	; (402a3c <ButtonTask+0x2bc>)
  402900:	4798      	blx	r3
					if(tg1){
  402902:	b137      	cbz	r7, 402912 <ButtonTask+0x192>
						pio_set(LED1);
  402904:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  402908:	4630      	mov	r0, r6
  40290a:	4b4d      	ldr	r3, [pc, #308]	; (402a40 <ButtonTask+0x2c0>)
  40290c:	4798      	blx	r3
						tg1 = !tg1;
  40290e:	2700      	movs	r7, #0
  402910:	e746      	b.n	4027a0 <ButtonTask+0x20>
					}
					else {
						pio_clear(LED1);
  402912:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  402916:	4630      	mov	r0, r6
  402918:	4b4a      	ldr	r3, [pc, #296]	; (402a44 <ButtonTask+0x2c4>)
  40291a:	4798      	blx	r3
						tg1 = !tg1;
  40291c:	2701      	movs	r7, #1
  40291e:	e73f      	b.n	4027a0 <ButtonTask+0x20>
					}
					break;
					
					case(SW5Left) :
					sendDebugString("NAV5 Left\n");
  402920:	484f      	ldr	r0, [pc, #316]	; (402a60 <ButtonTask+0x2e0>)
  402922:	4b46      	ldr	r3, [pc, #280]	; (402a3c <ButtonTask+0x2bc>)
  402924:	4798      	blx	r3
					if(tg2){
  402926:	f1b8 0f00 	cmp.w	r8, #0
  40292a:	d007      	beq.n	40293c <ButtonTask+0x1bc>
						pio_set(LED2);
  40292c:	f04f 6180 	mov.w	r1, #67108864	; 0x4000000
  402930:	4630      	mov	r0, r6
  402932:	4b43      	ldr	r3, [pc, #268]	; (402a40 <ButtonTask+0x2c0>)
  402934:	4798      	blx	r3
						tg2 = !tg2;
  402936:	f04f 0800 	mov.w	r8, #0
  40293a:	e731      	b.n	4027a0 <ButtonTask+0x20>
					}
					else {
						pio_clear(LED2);
  40293c:	f04f 6180 	mov.w	r1, #67108864	; 0x4000000
  402940:	4630      	mov	r0, r6
  402942:	4b40      	ldr	r3, [pc, #256]	; (402a44 <ButtonTask+0x2c4>)
  402944:	4798      	blx	r3
						tg2 = !tg2;
  402946:	f04f 0801 	mov.w	r8, #1
  40294a:	e729      	b.n	4027a0 <ButtonTask+0x20>
					}
					break;
					
					case(SW5Right) :
					sendDebugString("NAV5 Right\n");
  40294c:	4845      	ldr	r0, [pc, #276]	; (402a64 <ButtonTask+0x2e4>)
  40294e:	4b3b      	ldr	r3, [pc, #236]	; (402a3c <ButtonTask+0x2bc>)
  402950:	4798      	blx	r3
					if(tg2){
  402952:	f1b8 0f00 	cmp.w	r8, #0
  402956:	d007      	beq.n	402968 <ButtonTask+0x1e8>
						pio_set(LED2);
  402958:	f04f 6180 	mov.w	r1, #67108864	; 0x4000000
  40295c:	4630      	mov	r0, r6
  40295e:	4b38      	ldr	r3, [pc, #224]	; (402a40 <ButtonTask+0x2c0>)
  402960:	4798      	blx	r3
						tg2 = !tg2;
  402962:	f04f 0800 	mov.w	r8, #0
  402966:	e71b      	b.n	4027a0 <ButtonTask+0x20>
					}
					else {
						pio_clear(LED2);
  402968:	f04f 6180 	mov.w	r1, #67108864	; 0x4000000
  40296c:	4630      	mov	r0, r6
  40296e:	4b35      	ldr	r3, [pc, #212]	; (402a44 <ButtonTask+0x2c4>)
  402970:	4798      	blx	r3
						tg2 = !tg2;
  402972:	f04f 0801 	mov.w	r8, #1
  402976:	e713      	b.n	4027a0 <ButtonTask+0x20>
					}
					break;
					
					case(SW5Up) :
					sendDebugString("NAV5 Up\n");
  402978:	483b      	ldr	r0, [pc, #236]	; (402a68 <ButtonTask+0x2e8>)
  40297a:	4b30      	ldr	r3, [pc, #192]	; (402a3c <ButtonTask+0x2bc>)
  40297c:	4798      	blx	r3
					if(tg2){
  40297e:	f1b8 0f00 	cmp.w	r8, #0
  402982:	d007      	beq.n	402994 <ButtonTask+0x214>
						pio_set(LED2);
  402984:	f04f 6180 	mov.w	r1, #67108864	; 0x4000000
  402988:	4630      	mov	r0, r6
  40298a:	4b2d      	ldr	r3, [pc, #180]	; (402a40 <ButtonTask+0x2c0>)
  40298c:	4798      	blx	r3
						tg2 = !tg2;
  40298e:	f04f 0800 	mov.w	r8, #0
  402992:	e705      	b.n	4027a0 <ButtonTask+0x20>
					}
					else {
						pio_clear(LED2);
  402994:	f04f 6180 	mov.w	r1, #67108864	; 0x4000000
  402998:	4630      	mov	r0, r6
  40299a:	4b2a      	ldr	r3, [pc, #168]	; (402a44 <ButtonTask+0x2c4>)
  40299c:	4798      	blx	r3
						tg2 = !tg2;
  40299e:	f04f 0801 	mov.w	r8, #1
  4029a2:	e6fd      	b.n	4027a0 <ButtonTask+0x20>
					}
					break;
					
					case(SW5Down) :
					sendDebugString("NAV5 Down\n");
  4029a4:	4831      	ldr	r0, [pc, #196]	; (402a6c <ButtonTask+0x2ec>)
  4029a6:	4b25      	ldr	r3, [pc, #148]	; (402a3c <ButtonTask+0x2bc>)
  4029a8:	4798      	blx	r3
					if(tg2){
  4029aa:	f1b8 0f00 	cmp.w	r8, #0
  4029ae:	d007      	beq.n	4029c0 <ButtonTask+0x240>
						pio_set(LED2);
  4029b0:	f04f 6180 	mov.w	r1, #67108864	; 0x4000000
  4029b4:	4630      	mov	r0, r6
  4029b6:	4b22      	ldr	r3, [pc, #136]	; (402a40 <ButtonTask+0x2c0>)
  4029b8:	4798      	blx	r3
						tg2 = !tg2;
  4029ba:	f04f 0800 	mov.w	r8, #0
  4029be:	e6ef      	b.n	4027a0 <ButtonTask+0x20>
					}
					else {
						pio_clear(LED2);
  4029c0:	f04f 6180 	mov.w	r1, #67108864	; 0x4000000
  4029c4:	4630      	mov	r0, r6
  4029c6:	4b1f      	ldr	r3, [pc, #124]	; (402a44 <ButtonTask+0x2c4>)
  4029c8:	4798      	blx	r3
						tg2 = !tg2;
  4029ca:	f04f 0801 	mov.w	r8, #1
  4029ce:	e6e7      	b.n	4027a0 <ButtonTask+0x20>
					}
					break;
					
					case(SW5Push) :
					sendDebugString("NAV5 Push\n");
  4029d0:	4827      	ldr	r0, [pc, #156]	; (402a70 <ButtonTask+0x2f0>)
  4029d2:	4b1a      	ldr	r3, [pc, #104]	; (402a3c <ButtonTask+0x2bc>)
  4029d4:	4798      	blx	r3
					if(tg2){
  4029d6:	f1b8 0f00 	cmp.w	r8, #0
  4029da:	d007      	beq.n	4029ec <ButtonTask+0x26c>
						pio_set(LED2);
  4029dc:	f04f 6180 	mov.w	r1, #67108864	; 0x4000000
  4029e0:	4630      	mov	r0, r6
  4029e2:	4b17      	ldr	r3, [pc, #92]	; (402a40 <ButtonTask+0x2c0>)
  4029e4:	4798      	blx	r3
						tg2 = !tg2;
  4029e6:	f04f 0800 	mov.w	r8, #0
  4029ea:	e6d9      	b.n	4027a0 <ButtonTask+0x20>
					}
					else {
						pio_clear(LED2);
  4029ec:	f04f 6180 	mov.w	r1, #67108864	; 0x4000000
  4029f0:	4630      	mov	r0, r6
  4029f2:	4b14      	ldr	r3, [pc, #80]	; (402a44 <ButtonTask+0x2c4>)
  4029f4:	4798      	blx	r3
						tg2 = !tg2;
  4029f6:	f04f 0801 	mov.w	r8, #1
  4029fa:	e6d1      	b.n	4027a0 <ButtonTask+0x20>
					}
					break;
					
					default :
					sendDebugString("HEIL HITLER!\n");
  4029fc:	481d      	ldr	r0, [pc, #116]	; (402a74 <ButtonTask+0x2f4>)
  4029fe:	4b0f      	ldr	r3, [pc, #60]	; (402a3c <ButtonTask+0x2bc>)
  402a00:	4798      	blx	r3
					if(tgd){
  402a02:	f1b9 0f00 	cmp.w	r9, #0
  402a06:	d037      	beq.n	402a78 <ButtonTask+0x2f8>
						pio_set(LED1);
  402a08:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  402a0c:	4630      	mov	r0, r6
  402a0e:	f8df 9030 	ldr.w	r9, [pc, #48]	; 402a40 <ButtonTask+0x2c0>
  402a12:	47c8      	blx	r9
						pio_set(LED2);
  402a14:	f04f 6180 	mov.w	r1, #67108864	; 0x4000000
  402a18:	4630      	mov	r0, r6
  402a1a:	47c8      	blx	r9
						tgd = !tgd;
  402a1c:	f04f 0900 	mov.w	r9, #0
  402a20:	e6be      	b.n	4027a0 <ButtonTask+0x20>
  402a22:	bf00      	nop
  402a24:	004008d1 	.word	0x004008d1
  402a28:	2040bef0 	.word	0x2040bef0
  402a2c:	00400d09 	.word	0x00400d09
  402a30:	400e1400 	.word	0x400e1400
  402a34:	2040bfb4 	.word	0x2040bfb4
  402a38:	004030d0 	.word	0x004030d0
  402a3c:	00402709 	.word	0x00402709
  402a40:	0040201d 	.word	0x0040201d
  402a44:	00402021 	.word	0x00402021
  402a48:	004030e0 	.word	0x004030e0
  402a4c:	004030f0 	.word	0x004030f0
  402a50:	004030fc 	.word	0x004030fc
  402a54:	00403108 	.word	0x00403108
  402a58:	00403114 	.word	0x00403114
  402a5c:	00403120 	.word	0x00403120
  402a60:	0040312c 	.word	0x0040312c
  402a64:	00403138 	.word	0x00403138
  402a68:	00403144 	.word	0x00403144
  402a6c:	00403150 	.word	0x00403150
  402a70:	0040315c 	.word	0x0040315c
  402a74:	00403168 	.word	0x00403168
					}
					else {
						pio_clear(LED1);
  402a78:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  402a7c:	4630      	mov	r0, r6
  402a7e:	f8df 9014 	ldr.w	r9, [pc, #20]	; 402a94 <ButtonTask+0x314>
  402a82:	47c8      	blx	r9
						pio_clear(LED2);
  402a84:	f04f 6180 	mov.w	r1, #67108864	; 0x4000000
  402a88:	4630      	mov	r0, r6
  402a8a:	47c8      	blx	r9
						tgd = !tgd;
  402a8c:	f04f 0901 	mov.w	r9, #1
  402a90:	e686      	b.n	4027a0 <ButtonTask+0x20>
  402a92:	bf00      	nop
  402a94:	00402021 	.word	0x00402021

00402a98 <main>:

uint32_t ButtonStatus;



int main (void){
  402a98:	b570      	push	{r4, r5, r6, lr}
  402a9a:	b084      	sub	sp, #16
	/* Insert system clock initialization code here (sysclk_init()). */

	board_init();
  402a9c:	4b14      	ldr	r3, [pc, #80]	; (402af0 <main+0x58>)
  402a9e:	4798      	blx	r3
	xTaskCreate(Task1,"TASK1",200,NULL,2,NULL);
  402aa0:	2400      	movs	r4, #0
  402aa2:	9403      	str	r4, [sp, #12]
  402aa4:	9402      	str	r4, [sp, #8]
  402aa6:	9401      	str	r4, [sp, #4]
  402aa8:	2302      	movs	r3, #2
  402aaa:	9300      	str	r3, [sp, #0]
  402aac:	4623      	mov	r3, r4
  402aae:	22c8      	movs	r2, #200	; 0xc8
  402ab0:	4910      	ldr	r1, [pc, #64]	; (402af4 <main+0x5c>)
  402ab2:	4811      	ldr	r0, [pc, #68]	; (402af8 <main+0x60>)
  402ab4:	4d11      	ldr	r5, [pc, #68]	; (402afc <main+0x64>)
  402ab6:	47a8      	blx	r5
	xTaskCreate(ButtonTask,"BUTTONTASK",200,NULL,1,NULL);
  402ab8:	9403      	str	r4, [sp, #12]
  402aba:	9402      	str	r4, [sp, #8]
  402abc:	9401      	str	r4, [sp, #4]
  402abe:	2301      	movs	r3, #1
  402ac0:	9300      	str	r3, [sp, #0]
  402ac2:	4623      	mov	r3, r4
  402ac4:	22c8      	movs	r2, #200	; 0xc8
  402ac6:	490e      	ldr	r1, [pc, #56]	; (402b00 <main+0x68>)
  402ac8:	480e      	ldr	r0, [pc, #56]	; (402b04 <main+0x6c>)
  402aca:	47a8      	blx	r5
	pio_set(LED1);
  402acc:	4e0e      	ldr	r6, [pc, #56]	; (402b08 <main+0x70>)
  402ace:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  402ad2:	4630      	mov	r0, r6
  402ad4:	4d0d      	ldr	r5, [pc, #52]	; (402b0c <main+0x74>)
  402ad6:	47a8      	blx	r5
	pio_set(LED2);
  402ad8:	f04f 6180 	mov.w	r1, #67108864	; 0x4000000
  402adc:	4630      	mov	r0, r6
  402ade:	47a8      	blx	r5
	
	sendDebugString("Lights on\n Hi Shovel Lord\n");
  402ae0:	480b      	ldr	r0, [pc, #44]	; (402b10 <main+0x78>)
  402ae2:	4b0c      	ldr	r3, [pc, #48]	; (402b14 <main+0x7c>)
  402ae4:	4798      	blx	r3
	vTaskStartScheduler();
  402ae6:	4b0c      	ldr	r3, [pc, #48]	; (402b18 <main+0x80>)
  402ae8:	4798      	blx	r3
	
	
	return 0;
	/* Insert application code here, after the board has been initialized. */
}
  402aea:	4620      	mov	r0, r4
  402aec:	b004      	add	sp, #16
  402aee:	bd70      	pop	{r4, r5, r6, pc}
  402af0:	00402345 	.word	0x00402345
  402af4:	00403178 	.word	0x00403178
  402af8:	00402751 	.word	0x00402751
  402afc:	00400fd5 	.word	0x00400fd5
  402b00:	00403180 	.word	0x00403180
  402b04:	00402781 	.word	0x00402781
  402b08:	400e1400 	.word	0x400e1400
  402b0c:	0040201d 	.word	0x0040201d
  402b10:	0040318c 	.word	0x0040318c
  402b14:	00402709 	.word	0x00402709
  402b18:	004011fd 	.word	0x004011fd

00402b1c <PIOA_Handler>:
CLIbuf[CLIbufIndex] = temp;
CLIbufIndex++;
if(temp = "\n") xSemaphoreGiveFromISR(UARTsem,NULL);
}*/

void PIOA_Handler (void) {
  402b1c:	b538      	push	{r3, r4, r5, lr}
	
	ButtonStatus = pio_get_interrupt_status(PIOA);
  402b1e:	4d09      	ldr	r5, [pc, #36]	; (402b44 <PIOA_Handler+0x28>)
  402b20:	4628      	mov	r0, r5
  402b22:	4b09      	ldr	r3, [pc, #36]	; (402b48 <PIOA_Handler+0x2c>)
  402b24:	4798      	blx	r3
  402b26:	4c09      	ldr	r4, [pc, #36]	; (402b4c <PIOA_Handler+0x30>)
  402b28:	6020      	str	r0, [r4, #0]
	ButtonStatus &= pio_get_interrupt_mask(PIOA);
  402b2a:	4628      	mov	r0, r5
  402b2c:	4b08      	ldr	r3, [pc, #32]	; (402b50 <PIOA_Handler+0x34>)
  402b2e:	4798      	blx	r3
  402b30:	6823      	ldr	r3, [r4, #0]
  402b32:	4018      	ands	r0, r3
  402b34:	6020      	str	r0, [r4, #0]
	xSemaphoreGiveFromISR(PIOAsem,NULL);
  402b36:	2100      	movs	r1, #0
  402b38:	4b06      	ldr	r3, [pc, #24]	; (402b54 <PIOA_Handler+0x38>)
  402b3a:	6818      	ldr	r0, [r3, #0]
  402b3c:	4b06      	ldr	r3, [pc, #24]	; (402b58 <PIOA_Handler+0x3c>)
  402b3e:	4798      	blx	r3
  402b40:	bd38      	pop	{r3, r4, r5, pc}
  402b42:	bf00      	nop
  402b44:	400e0e00 	.word	0x400e0e00
  402b48:	00402155 	.word	0x00402155
  402b4c:	2040bfb4 	.word	0x2040bfb4
  402b50:	00402159 	.word	0x00402159
  402b54:	2040bef0 	.word	0x2040bef0
  402b58:	00400c29 	.word	0x00400c29

00402b5c <__libc_init_array>:
  402b5c:	b570      	push	{r4, r5, r6, lr}
  402b5e:	4e0f      	ldr	r6, [pc, #60]	; (402b9c <__libc_init_array+0x40>)
  402b60:	4d0f      	ldr	r5, [pc, #60]	; (402ba0 <__libc_init_array+0x44>)
  402b62:	1b76      	subs	r6, r6, r5
  402b64:	10b6      	asrs	r6, r6, #2
  402b66:	bf18      	it	ne
  402b68:	2400      	movne	r4, #0
  402b6a:	d005      	beq.n	402b78 <__libc_init_array+0x1c>
  402b6c:	3401      	adds	r4, #1
  402b6e:	f855 3b04 	ldr.w	r3, [r5], #4
  402b72:	4798      	blx	r3
  402b74:	42a6      	cmp	r6, r4
  402b76:	d1f9      	bne.n	402b6c <__libc_init_array+0x10>
  402b78:	4e0a      	ldr	r6, [pc, #40]	; (402ba4 <__libc_init_array+0x48>)
  402b7a:	4d0b      	ldr	r5, [pc, #44]	; (402ba8 <__libc_init_array+0x4c>)
  402b7c:	1b76      	subs	r6, r6, r5
  402b7e:	f000 fb17 	bl	4031b0 <_init>
  402b82:	10b6      	asrs	r6, r6, #2
  402b84:	bf18      	it	ne
  402b86:	2400      	movne	r4, #0
  402b88:	d006      	beq.n	402b98 <__libc_init_array+0x3c>
  402b8a:	3401      	adds	r4, #1
  402b8c:	f855 3b04 	ldr.w	r3, [r5], #4
  402b90:	4798      	blx	r3
  402b92:	42a6      	cmp	r6, r4
  402b94:	d1f9      	bne.n	402b8a <__libc_init_array+0x2e>
  402b96:	bd70      	pop	{r4, r5, r6, pc}
  402b98:	bd70      	pop	{r4, r5, r6, pc}
  402b9a:	bf00      	nop
  402b9c:	004031bc 	.word	0x004031bc
  402ba0:	004031bc 	.word	0x004031bc
  402ba4:	004031c4 	.word	0x004031c4
  402ba8:	004031bc 	.word	0x004031bc

00402bac <memcpy>:
  402bac:	4684      	mov	ip, r0
  402bae:	ea41 0300 	orr.w	r3, r1, r0
  402bb2:	f013 0303 	ands.w	r3, r3, #3
  402bb6:	d16d      	bne.n	402c94 <memcpy+0xe8>
  402bb8:	3a40      	subs	r2, #64	; 0x40
  402bba:	d341      	bcc.n	402c40 <memcpy+0x94>
  402bbc:	f851 3b04 	ldr.w	r3, [r1], #4
  402bc0:	f840 3b04 	str.w	r3, [r0], #4
  402bc4:	f851 3b04 	ldr.w	r3, [r1], #4
  402bc8:	f840 3b04 	str.w	r3, [r0], #4
  402bcc:	f851 3b04 	ldr.w	r3, [r1], #4
  402bd0:	f840 3b04 	str.w	r3, [r0], #4
  402bd4:	f851 3b04 	ldr.w	r3, [r1], #4
  402bd8:	f840 3b04 	str.w	r3, [r0], #4
  402bdc:	f851 3b04 	ldr.w	r3, [r1], #4
  402be0:	f840 3b04 	str.w	r3, [r0], #4
  402be4:	f851 3b04 	ldr.w	r3, [r1], #4
  402be8:	f840 3b04 	str.w	r3, [r0], #4
  402bec:	f851 3b04 	ldr.w	r3, [r1], #4
  402bf0:	f840 3b04 	str.w	r3, [r0], #4
  402bf4:	f851 3b04 	ldr.w	r3, [r1], #4
  402bf8:	f840 3b04 	str.w	r3, [r0], #4
  402bfc:	f851 3b04 	ldr.w	r3, [r1], #4
  402c00:	f840 3b04 	str.w	r3, [r0], #4
  402c04:	f851 3b04 	ldr.w	r3, [r1], #4
  402c08:	f840 3b04 	str.w	r3, [r0], #4
  402c0c:	f851 3b04 	ldr.w	r3, [r1], #4
  402c10:	f840 3b04 	str.w	r3, [r0], #4
  402c14:	f851 3b04 	ldr.w	r3, [r1], #4
  402c18:	f840 3b04 	str.w	r3, [r0], #4
  402c1c:	f851 3b04 	ldr.w	r3, [r1], #4
  402c20:	f840 3b04 	str.w	r3, [r0], #4
  402c24:	f851 3b04 	ldr.w	r3, [r1], #4
  402c28:	f840 3b04 	str.w	r3, [r0], #4
  402c2c:	f851 3b04 	ldr.w	r3, [r1], #4
  402c30:	f840 3b04 	str.w	r3, [r0], #4
  402c34:	f851 3b04 	ldr.w	r3, [r1], #4
  402c38:	f840 3b04 	str.w	r3, [r0], #4
  402c3c:	3a40      	subs	r2, #64	; 0x40
  402c3e:	d2bd      	bcs.n	402bbc <memcpy+0x10>
  402c40:	3230      	adds	r2, #48	; 0x30
  402c42:	d311      	bcc.n	402c68 <memcpy+0xbc>
  402c44:	f851 3b04 	ldr.w	r3, [r1], #4
  402c48:	f840 3b04 	str.w	r3, [r0], #4
  402c4c:	f851 3b04 	ldr.w	r3, [r1], #4
  402c50:	f840 3b04 	str.w	r3, [r0], #4
  402c54:	f851 3b04 	ldr.w	r3, [r1], #4
  402c58:	f840 3b04 	str.w	r3, [r0], #4
  402c5c:	f851 3b04 	ldr.w	r3, [r1], #4
  402c60:	f840 3b04 	str.w	r3, [r0], #4
  402c64:	3a10      	subs	r2, #16
  402c66:	d2ed      	bcs.n	402c44 <memcpy+0x98>
  402c68:	320c      	adds	r2, #12
  402c6a:	d305      	bcc.n	402c78 <memcpy+0xcc>
  402c6c:	f851 3b04 	ldr.w	r3, [r1], #4
  402c70:	f840 3b04 	str.w	r3, [r0], #4
  402c74:	3a04      	subs	r2, #4
  402c76:	d2f9      	bcs.n	402c6c <memcpy+0xc0>
  402c78:	3204      	adds	r2, #4
  402c7a:	d008      	beq.n	402c8e <memcpy+0xe2>
  402c7c:	07d2      	lsls	r2, r2, #31
  402c7e:	bf1c      	itt	ne
  402c80:	f811 3b01 	ldrbne.w	r3, [r1], #1
  402c84:	f800 3b01 	strbne.w	r3, [r0], #1
  402c88:	d301      	bcc.n	402c8e <memcpy+0xe2>
  402c8a:	880b      	ldrh	r3, [r1, #0]
  402c8c:	8003      	strh	r3, [r0, #0]
  402c8e:	4660      	mov	r0, ip
  402c90:	4770      	bx	lr
  402c92:	bf00      	nop
  402c94:	2a08      	cmp	r2, #8
  402c96:	d313      	bcc.n	402cc0 <memcpy+0x114>
  402c98:	078b      	lsls	r3, r1, #30
  402c9a:	d08d      	beq.n	402bb8 <memcpy+0xc>
  402c9c:	f010 0303 	ands.w	r3, r0, #3
  402ca0:	d08a      	beq.n	402bb8 <memcpy+0xc>
  402ca2:	f1c3 0304 	rsb	r3, r3, #4
  402ca6:	1ad2      	subs	r2, r2, r3
  402ca8:	07db      	lsls	r3, r3, #31
  402caa:	bf1c      	itt	ne
  402cac:	f811 3b01 	ldrbne.w	r3, [r1], #1
  402cb0:	f800 3b01 	strbne.w	r3, [r0], #1
  402cb4:	d380      	bcc.n	402bb8 <memcpy+0xc>
  402cb6:	f831 3b02 	ldrh.w	r3, [r1], #2
  402cba:	f820 3b02 	strh.w	r3, [r0], #2
  402cbe:	e77b      	b.n	402bb8 <memcpy+0xc>
  402cc0:	3a04      	subs	r2, #4
  402cc2:	d3d9      	bcc.n	402c78 <memcpy+0xcc>
  402cc4:	3a01      	subs	r2, #1
  402cc6:	f811 3b01 	ldrb.w	r3, [r1], #1
  402cca:	f800 3b01 	strb.w	r3, [r0], #1
  402cce:	d2f9      	bcs.n	402cc4 <memcpy+0x118>
  402cd0:	780b      	ldrb	r3, [r1, #0]
  402cd2:	7003      	strb	r3, [r0, #0]
  402cd4:	784b      	ldrb	r3, [r1, #1]
  402cd6:	7043      	strb	r3, [r0, #1]
  402cd8:	788b      	ldrb	r3, [r1, #2]
  402cda:	7083      	strb	r3, [r0, #2]
  402cdc:	4660      	mov	r0, ip
  402cde:	4770      	bx	lr

00402ce0 <memset>:
  402ce0:	b470      	push	{r4, r5, r6}
  402ce2:	0784      	lsls	r4, r0, #30
  402ce4:	d046      	beq.n	402d74 <memset+0x94>
  402ce6:	1e54      	subs	r4, r2, #1
  402ce8:	2a00      	cmp	r2, #0
  402cea:	d041      	beq.n	402d70 <memset+0x90>
  402cec:	b2cd      	uxtb	r5, r1
  402cee:	4603      	mov	r3, r0
  402cf0:	e002      	b.n	402cf8 <memset+0x18>
  402cf2:	1e62      	subs	r2, r4, #1
  402cf4:	b3e4      	cbz	r4, 402d70 <memset+0x90>
  402cf6:	4614      	mov	r4, r2
  402cf8:	f803 5b01 	strb.w	r5, [r3], #1
  402cfc:	079a      	lsls	r2, r3, #30
  402cfe:	d1f8      	bne.n	402cf2 <memset+0x12>
  402d00:	2c03      	cmp	r4, #3
  402d02:	d92e      	bls.n	402d62 <memset+0x82>
  402d04:	b2cd      	uxtb	r5, r1
  402d06:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  402d0a:	2c0f      	cmp	r4, #15
  402d0c:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  402d10:	d919      	bls.n	402d46 <memset+0x66>
  402d12:	f103 0210 	add.w	r2, r3, #16
  402d16:	4626      	mov	r6, r4
  402d18:	3e10      	subs	r6, #16
  402d1a:	2e0f      	cmp	r6, #15
  402d1c:	f842 5c10 	str.w	r5, [r2, #-16]
  402d20:	f842 5c0c 	str.w	r5, [r2, #-12]
  402d24:	f842 5c08 	str.w	r5, [r2, #-8]
  402d28:	f842 5c04 	str.w	r5, [r2, #-4]
  402d2c:	f102 0210 	add.w	r2, r2, #16
  402d30:	d8f2      	bhi.n	402d18 <memset+0x38>
  402d32:	f1a4 0210 	sub.w	r2, r4, #16
  402d36:	f022 020f 	bic.w	r2, r2, #15
  402d3a:	f004 040f 	and.w	r4, r4, #15
  402d3e:	3210      	adds	r2, #16
  402d40:	2c03      	cmp	r4, #3
  402d42:	4413      	add	r3, r2
  402d44:	d90d      	bls.n	402d62 <memset+0x82>
  402d46:	461e      	mov	r6, r3
  402d48:	4622      	mov	r2, r4
  402d4a:	3a04      	subs	r2, #4
  402d4c:	2a03      	cmp	r2, #3
  402d4e:	f846 5b04 	str.w	r5, [r6], #4
  402d52:	d8fa      	bhi.n	402d4a <memset+0x6a>
  402d54:	1f22      	subs	r2, r4, #4
  402d56:	f022 0203 	bic.w	r2, r2, #3
  402d5a:	3204      	adds	r2, #4
  402d5c:	4413      	add	r3, r2
  402d5e:	f004 0403 	and.w	r4, r4, #3
  402d62:	b12c      	cbz	r4, 402d70 <memset+0x90>
  402d64:	b2c9      	uxtb	r1, r1
  402d66:	441c      	add	r4, r3
  402d68:	f803 1b01 	strb.w	r1, [r3], #1
  402d6c:	42a3      	cmp	r3, r4
  402d6e:	d1fb      	bne.n	402d68 <memset+0x88>
  402d70:	bc70      	pop	{r4, r5, r6}
  402d72:	4770      	bx	lr
  402d74:	4614      	mov	r4, r2
  402d76:	4603      	mov	r3, r0
  402d78:	e7c2      	b.n	402d00 <memset+0x20>
  402d7a:	bf00      	nop
  402d7c:	0000      	movs	r0, r0
	...

00402d80 <strlen>:
  402d80:	f890 f000 	pld	[r0]
  402d84:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  402d88:	f020 0107 	bic.w	r1, r0, #7
  402d8c:	f06f 0c00 	mvn.w	ip, #0
  402d90:	f010 0407 	ands.w	r4, r0, #7
  402d94:	f891 f020 	pld	[r1, #32]
  402d98:	f040 8049 	bne.w	402e2e <strlen+0xae>
  402d9c:	f04f 0400 	mov.w	r4, #0
  402da0:	f06f 0007 	mvn.w	r0, #7
  402da4:	e9d1 2300 	ldrd	r2, r3, [r1]
  402da8:	f891 f040 	pld	[r1, #64]	; 0x40
  402dac:	f100 0008 	add.w	r0, r0, #8
  402db0:	fa82 f24c 	uadd8	r2, r2, ip
  402db4:	faa4 f28c 	sel	r2, r4, ip
  402db8:	fa83 f34c 	uadd8	r3, r3, ip
  402dbc:	faa2 f38c 	sel	r3, r2, ip
  402dc0:	bb4b      	cbnz	r3, 402e16 <strlen+0x96>
  402dc2:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  402dc6:	fa82 f24c 	uadd8	r2, r2, ip
  402dca:	f100 0008 	add.w	r0, r0, #8
  402dce:	faa4 f28c 	sel	r2, r4, ip
  402dd2:	fa83 f34c 	uadd8	r3, r3, ip
  402dd6:	faa2 f38c 	sel	r3, r2, ip
  402dda:	b9e3      	cbnz	r3, 402e16 <strlen+0x96>
  402ddc:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  402de0:	fa82 f24c 	uadd8	r2, r2, ip
  402de4:	f100 0008 	add.w	r0, r0, #8
  402de8:	faa4 f28c 	sel	r2, r4, ip
  402dec:	fa83 f34c 	uadd8	r3, r3, ip
  402df0:	faa2 f38c 	sel	r3, r2, ip
  402df4:	b97b      	cbnz	r3, 402e16 <strlen+0x96>
  402df6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  402dfa:	f101 0120 	add.w	r1, r1, #32
  402dfe:	fa82 f24c 	uadd8	r2, r2, ip
  402e02:	f100 0008 	add.w	r0, r0, #8
  402e06:	faa4 f28c 	sel	r2, r4, ip
  402e0a:	fa83 f34c 	uadd8	r3, r3, ip
  402e0e:	faa2 f38c 	sel	r3, r2, ip
  402e12:	2b00      	cmp	r3, #0
  402e14:	d0c6      	beq.n	402da4 <strlen+0x24>
  402e16:	2a00      	cmp	r2, #0
  402e18:	bf04      	itt	eq
  402e1a:	3004      	addeq	r0, #4
  402e1c:	461a      	moveq	r2, r3
  402e1e:	ba12      	rev	r2, r2
  402e20:	fab2 f282 	clz	r2, r2
  402e24:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  402e28:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  402e2c:	4770      	bx	lr
  402e2e:	e9d1 2300 	ldrd	r2, r3, [r1]
  402e32:	f004 0503 	and.w	r5, r4, #3
  402e36:	f1c4 0000 	rsb	r0, r4, #0
  402e3a:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  402e3e:	f014 0f04 	tst.w	r4, #4
  402e42:	f891 f040 	pld	[r1, #64]	; 0x40
  402e46:	fa0c f505 	lsl.w	r5, ip, r5
  402e4a:	ea62 0205 	orn	r2, r2, r5
  402e4e:	bf1c      	itt	ne
  402e50:	ea63 0305 	ornne	r3, r3, r5
  402e54:	4662      	movne	r2, ip
  402e56:	f04f 0400 	mov.w	r4, #0
  402e5a:	e7a9      	b.n	402db0 <strlen+0x30>

00402e5c <register_fini>:
  402e5c:	4b02      	ldr	r3, [pc, #8]	; (402e68 <register_fini+0xc>)
  402e5e:	b113      	cbz	r3, 402e66 <register_fini+0xa>
  402e60:	4802      	ldr	r0, [pc, #8]	; (402e6c <register_fini+0x10>)
  402e62:	f000 b805 	b.w	402e70 <atexit>
  402e66:	4770      	bx	lr
  402e68:	00000000 	.word	0x00000000
  402e6c:	00402e7d 	.word	0x00402e7d

00402e70 <atexit>:
  402e70:	2300      	movs	r3, #0
  402e72:	4601      	mov	r1, r0
  402e74:	461a      	mov	r2, r3
  402e76:	4618      	mov	r0, r3
  402e78:	f000 b814 	b.w	402ea4 <__register_exitproc>

00402e7c <__libc_fini_array>:
  402e7c:	b538      	push	{r3, r4, r5, lr}
  402e7e:	4d07      	ldr	r5, [pc, #28]	; (402e9c <__libc_fini_array+0x20>)
  402e80:	4c07      	ldr	r4, [pc, #28]	; (402ea0 <__libc_fini_array+0x24>)
  402e82:	1b2c      	subs	r4, r5, r4
  402e84:	10a4      	asrs	r4, r4, #2
  402e86:	d005      	beq.n	402e94 <__libc_fini_array+0x18>
  402e88:	3c01      	subs	r4, #1
  402e8a:	f855 3d04 	ldr.w	r3, [r5, #-4]!
  402e8e:	4798      	blx	r3
  402e90:	2c00      	cmp	r4, #0
  402e92:	d1f9      	bne.n	402e88 <__libc_fini_array+0xc>
  402e94:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  402e98:	f000 b994 	b.w	4031c4 <_fini>
  402e9c:	004031d4 	.word	0x004031d4
  402ea0:	004031d0 	.word	0x004031d0

00402ea4 <__register_exitproc>:
  402ea4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  402ea8:	4c25      	ldr	r4, [pc, #148]	; (402f40 <__register_exitproc+0x9c>)
  402eaa:	6825      	ldr	r5, [r4, #0]
  402eac:	f8d5 4148 	ldr.w	r4, [r5, #328]	; 0x148
  402eb0:	4606      	mov	r6, r0
  402eb2:	4688      	mov	r8, r1
  402eb4:	4692      	mov	sl, r2
  402eb6:	4699      	mov	r9, r3
  402eb8:	b3c4      	cbz	r4, 402f2c <__register_exitproc+0x88>
  402eba:	6860      	ldr	r0, [r4, #4]
  402ebc:	281f      	cmp	r0, #31
  402ebe:	dc17      	bgt.n	402ef0 <__register_exitproc+0x4c>
  402ec0:	1c43      	adds	r3, r0, #1
  402ec2:	b176      	cbz	r6, 402ee2 <__register_exitproc+0x3e>
  402ec4:	eb04 0580 	add.w	r5, r4, r0, lsl #2
  402ec8:	2201      	movs	r2, #1
  402eca:	f8c5 a088 	str.w	sl, [r5, #136]	; 0x88
  402ece:	f8d4 1188 	ldr.w	r1, [r4, #392]	; 0x188
  402ed2:	4082      	lsls	r2, r0
  402ed4:	4311      	orrs	r1, r2
  402ed6:	2e02      	cmp	r6, #2
  402ed8:	f8c4 1188 	str.w	r1, [r4, #392]	; 0x188
  402edc:	f8c5 9108 	str.w	r9, [r5, #264]	; 0x108
  402ee0:	d01e      	beq.n	402f20 <__register_exitproc+0x7c>
  402ee2:	3002      	adds	r0, #2
  402ee4:	6063      	str	r3, [r4, #4]
  402ee6:	f844 8020 	str.w	r8, [r4, r0, lsl #2]
  402eea:	2000      	movs	r0, #0
  402eec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  402ef0:	4b14      	ldr	r3, [pc, #80]	; (402f44 <__register_exitproc+0xa0>)
  402ef2:	b303      	cbz	r3, 402f36 <__register_exitproc+0x92>
  402ef4:	f44f 70c8 	mov.w	r0, #400	; 0x190
  402ef8:	f3af 8000 	nop.w
  402efc:	4604      	mov	r4, r0
  402efe:	b1d0      	cbz	r0, 402f36 <__register_exitproc+0x92>
  402f00:	f8d5 3148 	ldr.w	r3, [r5, #328]	; 0x148
  402f04:	2700      	movs	r7, #0
  402f06:	e880 0088 	stmia.w	r0, {r3, r7}
  402f0a:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
  402f0e:	4638      	mov	r0, r7
  402f10:	2301      	movs	r3, #1
  402f12:	f8c4 7188 	str.w	r7, [r4, #392]	; 0x188
  402f16:	f8c4 718c 	str.w	r7, [r4, #396]	; 0x18c
  402f1a:	2e00      	cmp	r6, #0
  402f1c:	d0e1      	beq.n	402ee2 <__register_exitproc+0x3e>
  402f1e:	e7d1      	b.n	402ec4 <__register_exitproc+0x20>
  402f20:	f8d4 118c 	ldr.w	r1, [r4, #396]	; 0x18c
  402f24:	430a      	orrs	r2, r1
  402f26:	f8c4 218c 	str.w	r2, [r4, #396]	; 0x18c
  402f2a:	e7da      	b.n	402ee2 <__register_exitproc+0x3e>
  402f2c:	f505 74a6 	add.w	r4, r5, #332	; 0x14c
  402f30:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
  402f34:	e7c1      	b.n	402eba <__register_exitproc+0x16>
  402f36:	f04f 30ff 	mov.w	r0, #4294967295
  402f3a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  402f3e:	bf00      	nop
  402f40:	004031ac 	.word	0x004031ac
  402f44:	00000000 	.word	0x00000000
  402f48:	454c4449 	.word	0x454c4449
  402f4c:	00000000 	.word	0x00000000
  402f50:	09632509 	.word	0x09632509
  402f54:	25097525 	.word	0x25097525
  402f58:	75250975 	.word	0x75250975
  402f5c:	00000a0d 	.word	0x00000a0d
  402f60:	51726d54 	.word	0x51726d54
  402f64:	00000000 	.word	0x00000000
  402f68:	20726d54 	.word	0x20726d54
  402f6c:	00637653 	.word	0x00637653
  402f70:	00002580 	.word	0x00002580
  402f74:	000000c0 	.word	0x000000c0
  402f78:	00000800 	.word	0x00000800
  402f7c:	4c4c454d 	.word	0x4c4c454d
  402f80:	4f525441 	.word	0x4f525441
  402f84:	3030394e 	.word	0x3030394e
  402f88:	4f422030 	.word	0x4f422030
  402f8c:	5320544f 	.word	0x5320544f
  402f90:	45555145 	.word	0x45555145
  402f94:	0a45434e 	.word	0x0a45434e
  402f98:	54524155 	.word	0x54524155
  402f9c:	4e4f4320 	.word	0x4e4f4320
  402fa0:	454c4f53 	.word	0x454c4f53
  402fa4:	41545320 	.word	0x41545320
  402fa8:	44455452 	.word	0x44455452
  402fac:	204e4f20 	.word	0x204e4f20
  402fb0:	54524155 	.word	0x54524155
  402fb4:	61420a34 	.word	0x61420a34
  402fb8:	61526475 	.word	0x61526475
  402fbc:	203a6574 	.word	0x203a6574
  402fc0:	32353131 	.word	0x32353131
  402fc4:	420a3030 	.word	0x420a3030
  402fc8:	3a737469 	.word	0x3a737469
  402fcc:	4e0a3820 	.word	0x4e0a3820
  402fd0:	7473206f 	.word	0x7473206f
  402fd4:	6220706f 	.word	0x6220706f
  402fd8:	20737469 	.word	0x20737469
  402fdc:	0000000a 	.word	0x0000000a
  402fe0:	43544157 	.word	0x43544157
  402fe4:	474f4448 	.word	0x474f4448
  402fe8:	494e4920 	.word	0x494e4920
  402fec:	4c414954 	.word	0x4c414954
  402ff0:	54415a49 	.word	0x54415a49
  402ff4:	204e4f49 	.word	0x204e4f49
  402ff8:	5453202d 	.word	0x5453202d
  402ffc:	45545241 	.word	0x45545241
  403000:	00000a44 	.word	0x00000a44
  403004:	43544157 	.word	0x43544157
  403008:	474f4448 	.word	0x474f4448
  40300c:	494e4920 	.word	0x494e4920
  403010:	4c414954 	.word	0x4c414954
  403014:	54415a49 	.word	0x54415a49
  403018:	204e4f49 	.word	0x204e4f49
  40301c:	4946202d 	.word	0x4946202d
  403020:	4853494e 	.word	0x4853494e
  403024:	000a4445 	.word	0x000a4445
  403028:	424f4c47 	.word	0x424f4c47
  40302c:	49204c41 	.word	0x49204c41
  403030:	49205152 	.word	0x49205152
  403034:	4954494e 	.word	0x4954494e
  403038:	5a494c41 	.word	0x5a494c41
  40303c:	4f495441 	.word	0x4f495441
  403040:	202d204e 	.word	0x202d204e
  403044:	52415453 	.word	0x52415453
  403048:	0a444554 	.word	0x0a444554
  40304c:	00000000 	.word	0x00000000
  403050:	424f4c47 	.word	0x424f4c47
  403054:	49204c41 	.word	0x49204c41
  403058:	49205152 	.word	0x49205152
  40305c:	4954494e 	.word	0x4954494e
  403060:	5a494c41 	.word	0x5a494c41
  403064:	4f495441 	.word	0x4f495441
  403068:	202d204e 	.word	0x202d204e
  40306c:	494e4946 	.word	0x494e4946
  403070:	44454853 	.word	0x44454853
  403074:	0000000a 	.word	0x0000000a
  403078:	49524550 	.word	0x49524550
  40307c:	52454850 	.word	0x52454850
  403080:	49204c41 	.word	0x49204c41
  403084:	49205152 	.word	0x49205152
  403088:	4954494e 	.word	0x4954494e
  40308c:	5a494c41 	.word	0x5a494c41
  403090:	4f495441 	.word	0x4f495441
  403094:	202d204e 	.word	0x202d204e
  403098:	52415453 	.word	0x52415453
  40309c:	0a444554 	.word	0x0a444554
  4030a0:	00000000 	.word	0x00000000
  4030a4:	49524550 	.word	0x49524550
  4030a8:	52454850 	.word	0x52454850
  4030ac:	49204c41 	.word	0x49204c41
  4030b0:	49205152 	.word	0x49205152
  4030b4:	4954494e 	.word	0x4954494e
  4030b8:	5a494c41 	.word	0x5a494c41
  4030bc:	4f495441 	.word	0x4f495441
  4030c0:	202d204e 	.word	0x202d204e
  4030c4:	494e4946 	.word	0x494e4946
  4030c8:	44454853 	.word	0x44454853
  4030cc:	0000000a 	.word	0x0000000a
  4030d0:	68737550 	.word	0x68737550
  4030d4:	69775320 	.word	0x69775320
  4030d8:	20686374 	.word	0x20686374
  4030dc:	00000a31 	.word	0x00000a31
  4030e0:	68737550 	.word	0x68737550
  4030e4:	69775320 	.word	0x69775320
  4030e8:	20686374 	.word	0x20686374
  4030ec:	00000a32 	.word	0x00000a32
  4030f0:	3456414e 	.word	0x3456414e
  4030f4:	66654c20 	.word	0x66654c20
  4030f8:	00000a74 	.word	0x00000a74
  4030fc:	3456414e 	.word	0x3456414e
  403100:	67695220 	.word	0x67695220
  403104:	000a7468 	.word	0x000a7468
  403108:	3456414e 	.word	0x3456414e
  40310c:	0a705520 	.word	0x0a705520
  403110:	00000000 	.word	0x00000000
  403114:	3456414e 	.word	0x3456414e
  403118:	776f4420 	.word	0x776f4420
  40311c:	00000a6e 	.word	0x00000a6e
  403120:	3456414e 	.word	0x3456414e
  403124:	73755020 	.word	0x73755020
  403128:	00000a68 	.word	0x00000a68
  40312c:	3556414e 	.word	0x3556414e
  403130:	66654c20 	.word	0x66654c20
  403134:	00000a74 	.word	0x00000a74
  403138:	3556414e 	.word	0x3556414e
  40313c:	67695220 	.word	0x67695220
  403140:	000a7468 	.word	0x000a7468
  403144:	3556414e 	.word	0x3556414e
  403148:	0a705520 	.word	0x0a705520
  40314c:	00000000 	.word	0x00000000
  403150:	3556414e 	.word	0x3556414e
  403154:	776f4420 	.word	0x776f4420
  403158:	00000a6e 	.word	0x00000a6e
  40315c:	3556414e 	.word	0x3556414e
  403160:	73755020 	.word	0x73755020
  403164:	00000a68 	.word	0x00000a68
  403168:	4c494548 	.word	0x4c494548
  40316c:	54494820 	.word	0x54494820
  403170:	2152454c 	.word	0x2152454c
  403174:	0000000a 	.word	0x0000000a
  403178:	4b534154 	.word	0x4b534154
  40317c:	00000031 	.word	0x00000031
  403180:	54545542 	.word	0x54545542
  403184:	41544e4f 	.word	0x41544e4f
  403188:	00004b53 	.word	0x00004b53
  40318c:	6867694c 	.word	0x6867694c
  403190:	6f207374 	.word	0x6f207374
  403194:	48200a6e 	.word	0x48200a6e
  403198:	68532069 	.word	0x68532069
  40319c:	6c65766f 	.word	0x6c65766f
  4031a0:	726f4c20 	.word	0x726f4c20
  4031a4:	00000a64 	.word	0x00000a64
  4031a8:	00000043 	.word	0x00000043

004031ac <_global_impure_ptr>:
  4031ac:	20400010                                ..@ 

004031b0 <_init>:
  4031b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4031b2:	bf00      	nop
  4031b4:	bcf8      	pop	{r3, r4, r5, r6, r7}
  4031b6:	bc08      	pop	{r3}
  4031b8:	469e      	mov	lr, r3
  4031ba:	4770      	bx	lr

004031bc <__init_array_start>:
  4031bc:	00402e5d 	.word	0x00402e5d

004031c0 <__frame_dummy_init_array_entry>:
  4031c0:	00400165                                e.@.

004031c4 <_fini>:
  4031c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4031c6:	bf00      	nop
  4031c8:	bcf8      	pop	{r3, r4, r5, r6, r7}
  4031ca:	bc08      	pop	{r3}
  4031cc:	469e      	mov	lr, r3
  4031ce:	4770      	bx	lr

004031d0 <__fini_array_start>:
  4031d0:	00400141 	.word	0x00400141
